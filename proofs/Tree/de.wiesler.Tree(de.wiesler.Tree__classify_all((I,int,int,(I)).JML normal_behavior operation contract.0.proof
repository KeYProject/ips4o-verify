\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Jan 01 19:19:56 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sat Jan 01 19:19:56 CET 2022
contract=de.wiesler.Tree[de.wiesler.Tree\\:\\:classify_all([I,int,int,[I)].JML normal_behavior operation contract.0
name=de.wiesler.Tree[de.wiesler.Tree\\:\\:classify_all([I,int,int,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "7" (keyUser "Julian" ) (keyVersion "666bcb0c95"))

(autoModeTime "137703")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaMulInt" (formula "1") (term "1,1,1,0,0,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "eqSymm" (formula "16") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "15"))
(rule "eqSymm" (formula "11"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "8") (term "1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,0,0,0,0,1"))
(rule "assignment" (formula "16") (term "1"))
 (builtin "One Step Simplification" (formula "16"))
(rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "13") (ifseqformula "3"))
 (builtin "One Step Simplification" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_classify_all,savedHeapBefore_classify_all,_beginBefore_classify_all,_endBefore_classify_all,_indicesBefore_classify_all,_valuesBefore_classify_all"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallUnfoldArguments" (formula "25") (term "1"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var_1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var_2"))
(rule "assignment_read_length" (formula "25"))
(branch "Normal Execution (_indices != null)"
    (builtin "One Step Simplification" (formula "25"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_3"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "12"))
    (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_fill,exc_0,heapAfter_fill,anon_heap_fill") (contract "de.wiesler.Functions[de.wiesler.Functions::fill([I,int,int,int)].JML normal_behavior operation contract.0"))
   (branch "Post (fill)"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "translateJavaSubInt" (formula "19") (term "2,1,0,0"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "21"))
      (rule "polySimp_elimSub" (formula "19") (term "2,1,0"))
      (rule "mul_literals" (formula "19") (term "1,2,1,0"))
      (rule "polySimp_addComm1" (formula "19") (term "2,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "0,2,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
      (rule "blockEmpty" (formula "29") (term "1"))
      (rule "commute_and" (formula "21") (term "0,0"))
      (rule "for_to_while" (formula "29") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
      (rule "variableDeclarationAssign" (formula "29") (term "1"))
      (rule "variableDeclaration" (formula "29") (term "1") (newnames "i"))
      (rule "assignment" (formula "29") (term "1"))
       (builtin "One Step Simplification" (formula "29"))
       (builtin "Loop Invariant" (formula "29") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
         (rule "andRight" (formula "29"))
         (branch "Case 1"
            (rule "andRight" (formula "29"))
            (branch "Case 1"
               (rule "andRight" (formula "29"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "leq_literals" (formula "29"))
                  (rule "closeTrue" (formula "29"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_leqRight" (formula "29"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "4")))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "29"))
               (rule "translateJavaAddInt" (formula "29") (term "1,1,1,1,0"))
               (rule "add_literals" (formula "29") (term "1,1,1,1,0"))
               (rule "allRight" (formula "29") (inst "sk=k_0"))
               (rule "impRight" (formula "29"))
               (rule "andLeft" (formula "1"))
               (rule "translateJavaShiftLeftIntZero" (formula "31") (term "0,0"))
               (rule "translateJavaShiftLeftIntConstant" (formula "31") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "0"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "14"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
               (rule "mul_literals" (formula "31") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "javaShiftLeftIntDef" (formula "31") (term "1,1,1"))
               (rule "mod_axiom" (formula "31") (term "1,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,1,1"))
               (rule "div_literals" (formula "31") (term "0,1,1,0,1,1,1"))
               (rule "mul_literals" (formula "31") (term "1,1,0,1,1,1"))
               (rule "add_literals" (formula "31") (term "1,0,1,1,1"))
               (rule "shiftleft_literals" (formula "31") (term "0,1,1,1"))
               (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=arr_0"))
               (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "8")))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0"))
               (rule "qeq_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "nnf_imp2or" (formula "23") (term "0"))
               (rule "expand_moduloInteger" (formula "31") (term "1,1,1"))
               (rule "replace_int_RANGE" (formula "31") (term "1,1,1,1,1"))
               (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,1,1"))
               (rule "replace_int_MIN" (formula "31") (term "0,1,1,1"))
               (rule "add_literals" (formula "31") (term "0,1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "31") (term "1,1"))
               (rule "add_literals" (formula "31") (term "0,1,1"))
               (rule "mod_axiom" (formula "31") (term "1,1,1"))
               (rule "div_literals" (formula "31") (term "0,0,1,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1"))
               (rule "mul_literals" (formula "31") (term "1,1,1,1"))
               (rule "add_literals" (formula "31") (term "1,1,1"))
               (rule "add_literals" (formula "31") (term "1,1"))
               (rule "nnf_notAnd" (formula "23") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
               (rule "mul_literals" (formula "23") (term "1,1,0,0"))
               (rule "commute_and" (formula "31"))
               (rule "inEqSimp_and_antiSymm0" (formula "31"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthNotNegative" (formula "11") (term "0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "arrayLengthNotNegative" (formula "15") (term "0"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1"))
               (rule "polySimp_elimOne" (formula "15") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "qeq_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthNotNegative" (formula "16") (term "0"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
               (rule "qeq_literals" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "allLeft" (formula "24") (inst "t=k_0"))
               (rule "replaceKnownSelect_taclet10000_0" (formula "24") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_1" (formula "24") (term "0,1"))
               (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0,1"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1"))
               (rule "leq_literals" (formula "24") (term "0,1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
               (rule "qeq_literals" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "closeFalse" (formula "24"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "29"))
            (rule "wellFormedAnonEQ" (formula "29") (ifseqformula "19"))
            (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "29"))
         )
      )
      (branch "Body Preserves Invariant"
          (builtin "One Step Simplification" (formula "31"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "translateJavaSubInt" (formula "31") (term "0,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "31") (term "0,1,1,1,0,1"))
         (rule "translateJavaAddInt" (formula "31") (term "1,1,1,1,0,1,0,0,1,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "23") (term "1,1,1,1,0,1"))
         (rule "impRight" (formula "31"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "eqSymm" (formula "34") (term "1,0,0,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "34") (term "1,1,1,1,0,1,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "26") (term "1,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "34") (term "0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "34") (term "0,1,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "pullOutSelect" (formula "34") (term "1,0,1,1,1,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
         (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_addComm0" (formula "35") (term "0,1,1,1,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "4")))
         (rule "inEqSimp_commuteGeq" (formula "26"))
         (rule "variableDeclarationAssign" (formula "2") (term "1"))
         (rule "variableDeclarationAssign" (formula "35") (term "1"))
         (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_1"))
         (rule "variableDeclaration" (formula "35") (term "1") (newnames "exc_1"))
         (rule "assignment" (formula "35") (term "1"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "variableDeclaration" (formula "35") (term "1") (newnames "thrownExc"))
         (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "14"))
         (rule "blockThrow" (formula "35") (term "1,0,0,1"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "35") (term "0,0,1,1,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "polySimp_addComm0" (formula "34") (term "0,1,1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "boxToDiamond" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "commute_and" (formula "25") (term "1,0"))
         (rule "commute_and" (formula "25") (term "0,0"))
         (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x"))
         (rule "assignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_1"))
         (rule "assignment_read_attribute_this" (formula "26"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "replaceKnownSelect_taclet100_0" (formula "26") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_2" (formula "26") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "emptyModality" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "notRight" (formula "26"))
         (rule "arrayLengthNotNegative" (formula "13") (term "0"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
         (rule "arrayLengthIsAShort" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "arrayLengthIsAShort" (formula "9") (term "0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
         (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_2"))
         (rule "compound_less_than_comparison_2" (formula "36") (term "1") (inst "#v0=x_3") (inst "#v1=x_4"))
         (rule "variableDeclarationAssign" (formula "36") (term "1"))
         (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "36") (term "1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "variableDeclarationAssign" (formula "36") (term "1"))
         (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_4"))
         (rule "assignment_read_attribute_this" (formula "36"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "replaceKnownSelect_taclet100_0" (formula "36") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_2" (formula "36") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "36") (term "1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "replace_known_left" (formula "36") (term "0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "arrayLengthNotNegative" (formula "16") (term "0"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
         (rule "qeq_literals" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "arrayLengthIsAShort" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "ifSplit" (formula "36"))
         (branch "if x_2 true"
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "true_left" (formula "1"))
            (rule "for_to_while" (formula "36") (term "1") (inst "#innerLabel=_label2") (inst "#outerLabel=_label3"))
            (rule "variableDeclarationAssign" (formula "36") (term "1"))
            (rule "variableDeclaration" (formula "36") (term "1") (newnames "j"))
            (rule "assignment" (formula "36") (term "1"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "elim_double_block_3" (formula "36") (term "1"))
             (builtin "Loop Invariant" (formula "36") (newnames "variant_0,b_0,heapBefore_LOOP_0,jBefore_LOOP,j_0,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
            (branch "Invariant Initially Valid"
               (rule "andRight" (formula "36"))
               (branch "Case 1"
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "andRight" (formula "36"))
                     (branch "Case 1"
                        (rule "andRight" (formula "36"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "leq_literals" (formula "36"))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_leqRight" (formula "36"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                           (rule "polySimp_elimOne" (formula "15") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                           (rule "andLeft" (formula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                           (rule "leq_literals" (formula "14"))
                           (rule "closeFalse" (formula "14"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "translateJavaAddInt" (formula "36") (term "1,1,1,1,0"))
                        (rule "allRight" (formula "36") (inst "sk=k_0"))
                        (rule "impRight" (formula "36"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addComm0" (formula "38") (term "1,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "38") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                        (rule "mul_literals" (formula "37") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                        (rule "mul_literals" (formula "2") (term "0,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "qeq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "pullOutSelect" (formula "36") (term "0,0") (inst "selectSK=arr_0"))
                        (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "37") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "commute_and" (formula "29") (term "1,0"))
                        (rule "commute_or" (formula "29") (term "0,0"))
                        (rule "cnf_rightDist" (formula "29") (term "0"))
                        (rule "distr_forallAnd" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "commute_or" (formula "30") (term "0"))
                        (rule "allLeft" (formula "26") (inst "t=k_0"))
                        (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0,1,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "26") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "26") (term "0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")) (ifInst ""  (formula "10")))
                        (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "3")))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
                        (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "allLeft" (formula "30") (inst "t=k_0"))
                        (rule "replaceKnownSelect_taclet10000100_3" (formula "30") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000100_4" (formula "30") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_leqRight" (formula "40"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "allLeft" (formula "33") (inst "t=k_0"))
                        (rule "replaceKnownSelect_taclet10000100_3" (formula "33") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000100_4" (formula "33") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "33") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "translateJavaAddInt" (formula "36") (term "1,0,0,1,0"))
                     (rule "translateJavaAddInt" (formula "36") (term "1,1,1,1,0"))
                     (rule "allRight" (formula "36") (inst "sk=k_0"))
                     (rule "impRight" (formula "36"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                     (rule "polySimp_elimOne" (formula "16") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                     (rule "mul_literals" (formula "37") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "wellFormedAnon" (formula "36"))
                  (rule "wellFormedAnonEQ" (formula "36") (term "0") (ifseqformula "22"))
                  (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "2")) (ifInst ""  (formula "21")))
                  (rule "closeTrue" (formula "36"))
               )
            )
            (branch "Body Preserves Invariant"
                (builtin "One Step Simplification" (formula "30"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "translateJavaAddInt" (formula "30") (term "1,1,1,1,0,1,0"))
               (rule "translateJavaAddInt" (formula "30") (term "1,1,1,1,0,1"))
               (rule "translateJavaAddInt" (formula "30") (term "1,0,0,1,0,1"))
               (rule "translateJavaAddInt" (formula "38") (term "1,0,0,1,0,1,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "38") (term "0,1,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "38") (term "1,1,1,1,0,1,0,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "38") (term "0,1,1,1,0,1"))
               (rule "translateJavaAddInt" (formula "38") (term "1,1,1,1,0,1,0,0,0,1,1,0,1,1"))
               (rule "andLeft" (formula "30"))
               (rule "impRight" (formula "39"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "eqSymm" (formula "42") (term "1,0,0,1,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "42") (term "0,1,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "42") (term "0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "34") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "34") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "42") (term "1,1,1,1,0,1,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "42") (term "1,1,1,1,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "42") (term "1,0,0,1,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "42") (term "0,1,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "42") (term "0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,1,0,1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32"))
               (rule "inEqSimp_commuteLeq" (formula "31"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,1,0,1,0,0,1,1,0,1"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclarationAssign" (formula "42") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_1"))
               (rule "variableDeclaration" (formula "42") (term "1") (newnames "exc_2"))
               (rule "assignment" (formula "42") (term "1"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "variableDeclaration" (formula "42") (term "1") (newnames "thrownExc_1"))
               (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "42") (term "1,0,1,1,1,0,0") (ifseqformula "16"))
               (rule "polySimp_addComm0" (formula "42") (term "0,1,1,1,0,0"))
               (rule "blockThrow" (formula "42") (term "1,0,0,1"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_commuteGeq" (formula "32"))
               (rule "boxToDiamond" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "commute_and" (formula "33") (term "0,0"))
               (rule "commute_and" (formula "33") (term "1,0"))
               (rule "commute_and" (formula "32") (term "0,0"))
               (rule "commute_and" (formula "32") (term "1,0"))
               (rule "compound_less_than_comparison_2" (formula "34") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "34") (term "1"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_5"))
               (rule "assignment" (formula "34") (term "1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "variableDeclarationAssign" (formula "34") (term "1"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_6"))
               (rule "assignment_read_length" (formula "34"))
               (branch "Normal Execution (_indices != null)"
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "15"))
                  (rule "less_than_comparison_simple" (formula "34") (term "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "methodCallEmpty" (formula "34") (term "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "emptyModality" (formula "34") (term "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "notRight" (formula "34"))
                  (rule "ifUnfold" (formula "42") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_7"))
                  (rule "compound_less_than_comparison_2" (formula "42") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_8"))
                  (rule "assignment" (formula "42") (term "1"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_9"))
                  (rule "assignment_read_length" (formula "42"))
                  (branch "Normal Execution (_indices != null)"
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "16"))
                     (rule "less_than_comparison_simple" (formula "42") (term "1"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "replace_known_left" (formula "42") (term "0,0,1,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "ifSplit" (formula "42"))
                     (branch "if x_7 true"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "42") (term "1"))
                        (rule "variableDeclaration" (formula "42") (term "1") (newnames "value"))
                        (rule "eval_order_array_access5" (formula "42") (term "1") (inst "#v1=x") (inst "#ar1=x_arr"))
                        (rule "variableDeclarationAssign" (formula "42") (term "1"))
                        (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_arr"))
                        (rule "assignment" (formula "42") (term "1"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "variableDeclarationAssign" (formula "42") (term "1"))
                        (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_10"))
                        (rule "assignmentAdditionInt" (formula "42") (term "1"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "translateJavaAddInt" (formula "42") (term "0,1,0"))
                        (rule "assignment_array2" (formula "42"))
                        (branch "Normal Execution (x_arr != null)"
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "pullOutSelect" (formula "42") (term "0,1,0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "40")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "40")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "7")))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "43") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "42") (term "1"))
                           (rule "variableDeclaration" (formula "42") (term "1") (newnames "index_1"))
                           (rule "assignment_array2" (formula "42"))
                           (branch "Normal Execution (_indices != null)"
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "pullOutSelect" (formula "42") (term "0,1,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "43") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eval_order_array_access3" (formula "42") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_arr_1"))
                              (rule "assignment" (formula "42") (term "1"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_11"))
                              (rule "assignment" (formula "42") (term "1"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_12"))
                              (rule "compound_addition_2" (formula "42") (term "1") (inst "#v1=x_14") (inst "#v0=x_13"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_13"))
                              (rule "assignmentMultiplicationInt" (formula "42") (term "1"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "translateJavaMulInt" (formula "42") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_14"))
                              (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                              (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "42") (term "1"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_4"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "42") (term "1"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_5"))
                              (rule "eval_order_array_access4" (formula "42") (term "1") (inst "#v0=x_arr"))
                              (rule "variableDeclarationAssign" (formula "42") (term "1"))
                              (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_arr_2"))
                              (rule "assignment_read_attribute_this" (formula "42"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "pullOutSelect" (formula "42") (term "0,1,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "24"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                              (rule "assignment_array2" (formula "43"))
                              (branch "Normal Execution (x_arr_2 != null)"
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "pullOutSelect" (formula "43") (term "0,1,0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "25"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "variableDeclarationAssign" (formula "44") (term "1"))
                                 (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_6"))
                                 (rule "assignment" (formula "44") (term "1"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "37")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0"))
                                  (builtin "Use Operation Contract" (formula "45") (newnames "heapBefore_cmp,result,exc_3") (contract "de.wiesler.Constants[de.wiesler.Constants::cmp(int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (cmp)"
                                     (builtin "One Step Simplification" (formula "46"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "assignment" (formula "47") (term "1"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "blockEmpty" (formula "47") (term "1"))
                                     (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_toInt,result_0,exc_4") (contract "de.wiesler.Constants[de.wiesler.Constants::toInt(boolean)].JML normal_behavior operation contract.0"))
                                    (branch "Post (toInt)"
                                        (builtin "One Step Simplification" (formula "40"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "assignment" (formula "49") (term "1"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "blockEmpty" (formula "49") (term "1"))
                                       (rule "assignmentAdditionInt" (formula "49") (term "1"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "translateJavaAddInt" (formula "49") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "49") (term "0,1,0"))
                                       (rule "assignment_to_primitive_array_component" (formula "49"))
                                       (branch "Normal Execution (x_arr_1 != null)"
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "blockEmpty" (formula "49") (term "1"))
                                          (rule "preincrement" (formula "49") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "49") (term "1") (inst "#v=x"))
                                          (rule "variableDeclarationAssign" (formula "49") (term "1"))
                                          (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_15"))
                                          (rule "remove_parentheses_right" (formula "49") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "49") (term "1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "translateJavaAddInt" (formula "49") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "49") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "49") (term "1"))
                                          (rule "assignment" (formula "49") (term "1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "tryEmpty" (formula "49") (term "1"))
                                          (rule "methodCallEmpty" (formula "49") (term "1"))
                                          (rule "emptyModality" (formula "49") (term "1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "andRight" (formula "49"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "49"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "49"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "49"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "49"))
                                                      (branch "Case 1"
                                                         (rule "inEqSimp_geqRight" (formula "49"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0"))
                                                         (rule "qeq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "33"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "inEqSimp_geqRight" (formula "49"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "20"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0"))
                                                         (rule "leq_literals" (formula "5"))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "49") (inst "sk=k_0"))
                                                      (rule "impRight" (formula "49"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "21"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,1"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0"))
                                                      (rule "qeq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=arr_5"))
                                                      (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "49") (term "1,1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "48") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "34") (term "0,0"))
                                                      (rule "add_zero_left" (formula "34") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                      (rule "mul_literals" (formula "34") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "22"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "35") (term "0,0"))
                                                      (rule "add_zero_left" (formula "35") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                      (rule "mul_literals" (formula "35") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "35"))
                                                      (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0"))
                                                      (rule "qeq_literals" (formula "34") (term "0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "nnf_imp2or" (formula "36") (term "0"))
                                                      (rule "nnf_imp2or" (formula "29") (term "0"))
                                                      (rule "nnf_imp2or" (formula "32") (term "0"))
                                                      (rule "nnf_imp2or" (formula "37") (term "0"))
                                                      (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "self.tree.<created> = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "39") (term "1,1,0,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "38") (term "1,1,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "39") (term "0"))
                                                         (branch "result = TRUE TRUE"
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "commute_and" (formula "34") (term "1,0"))
                                                            (rule "commute_and" (formula "30") (term "1,0"))
                                                            (rule "commute_and" (formula "35") (term "1,0"))
                                                            (rule "commute_or" (formula "27") (term "0,0"))
                                                            (rule "commute_or" (formula "30") (term "0,0"))
                                                            (rule "commute_or" (formula "35") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "34") (term "0"))
                                                            (rule "distr_forallAnd" (formula "34"))
                                                            (rule "andLeft" (formula "34"))
                                                            (rule "commute_or" (formula "35") (term "0"))
                                                            (rule "cnf_rightDist" (formula "30") (term "0"))
                                                            (rule "distr_forallAnd" (formula "30"))
                                                            (rule "andLeft" (formula "30"))
                                                            (rule "commute_or" (formula "31") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or" (formula "38") (term "0"))
                                                            (rule "allLeft" (formula "27") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "35"))
                                                            (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "27") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "25"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")) (ifInst ""  (formula "11")))
                                                            (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                            (rule "ifEqualsInteger" (formula "27"))
                                                            (rule "inEqSimp_subsumption0" (formula "27") (term "0,0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,1"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,0,0,1"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                                            (rule "qeq_literals" (formula "27") (term "0,0,0,1"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "allLeft" (formula "37") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet100000000000010100_17" (formula "37") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100000000000010100_18" (formula "37") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "37") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "37") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "37") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "37"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "inEqSimp_leqRight" (formula "54"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "allLeft" (formula "33") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "38"))
                                                            (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "33"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                            (rule "hideAuxiliaryEq" (formula "33"))
                                                            (rule "allLeft" (formula "35") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet00100000000000010100_23" (formula "35") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100000000000010100_24" (formula "35") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "39"))
                                                            (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "35") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                            (rule "mul_literals" (formula "33") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                            (rule "allLeft" (formula "43") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet100000000000010100_17" (formula "43") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100000000000010100_18" (formula "43") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "43") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "43") (term "0,0,0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "43") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0"))
                                                            (rule "add_zero_right" (formula "43") (term "0"))
                                                            (rule "leq_literals" (formula "43"))
                                                            (rule "closeFalse" (formula "43"))
                                                         )
                                                         (branch "result = TRUE FALSE"
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "apply_eq_boolean" (formula "37") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "inEqSimp_leqRight" (formula "39"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "commute_and" (formula "35") (term "1,0"))
                                                            (rule "commute_and" (formula "31") (term "1,0"))
                                                            (rule "commute_and" (formula "36") (term "1,0"))
                                                            (rule "commute_or" (formula "28") (term "0,0"))
                                                            (rule "commute_or" (formula "31") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "commute_or" (formula "36") (term "0"))
                                                            (rule "cnf_rightDist" (formula "31") (term "0"))
                                                            (rule "distr_forallAnd" (formula "31"))
                                                            (rule "andLeft" (formula "31"))
                                                            (rule "commute_or" (formula "32") (term "0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "commute_or" (formula "39") (term "0"))
                                                            (rule "allLeft" (formula "28") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "36"))
                                                            (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "28") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")) (ifInst ""  (formula "12")))
                                                            (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "37"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                                                            (rule "ifEqualsInteger" (formula "28"))
                                                            (rule "inEqSimp_subsumption0" (formula "28") (term "0,0,1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,1"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0,0,1"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,0,0,1"))
                                                            (rule "qeq_literals" (formula "28") (term "0,0,0,1"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0"))
                                                            (rule "qeq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "allLeft" (formula "38") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet100000000000010100_17" (formula "38") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100000000000010100_18" (formula "38") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "38") (term "0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "38") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "inEqSimp_leqRight" (formula "54"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "allLeft" (formula "34") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "39"))
                                                            (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "34"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                            (rule "hideAuxiliaryEq" (formula "34"))
                                                            (rule "allLeft" (formula "36") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet10100000000000010100_23" (formula "36") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10100000000000010100_24" (formula "36") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "40"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                            (rule "mul_literals" (formula "34") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                            (rule "allLeft" (formula "44") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0000010100_7" (formula "44") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "44") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "44") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "44") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "allLeft" (formula "45") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet100000000000010100_17" (formula "45") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100000000000010100_18" (formula "45") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "45") (term "0,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "45") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "45") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "45"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_literals" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "self.tree.<created> = TRUE FALSE"
                                                         (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "43"))
                                                         (rule "close" (formula "42") (ifseqformula "9"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "49") (inst "sk=k_0") (userinteraction))
                                                   (rule "impRight" (formula "49") (userinteraction))
                                                   (rule "eqTermCut" (formula "1") (term "0,1") (inst "s=j_0") (userinteraction))
                                                   (branch "Assume k_0 = j_0"
                                                      (rule "ifthenelse_split" (formula "43") (term "0") (userinteraction))
                                                      (branch "result = TRUE TRUE"
                                                         (rule "ifthenelse_split" (formula "41") (term "0") (userinteraction))
                                                         (branch "arr_2<<selectSK>> < values[begin + j_0] TRUE"
                                                            (rule "applyEqReverse" (formula "53") (term "0,3,0,0,0") (ifseqformula "45") (userinteraction))
                                                            (rule "applyEqReverse" (formula "53") (term "0,3,0,0,1") (ifseqformula "45") (userinteraction))
                                                            (rule "applyEqReverse" (formula "53") (term "0,2,0,1,3,0,0,0") (ifseqformula "1") (userinteraction))
                                                            (rule "applyEqReverse" (formula "53") (term "0,2,0,1,3,0,0,1") (ifseqformula "1") (userinteraction))
                                                            (rule "shiftLeftSplitTwo" (formula "53") (term "1,0") (userinteraction))
                                                            (rule "shiftLeftSplitTwo" (formula "54") (term "1,1") (userinteraction))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "eqSymm" (formula "45"))
                                                            (rule "eqSymm" (formula "47"))
                                                            (rule "polySimp_elimSub" (formula "2") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "2") (term "1,1,0,0,1"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "2") (term "0,1,0,0,1"))
                                                            (rule "add_zero_left" (formula "2") (term "1,0,0,1"))
                                                            (rule "eqSymm" (formula "2") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "1") (term "0,1,0,0,1"))
                                                            (rule "eqSymm" (formula "1") (term "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "44"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "35"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEq" (formula "55") (term "0,2,0,1,3,0,1,0,1") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "55") (term "0,2,1,0,1") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "55") (term "0,2,0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "55") (term "0,2,0,1,3,0,0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "polySimp_pullOutFactor2" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "1,1,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0"))
                                                            (rule "qeq_literals" (formula "37") (term "0"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "true_left" (formula "37"))
                                                            (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0"))
                                                            (rule "qeq_literals" (formula "33") (term "0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "32"))
                                                            (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=arr_5"))
                                                            (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "7"))
                                                            (rule "mul_literals" (formula "35") (term "0,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "35"))
                                                            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0"))
                                                            (rule "qeq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "23"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "1") (term "0") (ifseqformula "8"))
                                                            (rule "leq_literals" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqRigid" (formula "38") (term "1,1,0,1,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "51") (term "1,1,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (term "0") (ifseqformula "8"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEq" (formula "51") (term "0,1,1,1") (ifseqformula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1"))
                                                            (rule "applyEqRigid" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                            (rule "applyEqRigid" (formula "38") (term "1,1,1,0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "51") (term "1,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "37") (term "1,1,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "33") (term "1,1,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "elimGcdGeq" (formula "51") (term "0") (inst "elimGcdRightDiv=add(Z(0(#)), javaShiftLeftInt(Z(1(#)), i_0))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(j_0))") (inst "elimGcd=Z(2(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0,0"))
                                                            (rule "sub_literals" (formula "51") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "1,0,0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "1,1,0"))
                                                            (rule "add_zero_left" (formula "51") (term "1,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "51") (term "0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "51") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "51") (term "0,1,0,0"))
                                                            (rule "leq_literals" (formula "51") (term "1,0,0"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "51") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "51") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "51") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "elimGcdLeq" (formula "51") (term "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    mul(javaShiftLeftInt(Z(1(#)), i_0), Z(2(#))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(j_0))") (inst "elimGcd=Z(2(#))"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "51") (term "0,0,0,0,0,1,0,1"))
                                                            (rule "sub_literals" (formula "51") (term "0,0,0,0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,1,0,1"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,1,0,1"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "51") (term "0,1,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "51") (term "0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "51") (term "0,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,0,1,0,1"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,1,0,1"))
                                                            (rule "add_zero_left" (formula "51") (term "0,0,1,0,1"))
                                                            (rule "polySimp_pullOutFactor0" (formula "51") (term "0,1,0,1"))
                                                            (rule "add_literals" (formula "51") (term "1,0,1,0,1"))
                                                            (rule "times_zero_1" (formula "51") (term "0,1,0,1"))
                                                            (rule "qeq_literals" (formula "51") (term "1,0,1"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,1"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "51") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "nnf_imp2or" (formula "30") (term "0"))
                                                            (rule "nnf_imp2or" (formula "38") (term "0"))
                                                            (rule "nnf_imp2or" (formula "37") (term "0"))
                                                            (rule "nnf_imp2or" (formula "33") (term "0"))
                                                            (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                                            (rule "ifthenelse_split" (formula "4") (term "0"))
                                                            (branch "self.tree.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                               (rule "mul_literals" (formula "38") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                               (rule "commute_or" (formula "28") (term "0,0"))
                                                               (rule "commute_or" (formula "36") (term "0,0"))
                                                               (rule "commute_and" (formula "36") (term "1,0"))
                                                               (rule "commute_and" (formula "35") (term "1,0"))
                                                               (rule "commute_and" (formula "31") (term "1,0"))
                                                               (rule "commute_or" (formula "31") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "36") (term "0"))
                                                               (rule "distr_forallAnd" (formula "36"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "commute_or" (formula "37") (term "0"))
                                                               (rule "cnf_rightDist" (formula "35") (term "0"))
                                                               (rule "distr_forallAnd" (formula "35"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "commute_or" (formula "36") (term "0"))
                                                               (rule "cnf_rightDist" (formula "31") (term "0"))
                                                               (rule "distr_forallAnd" (formula "31"))
                                                               (rule "andLeft" (formula "31"))
                                                               (rule "commute_or" (formula "32") (term "0"))
                                                               (rule "allLeft" (formula "28") (inst "t=j_0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "36"))
                                                               (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "28") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "50")) (ifInst ""  (formula "12")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "5")))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0"))
                                                               (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                               (rule "hideAuxiliaryEq" (formula "28"))
                                                               (rule "allLeft" (formula "32") (inst "t=j_0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_7"))
                                                               (rule "simplifySelectOfAnon" (formula "32"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                               (rule "hideAuxiliaryEq" (formula "32"))
                                                               (rule "allLeft" (formula "34") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet000010000000000010100_23" (formula "34") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000010000000000010100_24" (formula "34") (term "0,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                               (rule "mul_literals" (formula "32") (term "1"))
                                                               (rule "allLeft" (formula "41") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet0000010100_7" (formula "41") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "41") (term "0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,1,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,1,0"))
                                                               (rule "add_literals" (formula "41") (term "0,1,0"))
                                                               (rule "qeq_literals" (formula "41") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "41"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "inEqSimp_geqRight" (formula "57"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "allLeft" (formula "41") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet0000010100_7" (formula "41") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "41") (term "0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,1,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,1,0"))
                                                               (rule "add_literals" (formula "41") (term "0,1,0"))
                                                               (rule "qeq_literals" (formula "41") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq0" (formula "41") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "41") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "41") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "41"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "leq_literals" (formula "6"))
                                                               (rule "closeFalse" (formula "6"))
                                                            )
                                                            (branch "self.tree.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "45"))
                                                               (rule "close" (formula "44") (ifseqformula "10"))
                                                            )
                                                         )
                                                         (branch "arr_2<<selectSK>> < values[begin + j_0] FALSE"
                                                            (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "41") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "closeFalse" (formula "43") (userinteraction))
                                                         )
                                                      )
                                                      (branch "result = TRUE FALSE"
                                                         (rule "shiftLeftSplitTwo" (formula "52") (term "1,0") (userinteraction))
                                                         (rule "shiftLeftSplitTwo" (formula "53") (term "1,1") (userinteraction))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "eqSymm" (formula "46"))
                                                         (rule "polySimp_elimSub" (formula "2") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "2") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "2") (term "0,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "2") (term "1,0,0,1"))
                                                         (rule "eqSymm" (formula "2") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "1") (term "0,1,0,0,1"))
                                                         (rule "eqSymm" (formula "1") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "3"))
                                                         (rule "polySimp_pullOutFactor2" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "0"))
                                                         (rule "leq_literals" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEqRigid" (formula "54") (term "0,2,0,0") (ifseqformula "3"))
                                                         (rule "apply_eq_boolean" (formula "43") (term "1") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "inEqSimp_leqRight" (formula "45"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "53") (term "0,2,1,0,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "0,3,0,0,0") (ifseqformula "44"))
                                                         (rule "add_zero_left" (formula "53") (term "3,0,0,0"))
                                                         (rule "applyEq" (formula "53") (term "0,3,0,1,0,1") (ifseqformula "44"))
                                                         (rule "add_zero_left" (formula "53") (term "3,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "33"))
                                                         (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                         (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0"))
                                                         (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0"))
                                                         (rule "qeq_literals" (formula "38") (term "0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=arr_5"))
                                                         (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "36") (term "0,0"))
                                                         (rule "add_zero_left" (formula "36") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                         (rule "mul_literals" (formula "36") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "3") (term "0") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqRigid" (formula "51") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "1,1,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "34") (term "1,1,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (term "0") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqRigid" (formula "51") (term "1,1,1") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "39") (term "1,1,0,1,0") (ifseqformula "2"))
                                                         (rule "elimGcdLeq" (formula "51") (term "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    mul(javaShiftLeftInt(Z(1(#)), i_0), Z(2(#))))") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(j_0))") (inst "elimGcd=Z(2(#))"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0,0,1"))
                                                         (rule "sub_literals" (formula "51") (term "0,0,0,0,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,0,0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,1,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,1,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,1,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,1,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,1,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,1,0,1"))
                                                         (rule "qeq_literals" (formula "51") (term "1,0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                                                         (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "elimGcdGeq" (formula "51") (term "0") (inst "elimGcdRightDiv=javaShiftLeftInt(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(j_0))") (inst "elimGcd=Z(2(#))"))
                                                         (rule "mul_literals" (formula "51") (term "0,0,0,0,0,1,0,0"))
                                                         (rule "sub_literals" (formula "51") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor0" (formula "51") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "51") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "nnf_imp2or" (formula "31") (term "0"))
                                                         (rule "nnf_imp2or" (formula "38") (term "0"))
                                                         (rule "nnf_imp2or" (formula "34") (term "0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0"))
                                                         (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "self.tree.<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "commute_or" (formula "29") (term "0,0"))
                                                            (rule "commute_and" (formula "36") (term "1,0"))
                                                            (rule "commute_and" (formula "32") (term "1,0"))
                                                            (rule "commute_and" (formula "37") (term "1,0"))
                                                            (rule "commute_or" (formula "32") (term "0,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "32") (term "0"))
                                                            (rule "distr_forallAnd" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "commute_or" (formula "33") (term "0"))
                                                            (rule "cnf_rightDist" (formula "39") (term "0"))
                                                            (rule "distr_forallAnd" (formula "39"))
                                                            (rule "andLeft" (formula "39"))
                                                            (rule "commute_or" (formula "40") (term "0"))
                                                            (rule "allLeft" (formula "29") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "37"))
                                                            (rule "qeq_literals" (formula "29") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
                                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "50")) (ifInst ""  (formula "13")))
                                                            (rule "elementOfArrayRangeConcrete" (formula "29") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "6")))
                                                            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0"))
                                                            (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                            (rule "hideAuxiliaryEq" (formula "29"))
                                                            (rule "allLeft" (formula "33") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "33") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "38"))
                                                            (rule "qeq_literals" (formula "33") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "33"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                            (rule "hideAuxiliaryEq" (formula "33"))
                                                            (rule "allLeft" (formula "40") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0000010100_7" (formula "40") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "40") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,1,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "40") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "40") (term "0,0,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "40") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "inEqSimp_geqRight" (formula "55"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "allLeft" (formula "36") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet01010000000000010100_23" (formula "36") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01010000000000010100_24" (formula "36") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "40"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "allLeft" (formula "42") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0000010100_7" (formula "42") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "42") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "42") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "7"))
                                                            (rule "andLeft" (formula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "42") (term "0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0"))
                                                            (rule "add_literals" (formula "42") (term "0"))
                                                            (rule "leq_literals" (formula "42"))
                                                            (rule "closeFalse" (formula "42"))
                                                         )
                                                         (branch "self.tree.<created> = TRUE FALSE"
                                                            (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "45"))
                                                            (rule "close" (formula "43") (ifseqformula "11"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Assume k_0 != j_0"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                      (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "43"))
                                                      (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0"))
                                                      (rule "qeq_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0"))
                                                      (rule "qeq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=arr_5"))
                                                      (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                      (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "49") (term "1,1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "48") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "34") (term "0,0"))
                                                      (rule "add_zero_left" (formula "34") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                      (rule "mul_literals" (formula "34") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "35") (term "0"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "23"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "nnf_imp2or" (formula "34") (term "0"))
                                                      (rule "nnf_imp2or" (formula "36") (term "0"))
                                                      (rule "nnf_imp2or" (formula "37") (term "0"))
                                                      (rule "nnf_imp2or" (formula "31") (term "0"))
                                                      (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "self.tree.<created> = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "38") (term "1,1,0,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "39") (term "0"))
                                                         (branch "result = TRUE TRUE"
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "commute_or" (formula "32") (term "0,0"))
                                                            (rule "commute_and" (formula "32") (term "1,0"))
                                                            (rule "commute_and" (formula "34") (term "1,0"))
                                                            (rule "commute_and" (formula "35") (term "1,0"))
                                                            (rule "commute_or" (formula "35") (term "0,0"))
                                                            (rule "commute_or" (formula "29") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "32") (term "0"))
                                                            (rule "distr_forallAnd" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "commute_or" (formula "33") (term "0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "commute_or" (formula "36") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or" (formula "38") (term "0"))
                                                            (rule "allLeft" (formula "36") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0000010100_7" (formula "36") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "36") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "36") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "allLeft" (formula "39") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet110000000000010100_17" (formula "39") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet110000000000010100_18" (formula "39") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_geqRight" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "allLeft" (formula "30") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "30") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")) (ifInst ""  (formula "14")))
                                                            (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "7")))
                                                            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0"))
                                                            (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "31"))
                                                            (rule "ifEqualsInteger" (formula "30"))
                                                            (rule "inEqSimp_subsumption1" (formula "30") (term "0,0") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "inEqSimp_subsumption1" (formula "30") (term "0,0,1") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "30") (term "0,0,0,1"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "allLeft" (formula "36") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "36"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "allLeft" (formula "35") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet00110000000000010100_23" (formula "35") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00110000000000010100_24" (formula "35") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "35") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "35") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                            (rule "allLeft" (formula "41") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0000010100_7" (formula "41") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "41") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,1,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "41") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "41") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "41") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "41") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "41") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                            (rule "mul_literals" (formula "41") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                            (rule "allLeft" (formula "45") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet110000000000010100_17" (formula "45") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet110000000000010100_18" (formula "45") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "45") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "45"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "result = TRUE FALSE"
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "apply_eq_boolean" (formula "37") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "notLeft" (formula "37"))
                                                            (rule "inEqSimp_leqRight" (formula "39"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "commute_or" (formula "33") (term "0,0"))
                                                            (rule "commute_and" (formula "33") (term "1,0"))
                                                            (rule "commute_and" (formula "35") (term "1,0"))
                                                            (rule "commute_and" (formula "36") (term "1,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "commute_or" (formula "30") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "33") (term "0"))
                                                            (rule "distr_forallAnd" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "commute_or" (formula "34") (term "0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "commute_or" (formula "39") (term "0"))
                                                            (rule "allLeft" (formula "37") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0000010100_7" (formula "37") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "37") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "37") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "37") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "allLeft" (formula "40") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet110000000000010100_17" (formula "40") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet110000000000010100_18" (formula "40") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "40") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_geqRight" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "allLeft" (formula "34") (inst "t=j_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfAnon" (formula "34"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                            (rule "hideAuxiliaryEq" (formula "34"))
                                                            (rule "allLeft" (formula "41") (inst "t=k_0"))
                                                            (rule "replaceKnownSelect_taclet110000000000010100_17" (formula "41") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet110000000000010100_18" (formula "41") (term "0,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_contradInEq0" (formula "41") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "41") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "41") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "6"))
                                                            (rule "andLeft" (formula "41"))
                                                            (rule "inEqSimp_homoInEq1" (formula "41"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                            (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0"))
                                                            (rule "add_literals" (formula "41") (term "0"))
                                                            (rule "leq_literals" (formula "41"))
                                                            (rule "closeFalse" (formula "41"))
                                                         )
                                                      )
                                                      (branch "self.tree.<created> = TRUE FALSE"
                                                         (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "43"))
                                                         (rule "close" (formula "42") (ifseqformula "11"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1,0,0,0") (ifseqformula "26"))
                                                (rule "allRight" (formula "49") (inst "sk=f_0"))
                                                (rule "allRight" (formula "49") (inst "sk=o_0"))
                                                (rule "orRight" (formula "49"))
                                                (rule "orRight" (formula "49"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0"))
                                                (rule "qeq_literals" (formula "34") (term "0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0"))
                                                (rule "qeq_literals" (formula "30") (term "0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=f_0_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "49"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "26"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,0,0"))
                                             (rule "precOfInt" (formula "49"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "49") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "49") (term "0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,0"))
                                             (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "19"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                             (rule "applyEq" (formula "49") (term "1,0,1") (ifseqformula "19"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,1"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "49") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1"))
                                             (rule "add_literals" (formula "49") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "49") (term "0,1"))
                                             (rule "leq_literals" (formula "49") (term "1"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "inEqSimp_geqRight" (formula "49"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                             (rule "mul_literals" (formula "5") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Null Reference (x_arr_1 = null)"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr_1 != null, but x_11 Out of Bounds!)"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                          (rule "mul_literals" (formula "5") (term "0,0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "qeq_literals" (formula "35") (term "0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "qeq_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Exceptional Post (toInt)"
                                        (builtin "One Step Simplification" (formula "40"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0") (ifseqformula "26"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "andLeft" (formula "42"))
                                       (rule "notLeft" (formula "40"))
                                       (rule "close" (formula "43") (ifseqformula "42"))
                                    )
                                    (branch "Pre (toInt)"
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "wellFormedAnon" (formula "47"))
                                       (rule "wellFormedAnon" (formula "47") (term "0"))
                                       (rule "wellFormedAnonEQ" (formula "47") (term "0,0") (ifseqformula "26"))
                                       (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "29")))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                 )
                                 (branch "Exceptional Post (cmp)"
                                     (builtin "One Step Simplification" (formula "46"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0") (ifseqformula "26"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "close" (formula "41") (ifseqformula "40"))
                                 )
                                 (branch "Pre (cmp)"
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "wellFormedAnon" (formula "45"))
                                    (rule "wellFormedAnon" (formula "45") (term "0"))
                                    (rule "wellFormedAnonEQ" (formula "45") (term "0,0") (ifseqformula "26"))
                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "29")))
                                    (rule "closeTrue" (formula "45"))
                                 )
                              )
                              (branch "Null Reference (x_arr_2 = null)"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "false_right" (formula "44"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                                 (rule "ifEqualsNull" (formula "2"))
                                 (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0"))
                                 (rule "qeq_literals" (formula "30") (term "0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0"))
                                 (rule "qeq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "elementOfArrayRange" (formula "2") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "Index Out of Bounds (x_arr_2 != null, but index_1 Out of Bounds!)"
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1") (userinteraction))
                                 (rule "false_right" (formula "45") (userinteraction))
                                 (rule "allLeft" (formula "36") (inst "t=j_0") (userinteraction))
                                 (rule "impLeft" (formula "36") (userinteraction))
                                 (branch "Case 1"
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_geqRight" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andLeft" (formula "36") (userinteraction))
                                    (rule "shiftLeftLowerBoundGe" (formula "37") (term "1") (ifseqformula "30") (userinteraction))
                                    (rule "orLeft" (formula "2") (userinteraction))
                                    (branch " de_wiesler_Tree_tree_0<<selectSK>>.length <= indices[j_0]@anon_heap_LOOP_0<<anonHeapFunction>>"
                                       (rule "cut" (inst "cutFormula=leq(add(i_0, Z(1(#))),
    int::select(heap,
                self,
                de.wiesler.Tree::$log_buckets))<<origin(\"User_Interaction @ node 34220 (cut)\",\"[]\")>>") (userinteraction))
                                       (branch "CUT: i_0 + 1 <= self.log_buckets TRUE"
                                          (rule "leq_to_geq" (formula "1") (userinteraction))
                                           (opengoal " ")
                                       )
                                       (branch "CUT: i_0 + 1 <= self.log_buckets FALSE"
                                          (rule "replaceKnownSelect_taclet0000010100_7" (formula "38") (term "0"))
                                          (rule "replaceKnownSelect_taclet0000010100_7" (formula "36") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "38") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "36") (term "0"))
                                          (rule "leq_literals" (formula "37") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "polySimp_addComm0" (formula "41") (term "0"))
                                          (rule "translateJavaShiftLeftIntZero" (formula "36") (term "1,1"))
                                          (rule "inEqSimp_leqRight" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1"))
                                          (rule "mul_literals" (formula "35") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                          (rule "mul_literals" (formula "4") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "indices[j_0]@anon_heap_LOOP_0<<anonHeapFunction>> < 0"
                                       (rule "replaceKnownSelect_taclet0000010100_7" (formula "38") (term "0"))
                                       (rule "replaceKnownSelect_taclet0000010100_7" (formula "36") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "38") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000010100_8" (formula "36") (term "0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "translateJavaShiftLeftIntZero" (formula "36") (term "1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                       (rule "mul_literals" (formula "34") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "30") (term "0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1"))
                                       (rule "mul_literals" (formula "30") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "31"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "33") (term "0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "33") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "33"))
                                       (rule "qeq_literals" (formula "35") (term "0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "closeFalse" (formula "35"))
                                    )
                                 )
                              )
                           )
                           (branch "Null Reference (_indices = null)"
                              (rule "false_right" (formula "43"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_indices != null, but j Out of Bounds!)"
                              (rule "false_right" (formula "43"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0"))
                              (rule "qeq_literals" (formula "32") (term "0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0"))
                              (rule "qeq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "30") (term "0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "closeFalse" (formula "30"))
                           )
                        )
                        (branch "Null Reference (x_arr = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr != null, but x_10 Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "false_right" (formula "43"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                           (rule "polySimp_elimOne" (formula "16") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                           (rule "mul_literals" (formula "2") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,1"))
                           (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0"))
                           (rule "qeq_literals" (formula "28") (term "0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "qeq_literals" (formula "31") (term "0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "30") (term "0,0"))
                           (rule "add_zero_left" (formula "30") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1"))
                           (rule "mul_literals" (formula "30") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "32") (term "0"))
                           (rule "nnf_imp2or" (formula "33") (term "0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "32") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "33") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "33") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                           (rule "commute_or" (formula "1"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "commute_and" (formula "28") (term "1,0"))
                           (rule "commute_and" (formula "32") (term "1,0"))
                           (rule "commute_and" (formula "33") (term "1,0"))
                           (rule "commute_or" (formula "28") (term "0,0"))
                           (rule "commute_or" (formula "33") (term "0,0"))
                           (rule "cnf_rightDist" (formula "32") (term "0"))
                           (rule "distr_forallAnd" (formula "32"))
                           (rule "andLeft" (formula "32"))
                           (rule "commute_or" (formula "33") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "cnf_rightDist" (formula "35") (term "0"))
                           (rule "distr_forallAnd" (formula "35"))
                           (rule "andLeft" (formula "35"))
                           (rule "commute_or" (formula "36") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                           (rule "polySimp_elimOne" (formula "16") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "cut_direct" (formula "1") (term "1"))
                           (branch "CUT: values.length <= begin + j_0 TRUE"
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_pullOutFactor2" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "15"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: values.length <= begin + j_0 FALSE"
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "2"))
                              (rule "mul_literals" (formula "33") (term "0,0"))
                              (rule "add_zero_left" (formula "33") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                        )
                     )
                     (branch "if x_7 false"
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (_indices = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_indices = null)"
                   (builtin "One Step Simplification" (formula "35"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Use Case"
                (builtin "One Step Simplification" (formula "30"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "translateJavaAddInt" (formula "30") (term "1,1,1,1,0,1"))
               (rule "translateJavaAddInt" (formula "30") (term "1,0,0,1,0,1"))
               (rule "translateJavaAddInt" (formula "30") (term "1,1,1,1,0,1,0"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "polySimp_addComm0" (formula "33") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "33") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "32") (term "1,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "31"))
               (rule "inEqSimp_commuteLeq" (formula "30"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "41") (term "1"))
               (rule "variableDeclaration" (formula "41") (term "1") (newnames "b_0_1"))
               (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "15"))
                (opengoal " ")
            )
         )
         (branch "if x_2 false"
             (builtin "One Step Simplification" (formula "37"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
          (builtin "One Step Simplification" (formula "23"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "translateJavaAddInt" (formula "23") (term "1,1,1,1,0,1"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "polySimp_addComm0" (formula "25") (term "1,1,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "b_1"))
         (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "12"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
         (rule "simplifySelectOfAnon" (formula "24"))
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1,0,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "24") (term "0,0,1,0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "sortsDisjointModuloNull" (formula "24") (term "0,0"))
         (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")) (ifInst ""  (formula "2")))
         (rule "inEqSimp_commuteGeq" (formula "25"))
         (rule "elementOfArrayRange" (formula "24") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
         (rule "hideAuxiliaryEq" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "commute_and" (formula "25") (term "1,0"))
         (rule "commute_and" (formula "25") (term "0,0"))
         (rule "compound_less_than_comparison_2" (formula "33") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "x"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_1"))
         (rule "assignment_read_attribute_this" (formula "33"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "replaceKnownSelect_taclet200_0" (formula "33") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet200_2" (formula "33") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "methodCallEmpty" (formula "33") (term "1"))
         (rule "emptyModality" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "impRight" (formula "33"))
         (rule "notLeft" (formula "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "tryEmpty" (formula "34") (term "1"))
         (rule "emptyModality" (formula "34") (term "1"))
         (rule "andRight" (formula "34"))
         (branch "Case 1"
            (rule "andRight" (formula "34"))
            (branch "Case 1"
               (rule "andRight" (formula "34"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "allRight" (formula "34") (inst "sk=i_1") (userinteraction))
                  (rule "impRight" (formula "34") (userinteraction))
                  (rule "instAll" (formula "35") (term "0,2,0,0") (ifseqformula "26") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch "Case 1"
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_ltRight" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "29"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "1"))
                     (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "37") (term "0"))
                     (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "36") (userinteraction))
                     (branch "Case 1"
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_geqRight" (formula "38"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "18"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_0"))
                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "26"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "9")))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "23"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "30"))
                        (rule "applyEq" (formula "2") (term "1,1,1") (ifseqformula "30"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq1" (formula "31"))
                        (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                        (rule "add_literals" (formula "31") (term "1,0"))
                        (rule "times_zero_1" (formula "31") (term "0"))
                        (rule "leq_literals" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "29"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                        (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "29"))
                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "19"))
                        (rule "leq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "shiftLeftSplitTwo" (formula "1") (term "1,0") (userinteraction))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "4"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,1,0,0,1"))
                        (rule "add_zero_left" (formula "1") (term "1,0,0,1"))
                        (rule "eqSymm" (formula "1") (term "1"))
                        (rule "inEqSimp_ltRight" (formula "39"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                        (rule "add_literals" (formula "3") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "3") (term "0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "19"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                        (rule "mul_literals" (formula "7") (term "0,0,1"))
                        (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_0"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "5"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                        (rule "simplifySelectOfAnon" (formula "5"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "27"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")) (ifInst ""  (formula "10")))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "24"))
                        (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "31"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "32"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                        (rule "add_literals" (formula "32") (term "1,0"))
                        (rule "times_zero_1" (formula "32") (term "0"))
                        (rule "leq_literals" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "31"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "30"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "30"))
                        (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "30"))
                        (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "20"))
                        (rule "leq_literals" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "inEqSimp_subsumption0" (formula "2") (term "0") (ifseqformula "21"))
                        (rule "leq_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEq" (formula "30") (term "1,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "2"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_ltRight" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0"))
                  (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "1"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "25"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "25"))
                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                  (rule "inEqSimp_homoInEq1" (formula "25"))
                  (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                  (rule "add_literals" (formula "25") (term "1,0"))
                  (rule "times_zero_1" (formula "25") (term "0"))
                  (rule "leq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "24"))
                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "14"))
                  (rule "leq_literals" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "32") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "replaceKnownSelect_taclet200_0" (formula "32") (term "1,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet200_2" (formula "32") (term "1,1,1,0"))
                  (rule "replaceKnownSelect_taclet200_0" (formula "32") (term "1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet200_0" (formula "32") (term "0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet200_2" (formula "32") (term "1,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet200_2" (formula "32") (term "0,1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0,0"))
                  (rule "applyEq" (formula "32") (term "0,0,1,0,0") (ifseqformula "23"))
                  (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "23"))
                  (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "23"))
                  (rule "pullOutSelect" (formula "32") (term "0,0,1,0,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                  (rule "applyEq" (formula "33") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "33") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "33") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "25")))
                  (rule "pullOutSelect" (formula "32") (term "0,1") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                  (rule "eqSymm" (formula "33") (term "0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
                  (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "17"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "33") (ifseqformula "18"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "34"))
               (rule "closeTrue" (formula "34"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "34"))
            (rule "allRight" (formula "34") (inst "sk=f_0"))
            (rule "allRight" (formula "34") (inst "sk=o_0"))
            (rule "orRight" (formula "34"))
            (rule "orRight" (formula "34"))
            (rule "eqSymm" (formula "36"))
            (rule "inEqSimp_ltRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0"))
            (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
            (rule "eqSymm" (formula "37"))
            (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "2"))
            (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "26"))
            (rule "inEqSimp_homoInEq0" (formula "2"))
            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,0"))
            (rule "times_zero_1" (formula "2") (term "0"))
            (rule "qeq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
            (rule "inEqSimp_homoInEq1" (formula "26"))
            (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
            (rule "add_literals" (formula "26") (term "1,0"))
            (rule "times_zero_1" (formula "26") (term "0"))
            (rule "leq_literals" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "25"))
            (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "15"))
            (rule "leq_literals" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "nnf_imp2or" (formula "25") (term "0"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_notAnd" (formula "25") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
            (rule "mul_literals" (formula "25") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0"))
            (rule "commute_or" (formula "25") (term "0,0"))
            (rule "commute_and" (formula "25") (term "1,0"))
            (rule "commute_or" (formula "22") (term "0,0"))
            (rule "cnf_rightDist" (formula "25") (term "0"))
            (rule "distr_forallAnd" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "commute_or" (formula "26") (term "0"))
            (rule "arrayLengthIsAShort" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "arrayLengthIsAShort" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "arrayLengthNotNegative" (formula "14") (term "0"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
            (rule "qeq_literals" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "arrayLengthNotNegative" (formula "9") (term "0"))
            (rule "arrayLengthIsAShort" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "arrayLengthNotNegative" (formula "14") (term "0"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1"))
            (rule "polySimp_elimOne" (formula "14") (term "1"))
            (rule "cut_direct" (formula "36") (term "0,0"))
            (branch "CUT: o_0 = null TRUE"
                (builtin "One Step Simplification" (formula "37"))
               (rule "false_right" (formula "37"))
               (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
               (rule "closeFalse" (formula "2"))
            )
            (branch "CUT: o_0 = null FALSE"
                (builtin "One Step Simplification" (formula "37"))
               (rule "notRight" (formula "37"))
               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "38")))
               (rule "closeFalse" (formula "2"))
            )
         )
      )
   )
   (branch "Exceptional Post (fill)"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "translateJavaSubInt" (formula "19") (term "2,1,0,0"))
      (rule "andLeft" (formula "19"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0") (ifseqformula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "20"))
      (rule "close" (formula "23") (ifseqformula "22"))
   )
   (branch "Pre (fill)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")) (ifInst ""  (formula "1")) (ifInst ""  (formula "21")) (ifInst ""  (formula "5")))
      (rule "closeTrue" (formula "25"))
   )
)
(branch "Null Reference (_indices = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
   (rule "closeFalse" (formula "1"))
)
)
}
