\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Apr 08 13:37:33 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Fri Apr 08 13:37:33 CEST 2022
contract=de.wiesler.Buffers[de.wiesler.Buffers\\:\\:push(int,int)].JML normal_behavior operation contract.0
name=de.wiesler.Buffers[de.wiesler.Buffers\\:\\:push(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "802059dea3"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "802059dea3"))

(autoModeTime "25178")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,0,1,1,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,1,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,1,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,0,0,0,1,1"))
(rule "translateJavaMulInt" (formula "1") (term "0,0,1,1,2,0,0,0,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_push,savedHeapBefore_push"))
 (builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "buffer_offset"))
(rule "assignmentMultiplicationInt" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "translateJavaMulInt" (formula "10") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "index_1"))
(rule "eval_order_array_access4" (formula "10") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr"))
(rule "assignment_read_attribute_this_final" (formula "10"))
 (builtin "One Step Simplification" (formula "10"))
(rule "assignment_array2" (formula "10"))
(branch "Normal Execution (x_arr != null)"
    (builtin "One Step Simplification" (formula "10"))
   (rule "eval_order_array_access1" (formula "10") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_1"))
   (rule "assignment_read_attribute_this_final" (formula "10"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "eval_order_array_access2" (formula "10") (term "1") (inst "#v0=x") (inst "#ar1=x_arr_2"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_2"))
   (rule "assignment" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
   (rule "assignmentAdditionInt" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
   (rule "assignment_to_primitive_array_component" (formula "10"))
   (branch "Normal Execution (x_arr_2 != null)"
       (builtin "One Step Simplification" (formula "10"))
      (rule "eval_order_array_access1" (formula "10") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_3"))
      (rule "assignment_read_attribute_this_final" (formula "10"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "eval_order_array_access3" (formula "10") (term "1") (inst "#v0=x_arr_4") (inst "#v2=x") (inst "#v1=x_1"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_4"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_2"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
      (rule "assignmentAdditionInt" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
      (rule "assignment_to_primitive_array_component" (formula "10"))
      (branch "Normal Execution (x_arr_4 != null)"
          (builtin "One Step Simplification" (formula "10"))
          (builtin "Block Contract (Internal)" (formula "10") (newnames "exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
         (branch "Validity"
             (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")) (ifInst ""  (formula "3")) (ifInst ""  (formula "9")))
             (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaAddInt" (formula "11") (term "4,0,1,0,0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "3,0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "2,0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,4,0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,3,0,1,0,0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "0,4,0,1,0,0,1"))
            (rule "andLeft" (formula "8"))
            (rule "eqSymm" (formula "12") (term "0,0,1,0,1"))
            (rule "polySimp_addComm1" (formula "12") (term "4,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "12") (term "0,4,0,1,0,0,1"))
            (rule "dismissNonSelectedField" (formula "9") (term "0"))
            (rule "dismissNonSelectedField" (formula "9") (term "0"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "exc_0_1"))
            (rule "assignment" (formula "11") (term "1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "emptyStatement" (formula "11") (term "1"))
            (rule "emptyStatement" (formula "11") (term "1"))
            (rule "tryEmpty" (formula "11") (term "1"))
            (rule "blockEmptyLabel" (formula "11") (term "1"))
            (rule "blockEmpty" (formula "11") (term "1"))
            (rule "methodCallEmpty" (formula "11") (term "1"))
            (rule "emptyModality" (formula "11") (term "1"))
            (rule "andRight" (formula "11"))
            (branch "Case 1"
               (rule "andRight" (formula "11"))
               (branch
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "closeTrue" (formula "11"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "Contract_axiom_for_countElementSplit_in_Functions" (formula "11") (term "0") (userinteraction))
                  (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0"))
                  (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,1,0"))
                  (rule "add_literals" (formula "9") (term "0,1,0"))
                  (rule "qeq_literals" (formula "9") (term "1,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                  (rule "add_literals" (formula "9") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "7") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "translateJavaMulInt" (formula "7") (term "1,1,0,0,0"))
                  (rule "translateJavaMulInt" (formula "7") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "9"))
                  (rule "notLeft" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "eqSymm" (formula "15"))
                  (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "16"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                  (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "19")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "20") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "2"))
                  (rule "mul_literals" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0"))
                  (rule "qeq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "false_right" (formula "20"))
                  (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "20") (term "0") (inst "element=element"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "1,0"))
                  (rule "allRight" (formula "20") (inst "sk=element_0"))
                  (rule "polySimp_homoEq" (formula "20"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1"))
                  (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0,0,0,1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "20")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                  (rule "true_left" (formula "1"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "1") (term "0") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")))
                  (rule "translateJavaMulInt" (formula "1") (term "1,1,0,0,0"))
                  (rule "translateJavaMulInt" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "12"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "1") (term "0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "22") (term "1,1") (inst "i=i"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "22") (term "0,0,1") (inst "i=i"))
                  (rule "cnf_rightDist" (formula "16") (term "0"))
                  (rule "distr_forallAnd" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "3") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "13")) (ifInst ""  (formula "15")))
                  (rule "translateJavaMulInt" (formula "3") (term "1,1,0,0"))
                  (rule "translateJavaMulInt" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "eqSymm" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "3") (term "0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "11"))
               (rule "closeTrue" (formula "11"))
            )
         )
         (branch "Precondition"
            (rule "andRight" (formula "10"))
            (branch
               (rule "andRight" (formula "10"))
               (branch
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "4")))
                  (rule "closeTrue" (formula "10"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "wellFormedStorePrimitiveArray" (formula "10"))
                  (rule "wellFormedStorePrimitiveArray" (formula "10"))
                  (rule "close" (formula "10") (ifseqformula "1"))
               )
            )
            (branch
               (rule "andRight" (formula "10"))
               (branch
                  (rule "andRight" (formula "10"))
                  (branch
                      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
                     (rule "closeTrue" (formula "10"))
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "dismissNonSelectedField" (formula "10") (term "0"))
                     (rule "dismissNonSelectedField" (formula "10") (term "0"))
                     (rule "close" (formula "10") (ifseqformula "2"))
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
                  (rule "closeTrue" (formula "10"))
               )
            )
         )
         (branch "Usage"
             (builtin "One Step Simplification" (formula "11"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "translateJavaAddInt" (formula "8") (term "4,0,1,0"))
            (rule "translateJavaMulInt" (formula "8") (term "0,3,0,1,0"))
            (rule "translateJavaMulInt" (formula "8") (term "2,0,1,0"))
            (rule "translateJavaAddInt" (formula "8") (term "0,4,0,1,0"))
            (rule "translateJavaAddInt" (formula "8") (term "3,0,1,0"))
            (rule "translateJavaMulInt" (formula "8") (term "0,0,4,0,1,0"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "polySimp_addComm1" (formula "9") (term "4,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,4,0"))
            (rule "elim_double_block_2" (formula "12") (term "1"))
            (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
            (rule "inequality_comparison_simple" (formula "12") (term "1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "replace_known_left" (formula "12") (term "0,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "ifSplit" (formula "12"))
            (branch "if x_3 true"
                (builtin "One Step Simplification" (formula "13"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_3 false"
                (builtin "One Step Simplification" (formula "13"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "12") (term "1"))
               (rule "emptyStatement" (formula "12") (term "1"))
               (rule "methodCallEmpty" (formula "12") (term "1"))
               (rule "tryEmpty" (formula "12") (term "1"))
               (rule "emptyModality" (formula "12") (term "1"))
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                  (rule "andRight" (formula "12"))
                  (branch "Case 1"
                     (rule "andRight" (formula "12"))
                     (branch
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_ltToLeq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "7") (inst "b=b"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "translateJavaMulInt" (formula "7") (term "1,1,0,0,0"))
                        (rule "translateJavaMulInt" (formula "7") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "8"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "8"))
                        (rule "notLeft" (formula "7"))
                        (rule "eqSymm" (formula "16"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                        (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "19")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "20") (term "0"))
                        (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "15") (term "0") (inst "element=element"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaAddInt" (formula "15") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "15") (term "0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                        (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "21") (term "1,1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "20")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                        (rule "true_left" (formula "1"))
                        (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "21") (term "1,1"))
                        (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "21") (term "0"))
                        (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "closeTrue" (formula "22"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "12"))
                        (branch
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_ltToLeq" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "9") (term "0") (inst "element=element"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "translateJavaAddInt" (formula "9") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "9") (term "0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                           (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "11")) (ifInst ""  (formula "8")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                           (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "13"))
                           (rule "add_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "2"))
                           (rule "mul_literals" (formula "13") (term "1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "false_right" (formula "13"))
                           (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "9") (inst "b=b"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0"))
                           (rule "translateJavaMulInt" (formula "9") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "notLeft" (formula "11"))
                           (rule "notLeft" (formula "9"))
                           (rule "notLeft" (formula "9"))
                           (rule "eqSymm" (formula "18"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                           (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "21") (term "3,0"))
                           (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "16") (term "0,0") (inst "i=i"))
                           (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "16") (term "1,1,0") (inst "i=i"))
                           (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "16") (term "0,0,1,0") (inst "i=i"))
                           (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "21")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption0" (formula "1") (term "0,1") (ifseqformula "3"))
                           (rule "leq_literals" (formula "1") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0"))
                           (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0"))
                           (rule "Definition_axiom_for_bufferElement_in_de_wiesler_Buffers" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "translateJavaAddInt" (formula "21") (term "0,2,0"))
                           (rule "translateJavaMulInt" (formula "21") (term "0,0,2,0"))
                           (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "closeTrue" (formula "22"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "12"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "Definition_axiom_for_count_in_de_wiesler_Buffers" (formula "12") (term "0") (inst "b=b") (userinteraction))
                              (rule "Definition_axiom_for_count_in_de_wiesler_Buffers" (formula "12") (term "1,1") (inst "b=b") (userinteraction))
                              (rule "translateJavaCastInt" (formula "12") (term "0") (userinteraction))
                              (rule "translateJavaCastInt" (formula "12") (term "1,1") (userinteraction))
                              (rule "polySimp_addComm0" (formula "12") (term "1") (userinteraction))
                              (rule "bsum_equal_except_one_index" (formula "12") (inst "index=bucket<<origin(\"User_Interaction @ node 3433 (bsum_equal_except_one_index)\",\"[]\")>>") (userinteraction))
                              (branch "Precondition"
                                 (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "allRight" (formula "12") (inst "sk=b_0"))
                                 (rule "impRight" (formula "12"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "14")) (ifInst ""  (formula "10")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "16"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "false_right" (formula "16"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "17") (term "2,0"))
                                 (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "13") (term "0") (inst "element=element"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "translateJavaAddInt" (formula "13") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "13") (term "0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "13") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "11") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "translateJavaMulInt" (formula "11") (term "1,1,0,0,0"))
                                 (rule "translateJavaMulInt" (formula "11") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "notLeft" (formula "11"))
                                 (rule "notLeft" (formula "11"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "26") (term "2,1,1"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "25") (term "0"))
                                 (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "25")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_subsumption0" (formula "1") (term "0,1") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "1") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0"))
                                 (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "25")))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_subsumption0" (formula "2") (term "1,0,1") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "2") (term "0,1,0,1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "3") (term "0"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "20") (term "0,0") (inst "i=i"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "20") (term "1,1,0") (inst "i=i"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "20") (term "0,0,1,0") (inst "i=i"))
                                 (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "26") (term "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "9")) (ifInst ""  (formula "26")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "27") (term "1"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "closeTrue" (formula "27"))
                              )
                              (branch "Usage"
                                 (rule "eqSymm" (formula "12"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0"))
                                 (rule "polySimp_homoEq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "11")) (ifInst ""  (formula "8")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "13"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "9") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0"))
                                 (rule "translateJavaMulInt" (formula "9") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "notLeft" (formula "9"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "22") (term "2,0"))
                                 (rule "Contract_axiom_for_countElementSplit_in_Functions" (formula "16") (term "0"))
                                 (rule "wellFormedStorePrimitiveArray" (formula "16") (term "1,0"))
                                 (rule "wellFormedStorePrimitiveArray" (formula "16") (term "1,0"))
                                 (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")) (ifInst ""  (formula "3")))
                                 (rule "true_left" (formula "16"))
                                 (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "16") (term "0") (inst "element=element"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "translateJavaAddInt" (formula "16") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "16") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "22") (term "2,1,1"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "21") (term "1,1"))
                                 (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0"))
                                 (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "22") (term "0"))
                                 (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeTrue" (formula "23"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "12"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "allRight" (formula "12") (inst "sk=element_0") (userinteraction))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Buffers" (formula "12") (term "0") (inst "b=b") (userinteraction))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Buffers" (formula "12") (term "0,1") (inst "b=b") (userinteraction))
                                 (rule "translateJavaCastInt" (formula "12") (term "0") (userinteraction))
                                 (rule "translateJavaCastInt" (formula "12") (term "0,1") (userinteraction))
                                 (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "9") (term "0") (inst "element=element") (userinteraction))
                                  (builtin "One Step Simplification" (formula "9") (userinteraction))
                                 (rule "allLeftHide" (formula "9") (inst "t=element_0") (userinteraction))
                                 (rule "bsum_equal_except_one_index" (formula "12") (inst "index=bucket<<origin(\"User_Interaction @ node 3784 (bsum_equal_except_one_index)\",\"[]\")>>") (userinteraction))
                                 (branch "Precondition"
                                    (rule "andRight" (formula "12"))
                                    (branch
                                       (rule "andRight" (formula "12"))
                                       (branch
                                          (rule "translateJavaAddInt" (formula "9") (term "1"))
                                          (rule "eqSymm" (formula "13") (term "0,1,1"))
                                          (rule "polySimp_homoEq" (formula "9"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "12"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch
                                          (rule "close" (formula "12") (ifseqformula "6"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "12") (inst "sk=b_0") (userinteraction))
                                       (rule "impRight" (formula "12") (userinteraction))
                                       (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "13") (term "0") (userinteraction))
                                       (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "13") (term "1") (userinteraction))
                                        (builtin "Use Dependency Contract" (formula "13") (term "1,3,0") (ifInst ""  (formula "13") (term "1,3,1")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::bufferLen(int)].JML accessible clause.0") (userinteraction))
                                       (rule "impLeft" (formula "11") (userinteraction))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "14"))
                                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")) (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "8")))
                                          (rule "wellFormedStorePrimitiveArray" (formula "11") (term "0,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "11") (term "0,0"))
                                          (rule "translateJavaAddInt" (formula "10") (term "1"))
                                          (rule "translateJavaAddInt" (formula "14") (term "3,1"))
                                          (rule "translateJavaMulInt" (formula "14") (term "2,1"))
                                          (rule "translateJavaMulInt" (formula "14") (term "2,0"))
                                          (rule "translateJavaMulInt" (formula "14") (term "0,3,0"))
                                          (rule "translateJavaMulInt" (formula "14") (term "0,3,1"))
                                          (rule "translateJavaAddInt" (formula "14") (term "3,0"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "17") (term "0,1,1"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "2")))
                                          (rule "polySimp_homoEq" (formula "11"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "disjointDefinition" (formula "13") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "disjointWithSingleton1" (formula "13") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0"))
                                          (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "notRight" (formula "13"))
                                          (rule "polySimp_sepPosMonomial" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "elementOfUnion" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "1") (term "0"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_homoEq" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "17") (term "1,0,1,3,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,3,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,3,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,3,0,0") (ifseqformula "1"))
                                          (rule "polySimp_homoEq" (formula "13"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1,0,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,2,0,0,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1,1,3,0,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1,1,0,2,0,0,1,3,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1,1,3,0,1,3,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1,1,0,2,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1,1,3,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,3,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,2,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,2,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,2,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,3,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "13") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "1,1,3,1,0,0") (ifseqformula "1"))
                                          (rule "polySimp_sepPosMonomial" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                                          (rule "applyEq" (formula "13") (term "1,2,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,2,0,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "2,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,2,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,2,0,1,0"))
                                          (rule "add_zero_right" (formula "13") (term "2,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "17") (term "1,3,0,1,3,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "3,0,1,3,0"))
                                          (rule "applyEq" (formula "17") (term "1,3,0,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "3,0,0"))
                                          (rule "applyEq" (formula "18") (term "1,3,0,2,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "3,0,2,0"))
                                          (rule "applyEq" (formula "18") (term "1,0,2,0,0,2,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,2,0,0,2,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,2,0,0,2,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,2,0,0,2,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,2,0,0,2,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,2,0,0,2,0"))
                                          (rule "applyEq" (formula "17") (term "1,0,2,0,0,1,3,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,2,0,0,1,3,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,2,0,0,1,3,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,2,0,0,1,3,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,2,0,0,1,3,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,2,0,0,1,3,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,2,0,0,1,3,0"))
                                          (rule "applyEq" (formula "17") (term "1,0,2,0,0,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,2,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,2,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,2,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,2,0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,2,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,2,0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,3,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "3,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,3,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "3,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,3,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,3,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "3,1,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,3,0,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "3,0,0,0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,3,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "3,0,0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,3,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "3,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,3,0,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "3,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,3,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,3,0,1,0"))
                                          (rule "add_zero_right" (formula "13") (term "3,0,1,0"))
                                          (rule "applyEq" (formula "13") (term "1,3,0,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "3,0,0,0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,3,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "3,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,3,0,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "3,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,3,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,3,0,1,0"))
                                          (rule "add_zero_right" (formula "13") (term "3,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "applyEq" (formula "13") (term "1,0,2,0,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,2,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,2,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,2,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,2,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,2,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,2,0,0,0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,0,2,0,0,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,2,0,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,2,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,2,0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,2,0,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,2,0,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,2,0,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "13") (term "1,0,2,0,0,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,2,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,2,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,2,0,0,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,2,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,2,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,2,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                          (rule "polySimp_mulAssoc" (formula "13") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "16")) (ifInst ""  (formula "12")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "18"))
                                          (rule "add_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "false_right" (formula "18"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "13") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "translateJavaMulInt" (formula "13") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "13") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "notLeft" (formula "15"))
                                          (rule "notLeft" (formula "13"))
                                          (rule "notLeft" (formula "13"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "close" (formula "22") (ifseqformula "3"))
                                       )
                                       (branch "Case 2"
                                          (rule "applyEq" (formula "14") (term "1,3,0") (ifseqformula "11") (userinteraction))
                                           (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "14") (term "1")) (contract "de.wiesler.Functions[de.wiesler.Functions::countElement([I,int,int,int)].JML accessible clause.0") (userinteraction))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "2")) (ifInst ""  (formula "15")))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "12") (term "0,0,0,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "12") (term "0,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "10") (term "1"))
                                          (rule "translateJavaSubInt" (formula "12") (term "2,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "12") (term "1,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "15") (term "3,1"))
                                          (rule "translateJavaMulInt" (formula "15") (term "2,1"))
                                          (rule "translateJavaAddInt" (formula "15") (term "3,0"))
                                          (rule "translateJavaMulInt" (formula "15") (term "2,0"))
                                          (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0"))
                                          (rule "translateJavaMulInt" (formula "15") (term "0,3,1"))
                                          (rule "translateJavaMulInt" (formula "15") (term "0,3,0"))
                                          (rule "translateJavaMulInt" (formula "12") (term "0,0,2,1,1,0"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "13"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "18") (term "0,1,1"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_homoEq" (formula "11"))
                                          (rule "polySimp_elimSub" (formula "14") (term "2,1,1"))
                                          (rule "mul_literals" (formula "14") (term "1,2,1,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "2,1,1"))
                                          (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "disjointDefinition" (formula "14") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "distributeIntersection_2" (formula "14") (term "0,1"))
                                          (rule "intersectWithSingleton" (formula "14") (term "0,0,1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1,1,0,0,0,1"))
                                          (rule "intersectWithSingleton" (formula "14") (term "1,0,1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,1,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0,1"))
                                          (rule "unionEqualsEmpty" (formula "14") (term "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "9") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "translateJavaMulInt" (formula "9") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "9") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "notLeft" (formula "10"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "replace_known_right" (formula "21") (term "0,1,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "18") (term "1"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "25")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Contract_axiom_for_countElementInBucket_in_Buffers" (formula "28") (term "2,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "26") (term "0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "19") (term "0"))
                                          (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_0"))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "castDel" (formula "19") (term "1,0"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "eqSymm" (formula "19") (term "1"))
                                          (rule "eqSymm" (formula "19") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "22"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "27") (term "2,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "translateJavaMulInt" (formula "27") (term "2,2,0"))
                                          (rule "translateJavaAddInt" (formula "27") (term "3,2,0"))
                                          (rule "translateJavaMulInt" (formula "27") (term "0,3,2,0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "26") (term "1,3,1"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "26") (term "1,3,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "25")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "27") (term "1,3,0"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "19") (term "1,1") (inst "i=i"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "19") (term "0,0,1") (inst "i=i"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "24") (term "1,1,1,0,1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "26")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "24") (term "1,1,1,0,1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0,1,0,1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0,0,0,1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "2") (term "1,1") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")))
                                          (rule "translateJavaMulInt" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "2") (term "0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0,1,1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "2") (term "0,1,1") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "2") (term "0,1,1"))
                                          (rule "nnf_notAnd" (formula "2") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "replace_known_left" (formula "2") (term "1,1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "Contract_axiom_for_countElementInBucket_in_Buffers" (formula "28") (term "2,1,1"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "8")))
                                          (rule "true_left" (formula "1"))
                                          (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "28") (term "2,1,1"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "translateJavaAddInt" (formula "28") (term "3,2,1,1"))
                                          (rule "translateJavaMulInt" (formula "28") (term "2,2,1,1"))
                                          (rule "translateJavaMulInt" (formula "28") (term "0,3,2,1,1"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "27") (term "1") (inst "i=i"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "1") (term "0") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")))
                                          (rule "translateJavaMulInt" (formula "1") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "1") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "29"))
                                          (rule "add_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0"))
                                          (rule "qeq_literals" (formula "29") (term "0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "false_right" (formula "29"))
                                          (rule "cnf_rightDist" (formula "20") (term "0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "30") (term "1,3,2,0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "30") (term "1,3,2,1,1"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "29") (term "1") (inst "i=i"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "distr_forallAnd" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "3") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
                                          (rule "translateJavaMulInt" (formula "3") (term "0,1,1,0,0"))
                                          (rule "translateJavaMulInt" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "3") (term "0"))
                                          (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "3") (term "0"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "32") (term "2,0") (inst "i=i"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "32") (term "2,1,1") (inst "i=i"))
                                          (rule "commute_or" (formula "22") (term "0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "2") (term "1,1") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")))
                                          (rule "translateJavaMulInt" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "2") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0,1,1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "2") (term "0,1,1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "2") (term "0,1,1"))
                                          (rule "nnf_notAnd" (formula "2") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,1"))
                                          (rule "replace_known_left" (formula "2") (term "1,1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "cnf_rightDist" (formula "4") (term "0"))
                                          (rule "distr_forallAnd" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "cut_direct" (formula "29") (term "0"))
                                          (branch "CUT: self.buffer.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "notRight" (formula "30"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "8") (term "0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                             (rule "mul_literals" (formula "8") (term "0,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=bucket") (inst "elimGcdRightDiv=add(Z(0(#)), b_0)"))
                                             (rule "add_zero_left" (formula "2") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "add_zero_left" (formula "2") (term "1,1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "33"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,0"))
                                             (rule "leq_literals" (formula "33") (term "0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "inEqSimp_contradInEq5" (formula "10") (ifseqformula "3"))
                                             (rule "greater_literals" (formula "10") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1"))
                                             (rule "mul_literals" (formula "10") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "closeFalse" (formula "10"))
                                          )
                                          (branch "CUT: self.buffer.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "2") (term "0") (inst "b=b"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "18")) (ifInst ""  (formula "20")))
                                             (rule "translateJavaMulInt" (formula "2") (term "1,1,0,0,0"))
                                             (rule "translateJavaMulInt" (formula "2") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                             (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "2") (term "0,0"))
                                             (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                                             (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0,1"))
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "commute_or" (formula "3") (term "0"))
                                             (rule "equal_bsum1" (formula "29"))
                                             (rule "allRight" (formula "29") (inst "sk=i_0"))
                                             (rule "impRight" (formula "29"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "31") (term "0,0,0") (inst "selectSK=arr_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "32") (term "0,0"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "bsum_equal_split3" (formula "34"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "bsum_lower_equals_upper" (formula "34") (term "0,1,1"))
                                             (rule "bsum_lower_equals_upper" (formula "34") (term "1,2,1"))
                                             (rule "eqSymm" (formula "34") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "34") (term "2,0,2,1"))
                                             (rule "polySimp_elimSub" (formula "34") (term "2,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "34") (term "2,0,2,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1"))
                                             (rule "polySimp_mulAssoc" (formula "34") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0"))
                                             (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0"))
                                             (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "bsum_equal_split1" (formula "35"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "bsum_lower_equals_upper" (formula "35") (term "0,2,1"))
                                             (rule "bsum_lower_equals_upper" (formula "35") (term "1,1,1"))
                                             (rule "eqSymm" (formula "35") (term "2,1"))
                                             (rule "polySimp_elimSub" (formula "35") (term "2,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "35") (term "2,0,2,1"))
                                             (rule "polySimp_addComm0" (formula "35") (term "2,0,1,1"))
                                             (rule "replace_known_right" (formula "35") (term "1,1") (ifseqformula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0,1"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "35") (term "0,0,1"))
                                             (rule "leq_literals" (formula "35") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0"))
                                             (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "ifthenelse_split" (formula "37") (term "0,1"))
                                             (branch "value = element_0 TRUE"
                                                (rule "applyEq" (formula "36") (term "3,0,0,0,0,0,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "38") (term "3,0,0,0,0,2,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "3,0,0,0,0,2,0") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "27"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                                (rule "applyEq" (formula "38") (term "3,0,0,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "3,0,0,0,0,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "37") (term "3,0,0,0,0,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "3,0,0,0,0,2,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                                (rule "applyEq" (formula "27") (term "3,0,0,0,0,2,0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "21") (term "0,0") (ifseqformula "13") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "20") (term "0,0") (ifseqformula "13") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
                                                (rule "closeFalse" (formula "20"))
                                             )
                                             (branch "value = element_0 FALSE"
                                                (rule "add_zero_left" (formula "38") (term "1"))
                                                (rule "bsum_zero_right" (formula "34"))
                                                (rule "allRight" (formula "34") (inst "sk=i_1"))
                                                (rule "impRight" (formula "34"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "36"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "36") (term "0,0,0") (inst "selectSK=arr_2"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "37") (term "0,0"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "9"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "24") (term "0,0") (ifseqformula "16") (ifseqformula "17"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "23") (term "0,0") (ifseqformula "16") (ifseqformula "17"))
                                                (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "37")))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Usage"
                                    (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "12") (term "0,1") (userinteraction))
                                    (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "12") (term "1,1") (userinteraction))
                                    (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "12") (term "1,3,0,1") (userinteraction))
                                    (rule "selectOfStore" (formula "12") (term "1,3,0,1") (userinteraction))
                                    (rule "ifthenelse_split" (formula "12") (term "1,3,0,1") (userinteraction))
                                    (branch " self.indices = self.indices & arr(bucket) = arr(bucket) & !arr(bucket) = java.lang.Object::<created> TRUE"
                                       (rule "castDel" (formula "13") (term "1,3,0,1") (userinteraction))
                                       (rule "translateJavaMulInt" (formula "13") (term "2,0,1") (userinteraction))
                                       (rule "translateJavaAddInt" (formula "13") (term "3,0,1") (userinteraction))
                                       (rule "translateJavaMulInt" (formula "13") (term "0,3,0,1") (userinteraction))
                                       (rule "polySimp_addAssoc" (formula "13") (term "3,0,1") (userinteraction))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,3,0,1") (userinteraction))
                                        (builtin "One Step Simplification" (formula "13") (userinteraction))
                                       (rule "translateJavaMulInt" (formula "13") (term "2,1,1") (userinteraction))
                                       (rule "translateJavaAddInt" (formula "13") (term "3,1,1") (userinteraction))
                                       (rule "translateJavaMulInt" (formula "13") (term "0,3,1,1") (userinteraction))
                                       (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "13") (term "1,3,1,1") (userinteraction))
                                        (builtin "Use Dependency Contract" (formula "10") (term "0,1") (ifInst ""  (formula "13") (term "1,1")) (contract "de.wiesler.Functions[de.wiesler.Functions::countElement([I,int,int,int)].JML accessible clause.0") (userinteraction))
                                       (rule "impLeft" (formula "11") (userinteraction))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "1"))
                                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "1"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "10") (term "0,0,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "10") (term "0,0,0"))
                                          (rule "translateJavaAddInt" (formula "9") (term "1"))
                                          (rule "translateJavaSubInt" (formula "10") (term "2,1,1"))
                                          (rule "eqSymm" (formula "14") (term "0,1,1"))
                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1"))
                                          (rule "polySimp_homoEq" (formula "9"))
                                          (rule "polySimp_elimSub" (formula "10") (term "2,1,1"))
                                          (rule "mul_literals" (formula "10") (term "1,2,1,1"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "2,1,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "disjointDefinition" (formula "10") (term "1"))
                                          (rule "polySimp_sepPosMonomial" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "distributeIntersection_2" (formula "10") (term "0,1"))
                                          (rule "intersectWithSingleton" (formula "10") (term "1,0,1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,1,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,1,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,1,0,1,0,1"))
                                          (rule "qeq_literals" (formula "10") (term "1,0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "disjointWithSingleton2" (formula "10") (term "1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "10") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,0,1,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1"))
                                          (rule "times_zero_2" (formula "10") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                                          (rule "elimGcdLeq" (formula "10") (term "1,0,0,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=bucket") (inst "elimGcd=Z(5(5(2(#))))"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0,1,0,0,1"))
                                          (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "10") (term "0,0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "10") (term "0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "Contract_axiom_for_countElementInBucket_in_Buffers" (formula "14") (term "2,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0,0"))
                                          (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "7") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "translateJavaMulInt" (formula "7") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "7") (term "0,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "notLeft" (formula "8"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "notLeft" (formula "8"))
                                          (rule "notLeft" (formula "7"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "replace_known_right" (formula "17") (term "0,0,0,1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                          (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "22") (term "2,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "translateJavaMulInt" (formula "22") (term "0,3,2,0"))
                                          (rule "translateJavaMulInt" (formula "22") (term "2,2,0"))
                                          (rule "translateJavaAddInt" (formula "22") (term "3,2,0"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "20")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "21") (term "0"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "22") (term "1,1") (inst "i=i"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "polySimp_mulAssoc" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "15") (term "0") (inst "i=i"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "15") (term "1,1") (inst "i=i"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "15") (term "0,0,1") (inst "i=i"))
                                          (rule "Contract_axiom_for_countElementInBucket_in_Buffers" (formula "23") (term "2,1,1"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "21")))
                                          (rule "true_left" (formula "1"))
                                          (rule "Definition_axiom_for_countElementInBucket_in_de_wiesler_Buffers" (formula "23") (term "2,1,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "translateJavaAddInt" (formula "23") (term "3,2,1,1"))
                                          (rule "translateJavaMulInt" (formula "23") (term "2,2,1,1"))
                                          (rule "translateJavaMulInt" (formula "23") (term "0,3,2,1,1"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "21")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "1") (term "1,1") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")))
                                          (rule "translateJavaMulInt" (formula "1") (term "0,1,1,0,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0,1,1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0,1,1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,1") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,1,1"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "replace_known_left" (formula "1") (term "1,1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "22") (term "0,1") (inst "i=i"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "23") (term "1,3,2,0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "23") (term "1,3,2,1,1"))
                                          (rule "cnf_rightDist" (formula "13") (term "0"))
                                          (rule "distr_forallAnd" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0,1,1"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "22")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "2") (term "0") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")))
                                          (rule "translateJavaMulInt" (formula "2") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "2") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "2") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "25") (term "2,0") (inst "i=i"))
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "25") (term "2,1,1") (inst "i=i"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0,1,0,1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "23")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "1") (term "1,1") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")))
                                          (rule "translateJavaMulInt" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "1") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,1,1") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,1,1"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "commute_or" (formula "15") (term "0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0,0,1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0,1,0,1"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "23")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "2") (term "0") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "12")) (ifInst ""  (formula "14")))
                                          (rule "translateJavaMulInt" (formula "2") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "2") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "2") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                                          (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "1") (term "0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "24")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0,1,0,1"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "1") (term "0,0,0,1"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "1") (term "0") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "12")) (ifInst ""  (formula "14")))
                                          (rule "translateJavaMulInt" (formula "1") (term "1,1,0,0,0"))
                                          (rule "translateJavaMulInt" (formula "1") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                          (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "2") (term "0,0,0,1"))
                                          (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "1") (term "1,1") (inst "b=b"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "12")) (ifInst ""  (formula "14")))
                                          (rule "translateJavaMulInt" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "translateJavaMulInt" (formula "1") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0,1,1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0,1,1") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "1") (term "0,1,1"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,1"))
                                          (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "ifthenelse_split" (formula "25") (term "0,1"))
                                          (branch "value = element_0 TRUE"
                                             (rule "replace_known_left" (formula "25") (term "0,0,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEq" (formula "18") (term "3,0,0,0,0,2,0") (ifseqformula "1"))
                                             (rule "polySimp_homoEq" (formula "18"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                             (rule "applyEq" (formula "26") (term "3,0,0,1,1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "3,0,0,0,0,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "3,0,0,0,0,2,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "18") (term "3,0,0,0,0,2,1,0") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                             (rule "applyEq" (formula "18") (term "3,0,0,0,0,2,0,1,0") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0"))
                                             (rule "cnf_rightDist" (formula "2") (term "0,1,1"))
                                             (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                             (rule "commute_or" (formula "3") (term "1,0,0"))
                                             (rule "commute_or" (formula "2") (term "1,0,0"))
                                             (rule "commute_or" (formula "2") (term "1,0,1,1"))
                                             (rule "impLeft" (formula "3"))
                                             (branch
                                                (rule "allRight" (formula "18") (inst "sk=b_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,1"))
                                                (rule "impLeft" (formula "2"))
                                                (branch
                                                   (rule "allRight" (formula "17") (inst "sk=b_1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                   (rule "allLeft" (formula "13") (inst "t=bucket"))
                                                   (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "13") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "allLeft" (formula "15") (inst "t=bucket"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "15") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_strengthen0" (formula "15") (ifseqformula "26"))
                                                   (rule "add_literals" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "15"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "qeq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "false_right" (formula "26"))
                                                   (rule "andRight" (formula "20"))
                                                   (branch
                                                      (rule "orRight" (formula "20"))
                                                      (rule "orRight" (formula "20"))
                                                      (rule "inEqSimp_geqRight" (formula "22"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "22"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "22"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "allLeft" (formula "18") (inst "t=b_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "18"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "20"))
                                                      (rule "orRight" (formula "20"))
                                                      (rule "inEqSimp_leqRight" (formula "22"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "21"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "22"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "allLeft" (formula "20") (inst "t=b_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                                (branch
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "26"))
                                                   (rule "add_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "qeq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "false_right" (formula "26"))
                                                   (rule "distr_forallAnd" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "andRight" (formula "19"))
                                                   (branch
                                                      (rule "orRight" (formula "19"))
                                                      (rule "orRight" (formula "19"))
                                                      (rule "inEqSimp_geqRight" (formula "21"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "20"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "allLeft" (formula "19") (inst "t=b_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "19") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "19"))
                                                      (rule "orRight" (formula "19"))
                                                      (rule "inEqSimp_leqRight" (formula "21"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "20"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "allLeft" (formula "20") (inst "t=b_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "20") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "20") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch
                                                (rule "andLeft" (formula "3"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "24"))
                                                (rule "add_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "false_right" (formula "24"))
                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "11") (term "0,0") (ifseqformula "4") (ifseqformula "5"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "23")))
                                                (rule "closeFalse" (formula "11"))
                                             )
                                          )
                                          (branch "value = element_0 FALSE"
                                             (rule "add_zero_left" (formula "26") (term "1"))
                                             (rule "replace_known_right" (formula "24") (term "0,0,1") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "add_zero_left" (formula "24") (term "1"))
                                             (rule "cnf_rightDist" (formula "1") (term "0,1,1"))
                                             (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                             (rule "commute_or" (formula "2") (term "1,0,0"))
                                             (rule "commute_or" (formula "1") (term "1,0,0"))
                                             (rule "commute_or" (formula "1") (term "1,0,1,1"))
                                             (rule "impLeft" (formula "2"))
                                             (branch
                                                (rule "allRight" (formula "17") (inst "sk=b_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,1"))
                                                (rule "impLeft" (formula "1"))
                                                (branch
                                                   (rule "allRight" (formula "16") (inst "sk=b_1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                   (rule "equal_bsum1" (formula "26"))
                                                   (rule "allRight" (formula "26") (inst "sk=b_2"))
                                                   (rule "impRight" (formula "26"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "28") (term "1,1,0") (inst "selectSK=arr_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "bsum_equal_split1" (formula "31"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "bsum_lower_equals_upper" (formula "31") (term "0,2,1"))
                                                   (rule "bsum_lower_equals_upper" (formula "31") (term "1,1,1"))
                                                   (rule "eqSymm" (formula "31") (term "2,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,0,2,1"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "31") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0"))
                                                   (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "bsum_equal_split3" (formula "32"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "bsum_lower_equals_upper" (formula "32") (term "0,1,1"))
                                                   (rule "bsum_lower_equals_upper" (formula "32") (term "1,2,1"))
                                                   (rule "less_literals" (formula "32") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "2,0,1"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "2,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0"))
                                                   (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "bsum_equal_split1" (formula "28"))
                                                   (rule "polySimp_elimSub" (formula "28") (term "2,0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "28") (term "2,1,2,1"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "28") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                   (rule "inEqSimp_and_subsumption2" (formula "28") (term "0"))
                                                   (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "bsum_equal_split1" (formula "31"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,1,2,1"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "31") (term "1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "31") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "31") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                                                   (rule "allLeft" (formula "16") (inst "t=bucket"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "16"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "bsum_zero_right" (formula "34"))
                                                   (rule "allRight" (formula "34") (inst "sk=b_3"))
                                                   (rule "impRight" (formula "34"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "36") (term "1,1,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "allLeft" (formula "22") (inst "t=bucket"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "22") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_strengthen0" (formula "22") (ifseqformula "33"))
                                                   (rule "add_literals" (formula "22") (term "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "22"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0"))
                                                   (rule "qeq_literals" (formula "33") (term "0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "false_right" (formula "33"))
                                                   (rule "bsum_zero_right" (formula "40"))
                                                   (rule "allRight" (formula "40") (inst "sk=b_4"))
                                                   (rule "impRight" (formula "40"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "42"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "42") (term "1,1,0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "22"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "andRight" (formula "31"))
                                                   (branch
                                                      (rule "orRight" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "inEqSimp_geqRight" (formula "33"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "32"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "26"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "andRight" (formula "34"))
                                                      (branch
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "inEqSimp_geqRight" (formula "36"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "30"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "ifthenelse_split" (formula "17") (term "0"))
                                                         (branch "bucket = b_2 TRUE"
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "18"))
                                                            (rule "hideAuxiliaryEq" (formula "18"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,2,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "1,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "43"))
                                                            (rule "applyEq" (formula "51") (term "0,2,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,0,0,1") (ifseqformula "17"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "49") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "37") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "37") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "polySimp_homoEq" (formula "37"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "52") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "52") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "13") (term "0,0"))
                                                            (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "29"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "applyEq" (formula "45") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_sepNegMonomial" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "25") (term "0,0") (ifseqformula "21") (ifseqformula "22"))
                                                            (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "36")))
                                                            (rule "closeFalse" (formula "25"))
                                                         )
                                                         (branch "bucket = b_2 FALSE"
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "17"))
                                                            (rule "hideAuxiliaryEq" (formula "17"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,1,1,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,2,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "0,2,1"))
                                                            (rule "eqSymm" (formula "46") (term "2,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "0,0") (ifseqformula "20") (ifseqformula "21"))
                                                            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")))
                                                            (rule "closeFalse" (formula "27"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "30"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "ifthenelse_split" (formula "17") (term "0"))
                                                         (branch "bucket = b_2 TRUE"
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "18"))
                                                            (rule "hideAuxiliaryEq" (formula "18"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,2,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "1,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,0,0,1,2,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,0,0,1") (ifseqformula "17"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "45") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "polySimp_homoEq" (formula "36"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "31") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "replace_known_left" (formula "45") (term "1,0") (ifseqformula "31"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "13") (term "0,0"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "25") (term "0,0") (ifseqformula "21") (ifseqformula "22"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "39")))
                                                            (rule "closeFalse" (formula "25"))
                                                         )
                                                         (branch "bucket = b_2 FALSE"
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "17"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,1,1,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,2,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "0,2,1"))
                                                            (rule "eqSymm" (formula "46") (term "2,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "0,0") (ifseqformula "20") (ifseqformula "21"))
                                                            (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "42"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")))
                                                            (rule "closeFalse" (formula "27"))
                                                         )
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "inEqSimp_leqRight" (formula "33"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "32"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "26"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "andRight" (formula "34"))
                                                      (branch
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "inEqSimp_geqRight" (formula "36"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "30"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "ifthenelse_split" (formula "17") (term "0"))
                                                         (branch "bucket = b_2 TRUE"
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "18"))
                                                            (rule "hideAuxiliaryEq" (formula "18"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,2,1"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "1,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,1,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,0,0,1,2,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,0,0,2,0,2,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "45") (term "2,1"))
                                                            (rule "applyEq" (formula "47") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "polySimp_homoEq" (formula "36"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42"))
                                                            (rule "applyEq" (formula "43") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,2,0,0,0,1,2,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,3,0,0,0,1,2,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "30"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "13") (term "0,0"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,0,1,2,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,0,1,2,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,2,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "2,1"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,0,1") (ifseqformula "17"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "25") (term "0,0") (ifseqformula "21") (ifseqformula "22"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "39")))
                                                            (rule "closeFalse" (formula "25"))
                                                         )
                                                         (branch "bucket = b_2 FALSE"
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "17"))
                                                            (rule "hideAuxiliaryEq" (formula "17"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,2,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "0,2,1"))
                                                            (rule "eqSymm" (formula "46") (term "2,1"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,1,1,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "1,1,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "0,0") (ifseqformula "20") (ifseqformula "21"))
                                                            (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "42"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")))
                                                            (rule "closeFalse" (formula "27"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "30"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "ifthenelse_split" (formula "17") (term "0"))
                                                         (branch "bucket = b_2 TRUE"
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "18"))
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "18"))
                                                            (rule "hideAuxiliaryEq" (formula "18"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "1,0,2,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "1,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,1,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "51") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,1,2,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,0,0,1") (ifseqformula "17"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "45") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "35") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "polySimp_homoEq" (formula "35"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                            (rule "applyEq" (formula "13") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "17"))
                                                            (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "30"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "13") (term "0,0"))
                                                            (rule "applyEq" (formula "48") (term "0,2,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "9") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,2,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "47") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "46") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "49") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "41") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "40") (term "0,2,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "17"))
                                                            (rule "eqSymm" (formula "42") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "40") (term "0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "40") (term "0,0,1,1") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "40"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,0,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "34") (term "0,1,0,1,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,0,1,0,0") (ifseqformula "17"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "25") (term "0,0") (ifseqformula "21") (ifseqformula "22"))
                                                            (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "36")))
                                                            (rule "closeFalse" (formula "25"))
                                                         )
                                                         (branch "bucket = b_2 FALSE"
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,1,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,1,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,1,0,2,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "1,1,0,1") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,1,0") (ifseqformula "17"))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "17"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,1,1,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,0,2,1"))
                                                            (rule "bsum_lower_equals_upper" (formula "46") (term "0,2,1"))
                                                            (rule "eqSymm" (formula "46") (term "2,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "onlyCreatedObjectsAreReferencedFinal" (formula "27") (term "0,0") (ifseqformula "20") (ifseqformula "21"))
                                                            (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "42"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")))
                                                            (rule "closeFalse" (formula "27"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "25"))
                                                   (rule "add_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "2"))
                                                   (rule "mul_literals" (formula "25") (term "1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0"))
                                                   (rule "qeq_literals" (formula "25") (term "0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "false_right" (formula "25"))
                                                   (rule "distr_forallAnd" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "equal_bsum1" (formula "26"))
                                                   (rule "allRight" (formula "26") (inst "sk=b_1"))
                                                   (rule "impRight" (formula "26"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "28") (term "1,1,0") (inst "selectSK=arr_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "bsum_equal_split1" (formula "31"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "bsum_lower_equals_upper" (formula "31") (term "0,2,1"))
                                                   (rule "bsum_lower_equals_upper" (formula "31") (term "1,1,1"))
                                                   (rule "eqSymm" (formula "31") (term "2,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,0,2,1"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "31") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0"))
                                                   (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "16"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "bsum_equal_split3" (formula "32"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "bsum_lower_equals_upper" (formula "32") (term "0,1,1"))
                                                   (rule "bsum_lower_equals_upper" (formula "32") (term "1,2,1"))
                                                   (rule "less_literals" (formula "32") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "2,0,1"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "2,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0"))
                                                   (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "16"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "bsum_equal_split1" (formula "28"))
                                                   (rule "polySimp_elimSub" (formula "28") (term "2,1,2,1"))
                                                   (rule "polySimp_elimSub" (formula "28") (term "2,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "28") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,1,0"))
                                                   (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "28") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "bsum_equal_split1" (formula "31"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "31") (term "2,1,2,1"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "31") (term "1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "31") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "31") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                                                   (rule "bsum_zero_right" (formula "33"))
                                                   (rule "allRight" (formula "33") (inst "sk=b_2"))
                                                   (rule "impRight" (formula "33"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "35") (term "1,1,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "bsum_zero_right" (formula "39"))
                                                   (rule "allRight" (formula "39") (inst "sk=b_3"))
                                                   (rule "impRight" (formula "39"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "41"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "41") (term "1,1,0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "andRight" (formula "30"))
                                                   (branch
                                                      (rule "orRight" (formula "30"))
                                                      (rule "orRight" (formula "30"))
                                                      (rule "inEqSimp_geqRight" (formula "32"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "32"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "ifthenelse_split" (formula "13") (term "0"))
                                                      (branch "bucket = b_1 TRUE"
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,1,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "1,1,0,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "44") (term "0,1,0") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,2,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,1,1,1") (ifseqformula "14"))
                                                         (rule "hideAuxiliaryEq" (formula "14"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "1,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "1,0,2,1"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,1,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "1,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,1,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
                                                         (rule "applyEq" (formula "42") (term "0,2,1,0,0,1") (ifseqformula "13"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "42") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "47") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "33") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "polySimp_homoEq" (formula "33"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "39") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "48") (term "0,2,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "47") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "47") (term "0,2,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "47") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38"))
                                                         (rule "applyEq" (formula "43") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "5") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "5") (term "0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "13"))
                                                         (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "applyEq" (formula "9") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "9") (term "0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,2,1,1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,3,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,1,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "36") (term "0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "30") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "38") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,1") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "false_right" (formula "38"))
                                                         (rule "applyEq" (formula "30") (term "0,0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,1,0,1,1,0,0") (ifseqformula "13"))
                                                         (rule "polySimp_sepNegMonomial" (formula "30"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                         (rule "onlyCreatedObjectsAreReferencedFinal" (formula "23") (term "0,0") (ifseqformula "19") (ifseqformula "20"))
                                                         (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "35")))
                                                         (rule "closeFalse" (formula "23"))
                                                      )
                                                      (branch "bucket = b_1 FALSE"
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,1,1,1") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEqReverse" (formula "44") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,1,1") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,2,1") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "1,1,0,1") (ifseqformula "13"))
                                                         (rule "hideAuxiliaryEq" (formula "13"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,1,1,1"))
                                                         (rule "bsum_lower_equals_upper" (formula "42") (term "1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,0,2,1"))
                                                         (rule "bsum_lower_equals_upper" (formula "42") (term "0,2,1"))
                                                         (rule "eqSymm" (formula "42") (term "2,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "42") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "onlyCreatedObjectsAreReferencedFinal" (formula "25") (term "0,0") (ifseqformula "18") (ifseqformula "19"))
                                                         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "38")))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "30"))
                                                      (rule "orRight" (formula "30"))
                                                      (rule "inEqSimp_leqRight" (formula "32"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "31"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "ifthenelse_split" (formula "13") (term "0"))
                                                      (branch "bucket = b_1 TRUE"
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,1,1,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,1,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,2,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "44") (term "0,1,0") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "1,1,0,1") (ifseqformula "14"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "14"))
                                                         (rule "hideAuxiliaryEq" (formula "14"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,1,1,1"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "1,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "1,0,2,1"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "1,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,1,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
                                                         (rule "applyEq" (formula "45") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "33") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "polySimp_homoEq" (formula "33"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                         (rule "applyEq" (formula "39") (term "0,2,1,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "48") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "13"))
                                                         (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "applyEq" (formula "44") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "5") (term "0,0"))
                                                         (rule "applyEq" (formula "39") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "47") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "39") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "37"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "9") (term "0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "46") (term "0,2,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "9") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "5") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,2,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,2,1,1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "42") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "45") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "44") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,1,2,0,1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,2,0,2,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "2,1"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,3,0,0,0,1,2,0,1,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,0,1") (ifseqformula "13"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,1"))
                                                         (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "38") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,1,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,3,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,2,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "38") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,0,1,0,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "applyEq" (formula "38") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "13"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "applyEq" (formula "30") (term "0,1,0,1,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,1") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "false_right" (formula "38"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "30") (term "0,0,1,0,1,0,0") (ifseqformula "13"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "30"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                         (rule "onlyCreatedObjectsAreReferencedFinal" (formula "23") (term "0,0") (ifseqformula "19") (ifseqformula "20"))
                                                         (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "35")))
                                                         (rule "closeFalse" (formula "23"))
                                                      )
                                                      (branch "bucket = b_1 FALSE"
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,2,1") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,1,1,1") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEqReverse" (formula "44") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "1,1,0,1") (ifseqformula "13"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,1,1") (ifseqformula "13"))
                                                         (rule "hideAuxiliaryEq" (formula "13"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,0,2,1"))
                                                         (rule "bsum_lower_equals_upper" (formula "42") (term "0,2,1"))
                                                         (rule "eqSymm" (formula "42") (term "2,1"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,1,1,1"))
                                                         (rule "bsum_lower_equals_upper" (formula "42") (term "1,1,1"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,0,1,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "42") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "onlyCreatedObjectsAreReferencedFinal" (formula "25") (term "0,0") (ifseqformula "18") (ifseqformula "19"))
                                                         (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch
                                                (rule "andLeft" (formula "2"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "23"))
                                                (rule "add_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "bsum_equal_split3" (formula "25"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "bsum_lower_equals_upper" (formula "25") (term "1,2,1"))
                                                (rule "bsum_lower_equals_upper" (formula "25") (term "0,1,1"))
                                                (rule "less_literals" (formula "25") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "polySimp_elimSub" (formula "25") (term "2,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "2,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0"))
                                                (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equal_bsum1" (formula "26"))
                                                (rule "allRight" (formula "26") (inst "sk=b_0"))
                                                (rule "impRight" (formula "26"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "28") (term "1,1,0") (inst "selectSK=arr_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "bsum_equal_split1" (formula "31"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "bsum_lower_equals_upper" (formula "31") (term "1,1,1"))
                                                (rule "bsum_lower_equals_upper" (formula "31") (term "0,2,1"))
                                                (rule "eqSymm" (formula "31") (term "2,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "2,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "31") (term "2,0,2,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "2,0,1,1"))
                                                (rule "replace_known_right" (formula "31") (term "1,1") (ifseqformula "29"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0"))
                                                (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "bsum_equal_split1" (formula "27"))
                                                (rule "polySimp_elimSub" (formula "27") (term "2,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "27") (term "2,1,2,1"))
                                                (rule "polySimp_addComm0" (formula "27") (term "2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,1"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "27") (term "0,0,1"))
                                                (rule "leq_literals" (formula "27") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "27") (term "1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "27") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,1,0"))
                                                (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                                                (rule "mul_literals" (formula "27") (term "1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "27") (term "0") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "27") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "bsum_zero_right" (formula "30"))
                                                (rule "allRight" (formula "30") (inst "sk=b_1"))
                                                (rule "impRight" (formula "30"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_2"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "bsum_equal_split1" (formula "36"))
                                                (rule "polySimp_elimSub" (formula "36") (term "2,1,2,1"))
                                                (rule "polySimp_elimSub" (formula "36") (term "2,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "36") (term "2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "36") (term "1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "36") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "36") (term "0,0,1"))
                                                (rule "bsum_zero_right" (formula "38"))
                                                (rule "allRight" (formula "38") (inst "sk=b_2"))
                                                (rule "impRight" (formula "38"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "40"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "40") (term "1,1,0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "ifthenelse_split" (formula "9") (term "0"))
                                                (branch "bucket = b_0 TRUE"
                                                   (rule "applyEqReverse" (formula "42") (term "0,1,0") (ifseqformula "10"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,1,0,2,1") (ifseqformula "10"))
                                                   (rule "applyEqReverse" (formula "41") (term "1,1,0,1") (ifseqformula "10"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,0,1,1,1") (ifseqformula "10"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,1,0,1,1") (ifseqformula "10"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "1,0,2,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,1,1,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "1,0,1"))
                                                   (rule "add_literals" (formula "40") (term "0,1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                                                   (rule "applyEq" (formula "43") (term "0,2,1,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "43") (term "0,2,0,0,0,2,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "44") (term "0,2,1,3,0,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,3,0,1,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,0,2,0,0,1,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "40") (term "0,2,0,0,0,1,2,0,1,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "41") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,0,2,0,0,0,0,1,2,0,1,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "5") (term "0,2,1,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "38") (term "0,2,1,0,2,0,0,0,0,2,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "43") (term "0,2,0,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "43") (term "0,2,0,0,0,2,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "43") (term "0,2,1,0,2,0,0,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "42") (term "0,2,1,3,0,1,1,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "38") (term "0,2,0,0,0,2,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "28") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "polySimp_homoEq" (formula "28"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "34"))
                                                   (rule "applyEq" (formula "35") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "1") (term "0,2,1,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "42") (term "0,2,1,3,0,0,0,2,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "40") (term "0,2,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "38") (term "0,2,1,1,0,1,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "38") (term "0,2,1,1,0,2,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "38") (term "0,2,1,0,0,1") (ifseqformula "9"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,1"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "38") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "34") (term "0,2,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "9"))
                                                   (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "applyEq" (formula "41") (term "0,2,1,0,2,0,0,1,1,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "37") (term "0,2,0,1,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "40") (term "0,2,0,1,1,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,2,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "41") (term "0,2,1,0,2,0,0,0,0,2,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "33") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "33") (term "0,2,1,1,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,0,0,2,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "35") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "40") (term "0,0,0,2,0,0,1,1,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,2,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,0,0,2,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "41") (term "0,0,0,2,0,0,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "33") (term "0,1,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,1,1,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "39") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "38") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,2,0,1") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "36") (term "1"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,1,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,3,0,0,0,0,1,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "0,2,0,0,0,0,1,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "36") (term "1"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "applyEq" (formula "36") (term "0,2,0,0,0,2,0,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,0,2,0,0,0,0,2,0,1") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "36") (term "1"))
                                                   (rule "applyEq" (formula "26") (term "0,2,0,0,0,2,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,0,2,0,0,0,0,0,1,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "applyEq" (formula "26") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,1,3,0,0,0,0,1,2,0,1") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "36") (term "0,2,0,0,0,0,1,2,0,1") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "36") (term "1"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,0,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "32") (term "0,0,0,2,0,0,0,0,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,2,0,1") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "36") (term "1"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,0,2,0,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,3,0,0,0,2,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,0,2,0,0,0,0,2,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,2,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,0,2,0,0,0,0,0,1,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,3,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "applyEq" (formula "36") (term "0,0,0,2,0,0,0,0,0,1,2,0,1") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "36") (term "1"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,1,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0,1,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,2,1,1,0,1,0,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,1") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "false_right" (formula "36"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,2,0,0,0,0,2,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,0,1,0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,2,0,0,0,0,2,0,1,0") (ifseqformula "9"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0,1,1,0,0") (ifseqformula "9"))
                                                   (rule "polySimp_sepNegMonomial" (formula "26"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "19") (term "0,0") (ifseqformula "15") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")))
                                                   (rule "closeFalse" (formula "19"))
                                                )
                                                (branch "bucket = b_0 FALSE"
                                                   (rule "applyEqReverse" (formula "42") (term "0,1,0") (ifseqformula "9"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,1,0,2,1") (ifseqformula "9"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,1,0,1,1") (ifseqformula "9"))
                                                   (rule "applyEqReverse" (formula "41") (term "1,1,0,1") (ifseqformula "9"))
                                                   (rule "applyEqReverse" (formula "41") (term "0,0,1,1,1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "1,0,2,1"))
                                                   (rule "bsum_lower_equals_upper" (formula "40") (term "0,2,1"))
                                                   (rule "eqSymm" (formula "40") (term "2,1"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "1,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,1,1,1"))
                                                   (rule "bsum_lower_equals_upper" (formula "40") (term "1,1,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "40") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "40") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "21") (term "0,0") (ifseqformula "14") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "34")))
                                                   (rule "closeFalse" (formula "21"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "10") (term "1,1") (inst "i=i") (userinteraction))
                                          (rule "bsum_one_summand" (formula "10") (term "1,1") (userinteraction))
                                          (rule "ifthenelse_split" (formula "10") (term "1,1") (userinteraction))
                                          (branch " bucket * 256 + self.indices[bucket] + 1 = 1 + bucket * 256 + self.indices[bucket] TRUE"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "translateJavaAddInt" (formula "10") (term "1"))
                                             (rule "eqSymm" (formula "15") (term "0,1,1"))
                                             (rule "eqSymm" (formula "14") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "9"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1"))
                                             (rule "polySimp_homoEq" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "1,1,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "1,0"))
                                             (rule "times_zero_1" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_sepPosMonomial" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "pullOutSelect" (formula "9") (term "0,0,0") (inst "selectSK=arr_0"))
                                             (rule "simplifySelectOfStore" (formula "9"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "castDel" (formula "9") (term "1,0"))
                                             (rule "eqSymm" (formula "10") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                             (rule "pullOutSelect" (formula "9") (term "2,0") (inst "selectSK=arr_1"))
                                             (rule "simplifySelectOfStore" (formula "9"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "castDel" (formula "9") (term "0"))
                                             (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "Contract_axiom_for_countElementInBucket_in_Buffers" (formula "15") (term "2,0"))
                                             (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0,0"))
                                             (rule "wellFormedStorePrimitiveArray" (formula "1") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "7") (inst "b=b"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "translateJavaMulInt" (formula "7") (term "1,1,0,0,0"))
                                             (rule "translateJavaMulInt" (formula "7") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "eqSymm" (formula "13") (term "0,0"))
                                             (rule "close" (formula "20") (ifseqformula "13"))
                                          )
                                          (branch " bucket * 256 + self.indices[bucket] + 1 = 1 + bucket * 256 + self.indices[bucket] FALSE"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "translateJavaAddInt" (formula "9") (term "1"))
                                             (rule "eqSymm" (formula "14") (term "0,0"))
                                             (rule "eqSymm" (formula "15") (term "0,1,1"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1"))
                                             (rule "polySimp_homoEq" (formula "11"))
                                             (rule "polySimp_homoEq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "closeTrue" (formula "11"))
                                          )
                                       )
                                    )
                                    (branch " self.indices = self.indices & arr(bucket) = arr(bucket) & !arr(bucket) = java.lang.Object::<created> FALSE"
                                        (builtin "One Step Simplification" (formula "13"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "closeTrue" (formula "12"))
                                    )
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "11") (term "0"))
                                 (rule "Contract_axiom_for_countElementSplit_in_Functions" (formula "9") (term "0"))
                                 (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "7") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "translateJavaMulInt" (formula "7") (term "1,1,0,0,0"))
                                 (rule "translateJavaMulInt" (formula "7") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "notLeft" (formula "7"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "20") (inst "b=b"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "9")) (ifInst ""  (formula "11")))
                                 (rule "translateJavaMulInt" (formula "20") (term "1,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "20") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "eqSymm" (formula "20") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "20") (term "0,0,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "8")))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0"))
                                 (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "allRight" (formula "20") (inst "sk=b_0"))
                                 (rule "impRight" (formula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=arr_0"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "18") (term "0") (inst "element=element"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "translateJavaAddInt" (formula "18") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "18") (term "0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "18") (term "0,0") (inst "i=i"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "18") (term "1,1,0") (inst "i=i"))
                                 (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "18") (term "0,0,1,0") (inst "i=i"))
                                 (rule "cnf_rightDist" (formula "16") (term "0"))
                                 (rule "distr_forallAnd" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "commute_or" (formula "17") (term "0"))
                                 (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "bucket = b_0 TRUE"
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                    (rule "add_literals" (formula "25") (term "0,0,1"))
                                    (rule "applyEq" (formula "19") (term "0,2,1,0,2,0,0,0,0,2,0,0") (ifseqformula "1"))
                                    (rule "polySimp_homoEq" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                    (rule "applyEq" (formula "25") (term "0,2,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0,2,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,0,0,0,2,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,0,2,0,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,3,0,0,0,2,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,0,2,0,0,0,0,2,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,3,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,3,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "applyEq" (formula "16") (term "0,2,1,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,2,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,2,0,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,2,0,0,0,0,2,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,2,0,0,0,0,2,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "16") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0"))
                                    (rule "mul_literals" (formula "22") (term "1,0"))
                                    (rule "allLeft" (formula "13") (inst "t=b_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "23"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "23"))
                                    (rule "add_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "false_right" (formula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "15") (inst "t=b_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "15") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "5"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0"))
                                    (rule "add_literals" (formula "15") (term "0"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "closeFalse" (formula "15"))
                                 )
                                 (branch "bucket = b_0 FALSE"
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "allLeft" (formula "16") (inst "t=b_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                    (rule "leq_literals" (formula "16") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_geqRight" (formula "26"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "16") (inst "t=b_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "16") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "16") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "closeTrue" (formula "12"))
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "allRight" (formula "12") (inst "sk=f_0"))
                  (rule "allRight" (formula "12") (inst "sk=o_0"))
                  (rule "orRight" (formula "12"))
                  (rule "orRight" (formula "12"))
                  (rule "orRight" (formula "12"))
                  (rule "eqSymm" (formula "15"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "14"))
                  (rule "add_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "2"))
                  (rule "mul_literals" (formula "14") (term "1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "false_right" (formula "14"))
                  (rule "Contract_axiom_for_countElementSplit_in_Functions" (formula "12") (term "0"))
                  (rule "wellFormedStorePrimitiveArray" (formula "12") (term "1,0"))
                  (rule "wellFormedStorePrimitiveArray" (formula "12") (term "1,0"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "4")))
                  (rule "true_left" (formula "12"))
                  (rule "Definition_axiom_for_countElementSplit_in_de_wiesler_Functions" (formula "12") (term "0") (inst "element=element"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaAddInt" (formula "12") (term "1,0"))
                  (rule "polySimp_homoEq" (formula "12") (term "0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "12") (term "0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "10") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0,0"))
                  (rule "translateJavaMulInt" (formula "10") (term "0,1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "11"))
                  (rule "notLeft" (formula "10"))
                  (rule "eqSymm" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                  (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "23") (term "1,0,1,1"))
                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
      )
      (branch "Null Reference (x_arr_4 = null)"
         (rule "false_right" (formula "11"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "10")) (ifInst ""  (formula "9")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0"))
         (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "12"))
         (rule "add_literals" (formula "2") (term "1"))
         (rule "inEqSimp_contradEq3" (formula "12") (ifseqformula "2"))
         (rule "mul_literals" (formula "12") (term "1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "false_right" (formula "12"))
         (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "10") (inst "b=b"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
         (rule "closeFalse" (formula "10"))
      )
      (branch "Index Out of Bounds (x_arr_4 != null, but x_2 Out of Bounds!)"
         (rule "false_right" (formula "11"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "Contract_axiom_for_bufferLen_in_Buffers" (formula "11") (term "0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "11")) (ifInst ""  (formula "9")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0"))
         (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "13"))
         (rule "add_literals" (formula "2") (term "1"))
         (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "2"))
         (rule "mul_literals" (formula "13") (term "1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "qeq_literals" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "false_right" (formula "13"))
         (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "10") (inst "b=b"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
         (rule "translateJavaMulInt" (formula "10") (term "1,1,0,0,0"))
         (rule "translateJavaMulInt" (formula "10") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "eqSymm" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
         (rule "inEqSimp_commuteLeq" (formula "3"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
         (rule "leq_literals" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "8"))
         (rule "qeq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
   )
   (branch "Null Reference (x_arr_2 = null)"
      (rule "false_right" (formula "11"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "8") (inst "b=b"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
      (rule "closeFalse" (formula "8"))
   )
   (branch "Index Out of Bounds (x_arr_2 != null, but x Out of Bounds!)"
      (rule "false_right" (formula "11"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
      (rule "mul_literals" (formula "1") (term "0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
      (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "8") (inst "b=b"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")))
      (rule "translateJavaMulInt" (formula "8") (term "1,1,0,0,0"))
      (rule "translateJavaMulInt" (formula "8") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "eqSymm" (formula "13"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "8"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
      (rule "mul_literals" (formula "7") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "18") (term "0"))
      (rule "commute_or" (formula "1"))
      (rule "cnf_rightDist" (formula "13") (term "0"))
      (rule "distr_forallAnd" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "commute_or" (formula "14") (term "0"))
      (rule "allLeft" (formula "14") (inst "t=bucket"))
      (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
      (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "8"))
      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
      (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
      (rule "leq_literals" (formula "14") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
      (rule "qeq_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "20"))
      (rule "add_literals" (formula "14") (term "1"))
      (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "14"))
      (rule "mul_literals" (formula "20") (term "1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "qeq_literals" (formula "20") (term "0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "false_right" (formula "20"))
      (rule "allLeft" (formula "13") (inst "t=bucket"))
      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
      (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "6"))
      (rule "qeq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "8"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "arrayLengthNotNegative" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "qeq_literals" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthIsAShort" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAShort" (formula "9") (term "0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "cut_direct" (formula "1") (term "0"))
      (branch "CUT: self.indices[bucket] <= -1 + bucket * -256 TRUE"
          (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
         (rule "times_zero_1" (formula "13") (term "0,0"))
         (rule "add_zero_left" (formula "13") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "inEqSimp_contradInEq5" (formula "13") (ifseqformula "6"))
         (rule "greater_literals" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "mul_literals" (formula "13") (term "1,0"))
         (rule "qeq_literals" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "closeFalse" (formula "13"))
      )
      (branch "CUT: self.indices[bucket] <= -1 + bucket * -256 FALSE"
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "17"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq3" (formula "1") (ifseqformula "8"))
         (rule "mul_literals" (formula "1") (term "0,1,0"))
         (rule "greater_literals" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (x_arr = null)"
   (rule "false_right" (formula "11"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_ltToLeq" (formula "7"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polySimp_elimOne" (formula "7") (term "0"))
   (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "8") (inst "b=b"))
    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
   (rule "closeFalse" (formula "8"))
)
(branch "Index Out of Bounds (x_arr != null, but _bucket Out of Bounds!)"
   (rule "false_right" (formula "11"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_ltToLeq" (formula "7"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polySimp_elimOne" (formula "7") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
   (rule "qeq_literals" (formula "1") (term "0,1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "8") (inst "b=b"))
    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")))
   (rule "translateJavaMulInt" (formula "8") (term "1,1,0,0,0"))
   (rule "translateJavaMulInt" (formula "8") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "eqSymm" (formula "13"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "10"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
   (rule "mul_literals" (formula "6") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "6") (term "0"))
   (rule "add_literals" (formula "6") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
   (rule "polySimp_elimOne" (formula "6") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
   (rule "qeq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "closeFalse" (formula "6"))
)
)
}
