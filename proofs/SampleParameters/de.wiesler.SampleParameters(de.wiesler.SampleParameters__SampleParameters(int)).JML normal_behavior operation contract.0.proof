\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 07 11:58:47 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:onHeap , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Thu Apr 07 11:58:47 CEST 2022
contract=de.wiesler.SampleParameters[de.wiesler.SampleParameters\\:\\:SampleParameters(int)].JML normal_behavior operation contract.0
name=de.wiesler.SampleParameters[de.wiesler.SampleParameters\\:\\:SampleParameters(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))

(autoModeTime "353")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "self_51"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=s"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "s"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "4"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=s_1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "s_1"))
(rule "allocateInstance" (formula "4"))
 (builtin "One Step Simplification" (formula "5"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "7"))
(rule "assignment_write_attribute_this" (formula "7"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallWithinClass" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment_write_attribute_this" (formula "7"))
 (builtin "One Step Simplification" (formula "7"))
(rule "assignment_write_attribute_this" (formula "7"))
 (builtin "One Step Simplification" (formula "7"))
(rule "assignment_write_attribute_this" (formula "7"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "7") (term "1"))
(rule "methodCallReturn" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "var"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "log_buckets"))
 (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_log_buckets,result_43,exc_51") (contract "de.wiesler.SampleParameters[de.wiesler.SampleParameters::log_buckets(int)].JML normal_behavior operation contract.0"))
(branch "Post (log_buckets)"
    (builtin "One Step Simplification" (formula "5"))
   (rule "assignment" (formula "8") (term "1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "eval_order_access4" (formula "8") (term "1") (inst "#v1=x") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "s_2"))
   (rule "assignment" (formula "8") (term "1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
   (rule "assignmentShiftLeftInt" (formula "8") (term "1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "assignment_write_attribute" (formula "8"))
   (branch "Normal Execution (s_2 != null)"
       (builtin "One Step Simplification" (formula "8"))
      (rule "eval_order_access4_this" (formula "8") (term "1") (inst "#v1=x"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "8") (term "1"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "8") (term "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "var_2"))
       (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_oversampling_factor,result_44,exc_52") (contract "de.wiesler.SampleParameters[de.wiesler.SampleParameters::oversampling_factor(int)].JML normal_behavior operation contract.0"))
      (branch "Post (oversampling_factor)"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "assignment" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
          (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_max,result_45,exc_53") (contract "de.wiesler.Functions[de.wiesler.Functions::max(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (max)"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "eqSymm" (formula "8"))
            (rule "inEqSimp_commuteGeq" (formula "8") (term "0,0"))
            (rule "assignment" (formula "11") (term "1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "blockEmpty" (formula "11") (term "1"))
            (rule "assignment_write_attribute_this" (formula "11"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "eval_order_access4_this" (formula "11") (term "1") (inst "#v1=x"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
            (rule "compound_subtraction_1" (formula "11") (term "1") (inst "#v=x_3"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
            (rule "compound_multiplication_2" (formula "11") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_4"))
            (rule "assignment_read_attribute_this" (formula "11"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=de_wiesler_SampleParameters_step_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "12") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_5"))
            (rule "assignment_read_attribute_this" (formula "11"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,0"))
            (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=de_wiesler_SampleParameters_num_buckets_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "12") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "assignmentMultiplicationInt" (formula "11") (term "1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaMulInt" (formula "11") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
            (rule "assignmentSubtractionInt" (formula "11") (term "1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaSubInt" (formula "11") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,0"))
            (rule "mul_literals" (formula "11") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
            (rule "assignment_write_attribute_this" (formula "11"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "methodCallEmpty" (formula "11") (term "1"))
            (rule "blockEmpty" (formula "11") (term "1"))
            (rule "assignment_write_attribute" (formula "11"))
            (branch "Normal Execution (self_51 != null)"
                (builtin "One Step Simplification" (formula "11"))
               (rule "tryEmpty" (formula "11") (term "1"))
               (rule "emptyModality" (formula "11") (term "1"))
               (rule "andRight" (formula "11"))
               (branch
                  (rule "andRight" (formula "11"))
                  (branch
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "Class_invariant_axiom_for_de_wiesler_SampleParameters" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=f_0"))
                  (rule "allRight" (formula "11") (inst "sk=o_0"))
                  (rule "orRight" (formula "11"))
                  (rule "eqSymm" (formula "12"))
                  (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "13"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_and" (formula "5") (term "0,0"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "ifthenelse_split" (formula "13") (term "0"))
                  (branch "result_44 <= 1 TRUE"
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEq" (formula "4") (term "1,1,1,0") (ifseqformula "14"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "14"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> & o_0 = s_1 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "notRight" (formula "14"))
                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "close" (formula "14") (ifseqformula "3"))
                     )
                     (branch "f_0 = java.lang.Object::<created> & o_0 = s_1 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = SampleParameters::$num_buckets & o_0 = s_1 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "false_right" (formula "15"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "notRight" (formula "14"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "13") (ifseqformula "1"))
                        )
                        (branch "f_0 = SampleParameters::$num_buckets & o_0 = s_1 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_0 = SampleParameters::$step & o_0 = s_1 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEq" (formula "15") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "notRight" (formula "15"))
                              (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "16") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "close" (formula "14") (ifseqformula "1"))
                           )
                           (branch "f_0 = SampleParameters::$step & o_0 = s_1 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = SampleParameters::$num_samples & o_0 = s_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "notRight" (formula "17"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEqRigid" (formula "17") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "close" (formula "14") (ifseqformula "3"))
                              )
                              (branch "f_0 = SampleParameters::$num_samples & o_0 = s_1 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_0 = java.lang.Object::<initialized> & o_0 = s_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEqRigid" (formula "15") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,1") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "notRight" (formula "14"))
                                    (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "close" (formula "14") (ifseqformula "3"))
                                 )
                                 (branch "f_0 = java.lang.Object::<initialized> & o_0 = s_1 FALSE"
                                    (rule "close" (formula "19") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "result_44 <= 1 FALSE"
                     (rule "eqSymm" (formula "13"))
                     (rule "inEqSimp_leqRight" (formula "14"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "1,1,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "14"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> & o_0 = s_1 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "applyEqRigid" (formula "17") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "16") (term "1,0,0,1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "notRight" (formula "16"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "4"))
                        (rule "close" (formula "14") (ifseqformula "4"))
                     )
                     (branch "f_0 = java.lang.Object::<created> & o_0 = s_1 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = SampleParameters::$num_buckets & o_0 = s_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "19"))
                           (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "notRight" (formula "18"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "false_right" (formula "14"))
                           (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "15"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                           (rule "close" (formula "13") (ifseqformula "1"))
                        )
                        (branch "f_0 = SampleParameters::$num_buckets & o_0 = s_1 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_0 = SampleParameters::$step & o_0 = s_1 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "3"))
                              (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "notRight" (formula "17"))
                              (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                              (rule "eqSymm" (formula "18"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "eqSymm" (formula "17"))
                              (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "close" (formula "13") (ifseqformula "1"))
                           )
                           (branch "f_0 = SampleParameters::$step & o_0 = s_1 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_0 = SampleParameters::$num_samples & o_0 = s_1 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "false_right" (formula "15"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "17") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "5"))
                                 (rule "polySimp_homoEq" (formula "17"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "notRight" (formula "16"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                              (branch "f_0 = SampleParameters::$num_samples & o_0 = s_1 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<initialized> & o_0 = s_1 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "applyEq" (formula "18") (term "1,0,0,1") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notRight" (formula "18"))
                                    (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "close" (formula "14") (ifseqformula "4"))
                                 )
                                 (branch "f_0 = java.lang.Object::<initialized> & o_0 = s_1 FALSE"
                                    (rule "close" (formula "19") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (self_51 = null)"
               (rule "false_right" (formula "12"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (max)"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (max)"
             (builtin "One Step Simplification" (formula "9"))
            (rule "wellFormedStorePrimitive" (formula "9"))
            (rule "wellFormedStorePrimitive" (formula "9"))
            (rule "wellFormedStorePrimitive" (formula "9"))
            (rule "wellFormedStorePrimitive" (formula "9"))
            (rule "wellFormedCreate" (formula "9"))
            (rule "close" (formula "9") (ifseqformula "2"))
         )
      )
      (branch "Exceptional Post (oversampling_factor)"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "notLeft" (formula "6"))
         (rule "close" (formula "8") (ifseqformula "7"))
      )
      (branch "Pre (oversampling_factor)"
          (builtin "One Step Simplification" (formula "8"))
         (rule "wellFormedStorePrimitive" (formula "8") (term "1"))
         (rule "wellFormedStorePrimitive" (formula "8") (term "1"))
         (rule "wellFormedStorePrimitive" (formula "8") (term "1"))
         (rule "wellFormedStorePrimitive" (formula "8") (term "1"))
         (rule "wellFormedCreate" (formula "8") (term "1"))
         (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "inEqSimp_geqRight" (formula "8"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (s_2 = null)"
      (rule "false_right" (formula "9"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (log_buckets)"
    (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "close" (formula "7") (ifseqformula "6"))
)
(branch "Pre (log_buckets)"
    (builtin "One Step Simplification" (formula "7"))
   (rule "wellFormedStorePrimitive" (formula "7") (term "1"))
   (rule "wellFormedStorePrimitive" (formula "7") (term "1"))
   (rule "wellFormedStorePrimitive" (formula "7") (term "1"))
   (rule "wellFormedStorePrimitive" (formula "7") (term "1"))
   (rule "wellFormedCreate" (formula "7") (term "1"))
   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "inEqSimp_geqRight" (formula "7"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
   (rule "qeq_literals" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)
}
