\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jan 04 21:58:21 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src/de";

\proofObligation "#Proof Obligation Settings
#Tue Jan 04 21:58:21 CET 2022
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:Classifier([I,[I,int,boolean)].JML normal_behavior operation contract.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:Classifier([I,[I,int,boolean)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "666bcb0c95"))

(autoModeTime "43364")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,0,0,1,1,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,0,1,1,1,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "8"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "10"))
 (builtin "One Step Simplification" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "3"))
(rule "polySimp_elimSub" (formula "8") (term "0,2,0"))
(rule "mul_literals" (formula "8") (term "1,0,2,0"))
(rule "eqSymm" (formula "8"))
(rule "polySimp_elimSub" (formula "8") (term "0,2,0"))
(rule "mul_literals" (formula "8") (term "1,0,2,0"))
(rule "eqSymm" (formula "8"))
(rule "polySimp_addComm0" (formula "8") (term "0,2,0"))
(rule "eqSymm" (formula "8"))
(rule "polySimp_addComm0" (formula "8") (term "0,2,0"))
(rule "eqSymm" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "self_25"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "7") (term "0") (inst "i=i"))
 (builtin "One Step Simplification" (formula "7"))
(rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,1"))
(rule "translateJavaAddInt" (formula "7") (term "0,2,1,1,0,1"))
(rule "andLeft" (formula "7"))
(rule "polySimp_elimSub" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_addComm0" (formula "8") (term "0,2,1,1,0"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
(rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "12")))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "leq_literals" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "8") (term "0"))
 (builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "commute_and" (formula "10") (term "0,0"))
(rule "arrayLengthNotNegative" (formula "11") (term "0"))
(rule "arrayLengthIsAShort" (formula "12") (term "0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "true_left" (formula "12"))
(rule "arrayLengthIsAShort" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthNotNegative" (formula "7") (term "0"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=c"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "c_1"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=c_2"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "c_2"))
(rule "allocateInstance" (formula "17"))
 (builtin "One Step Simplification" (formula "18"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "20") (term "1"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "20"))
(rule "assignment_write_attribute_this" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallWithinClass" (formula "20") (term "1"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallSuper" (formula "20") (term "1"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallEmpty" (formula "20") (term "1"))
(rule "blockEmpty" (formula "20") (term "1"))
(rule "assignment_write_attribute_this" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "assignment_write_attribute_this" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "assignment_write_attribute_this" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "assignment_write_attribute_this" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallEmpty" (formula "20") (term "1"))
(rule "blockEmpty" (formula "20") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "20") (term "1"))
(rule "methodCallReturn" (formula "20") (term "1"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallEmpty" (formula "20") (term "1"))
(rule "blockEmpty" (formula "20") (term "1"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "blockEmpty" (formula "20") (term "1"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var_1"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var_2"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var_3"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallSuper" (formula "20") (term "1"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_2"))
 (builtin "One Step Simplification" (formula "20"))
(rule "methodCallEmpty" (formula "20") (term "1"))
(rule "blockEmpty" (formula "20") (term "1"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "num_buckets"))
(rule "assignmentShiftLeftInt" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
 (builtin "Block Contract (Internal)" (formula "20") (newnames "exc#5,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "21"))
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "5")) (ifInst ""  (formula "17")) (ifInst ""  (formula "1")))
   (rule "andLeft" (formula "15"))
   (rule "eqSymm" (formula "22") (term "0,0,1,0,1"))
   (rule "dismissNonSelectedField" (formula "16") (term "0"))
   (rule "dismissNonSelectedField" (formula "16") (term "0"))
   (rule "dismissNonSelectedField" (formula "16") (term "0"))
   (rule "dismissNonSelectedField" (formula "16") (term "0"))
   (rule "dismissNonSelectedField" (formula "16") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0,1"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "exc#5_1"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "emptyStatement" (formula "22") (term "1"))
   (rule "emptyStatement" (formula "22") (term "1"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "16"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")))
   (rule "castDel" (formula "16") (term "0"))
   (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "tryEmpty" (formula "21") (term "1"))
   (rule "blockEmptyLabel" (formula "21") (term "1"))
   (rule "blockEmpty" (formula "21") (term "1"))
   (rule "methodCallEmpty" (formula "21") (term "1"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "emptyModality" (formula "21") (term "1"))
   (rule "andRight" (formula "21"))
   (branch "Case 1"
      (rule "andRight" (formula "21"))
      (branch
          (builtin "One Step Simplification" (formula "21"))
         (rule "closeTrue" (formula "21"))
      )
      (branch "Case 2"
         (rule "andRight" (formula "21"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "21"))
            (rule "shiftLeftLowerBoundGe" (formula "21") (term "0") (ifseqformula "6") (userinteraction))
            (rule "leq_literals" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "translateJavaShiftLeftIntConstant" (formula "1") (term "1,1"))
            (rule "inEqSimp_geqRight" (formula "22"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
            (rule "inEqSimp_subsumption0" (formula "2") (term "0") (ifseqformula "9"))
            (rule "leq_literals" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "javaShiftLeftIntDef" (formula "2") (term "0"))
            (rule "mod_axiom" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
            (rule "div_literals" (formula "2") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "2") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "2") (term "1,0,0"))
            (rule "shiftleft_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "nnf_imp2or" (formula "14") (term "0"))
            (rule "expand_moduloInteger" (formula "3") (term "1"))
            (rule "replace_int_MIN" (formula "3") (term "0,1"))
            (rule "replace_int_RANGE" (formula "3") (term "1,1,1"))
            (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1"))
            (rule "add_literals" (formula "3") (term "0,1,1"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "mod_axiom" (formula "3") (term "1,0"))
            (rule "div_literals" (formula "3") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
            (rule "mul_literals" (formula "3") (term "1,1,0"))
            (rule "add_zero_right" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "21"))
            (rule "shiftLeftUpperBoundLe" (formula "21") (term "1") (ifseqformula "7") (userinteraction))
            (rule "leq_literals" (formula "1") (term "1,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "translateJavaShiftLeftIntConstant" (formula "22") (term "0"))
            (rule "translateJavaShiftLeftIntConstant" (formula "1") (term "1,1"))
            (rule "inEqSimp_geqRight" (formula "22"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
            (rule "inEqSimp_subsumption1" (formula "2") (term "0") (ifseqformula "8"))
            (rule "leq_literals" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
   (branch
       (builtin "One Step Simplification" (formula "21"))
      (rule "closeTrue" (formula "21"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "20"))
   (branch
      (rule "andRight" (formula "20"))
      (branch
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "5")))
         (rule "closeTrue" (formula "20"))
      )
      (branch
          (builtin "One Step Simplification" (formula "20"))
         (rule "wellFormedStorePrimitive" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "wellFormedStoreObject" (formula "20"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "wellFormedStorePrimitive" (formula "20"))
         (rule "wellFormedStoreObject" (formula "20"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "wellFormedStorePrimitive" (formula "20"))
         (rule "wellFormedCreate" (formula "20"))
         (rule "close" (formula "20") (ifseqformula "2"))
      )
   )
   (branch
      (rule "andRight" (formula "20"))
      (branch
         (rule "andRight" (formula "20"))
         (branch
             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "16")))
            (rule "closeTrue" (formula "20"))
         )
         (branch
             (builtin "One Step Simplification" (formula "20"))
            (rule "dismissNonSelectedField" (formula "20") (term "0"))
            (rule "dismissNonSelectedField" (formula "20") (term "0"))
            (rule "dismissNonSelectedField" (formula "20") (term "0"))
            (rule "dismissNonSelectedField" (formula "20") (term "0"))
            (rule "dismissNonSelectedField" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
            (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "closeTrue" (formula "21"))
         )
      )
      (branch
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "20"))
      )
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "15"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "translateJavaShiftLeftIntConstant" (formula "17") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "17"))
   (rule "javaShiftLeftIntDef" (formula "17") (term "0"))
   (rule "shiftLeftDef" (formula "17") (term "0,0"))
   (rule "polySimp_elimNeg" (formula "17") (term "1,1,0,0"))
   (rule "shiftLeftPositiveShiftDef" (formula "17") (term "2,0,0"))
   (rule "polySimp_elimOneLeft0" (formula "17") (term "2,0,0"))
   (rule "shiftRightPositiveShiftDef" (formula "17") (term "1,0,0"))
   (rule "expand_moduloInteger" (formula "17") (term "0"))
   (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0"))
   (rule "replace_int_RANGE" (formula "17") (term "1,1,0"))
   (rule "replace_int_MIN" (formula "17") (term "0,0"))
   (rule "elim_double_block_2" (formula "23") (term "1"))
   (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "23") (term "1"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "replace_known_left" (formula "23") (term "0,0,1,0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "ifSplit" (formula "23"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "23") (term "1"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "num_splitters"))
      (rule "assignmentSubtractionInt" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
      (rule "mul_literals" (formula "23") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
      (rule "assertSafe" (formula "23") (inst "#condition=x") (inst "oldHeap=oldHeap_0") (inst "f=f") (inst "o=o"))
      (branch "Assertion ( ( var[num_splitters]==var[num_splitters-1])) Skip"
         (rule "eval_order_access4_this" (formula "23") (term "1") (inst "#v1=t"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "t"))
          (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_Tree,self_0,exc_0,heapAfter_Tree,anon_heap_Tree") (contract "de.wiesler.Tree[de.wiesler.Tree::Tree([I,[I,int)].JML normal_behavior operation contract.0"))
         (branch "Post (Tree)"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "dismissNonSelectedField" (formula "26") (term "0"))
            (rule "dismissNonSelectedField" (formula "26") (term "0"))
            (rule "dismissNonSelectedField" (formula "26") (term "0"))
            (rule "dismissNonSelectedField" (formula "26") (term "0"))
            (rule "dismissNonSelectedField" (formula "26") (term "0"))
            (rule "assignment" (formula "33") (term "1"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "assignment_write_attribute_this" (formula "33"))
             (builtin "One Step Simplification" (formula "33"))
             (builtin "Block Contract (Internal)" (formula "33") (newnames "exc#3,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
            (branch "Validity"
                (builtin "One Step Simplification" (formula "34"))
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "5")) (ifInst ""  (formula "30")) (ifInst ""  (formula "1")))
               (rule "translateJavaSubInt" (formula "34") (term "0,2,1,1,0,0,1"))
               (rule "andLeft" (formula "26"))
               (rule "eqSymm" (formula "35") (term "0,0,1,0,1"))
               (rule "eqSymm" (formula "35") (term "1,0,0,1"))
               (rule "polySimp_elimSub" (formula "35") (term "0,2,0,1,0,0,1"))
               (rule "mul_literals" (formula "35") (term "1,0,2,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0,0,1"))
               (rule "dismissNonSelectedField" (formula "27") (term "0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (ifseqformula "19"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0"))
               (rule "variableDeclarationAssign" (formula "35") (term "1"))
               (rule "variableDeclaration" (formula "35") (term "1") (newnames "exc#3_1"))
               (rule "assignment" (formula "35") (term "1"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "emptyStatement" (formula "35") (term "1"))
               (rule "emptyStatement" (formula "35") (term "1"))
               (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
               (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")))
               (rule "eqSymm" (formula "24"))
               (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "23") (term "0,0,0"))
               (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=de_wiesler_Tree_tree_0"))
               (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
               (rule "eqSymm" (formula "25"))
               (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "24") (term "0,0,0"))
               (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
               (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfCreate" (formula "27"))
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
               (rule "castDel" (formula "27") (term "0"))
               (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "tryEmpty" (formula "34") (term "1"))
               (rule "blockEmptyLabel" (formula "34") (term "1"))
               (rule "blockEmpty" (formula "34") (term "1"))
               (rule "methodCallEmpty" (formula "34") (term "1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "emptyModality" (formula "34") (term "1"))
               (rule "andRight" (formula "34"))
               (branch
                  (rule "andRight" (formula "34"))
                  (branch
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "closeTrue" (formula "34"))
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,2,0"))
                     (rule "add_literals" (formula "34") (term "0,0,2,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "1"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                     (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "div_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "mod_axiom" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "div_literals" (formula "17") (term "0,0,1,1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "17") (term "0,1,1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "17") (term "1,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "pow_literals" (formula "17") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0"))
                     (rule "mod_axiom" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "div_literals" (formula "17") (term "0,1,0,1,0"))
                     (rule "times_zero_2" (formula "17") (term "1,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "pullOutSelect" (formula "33") (term "1") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                     (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                     (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                     (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                     (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "1"))
                     (rule "close" (formula "34") (ifseqformula "14"))
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "closeTrue" (formula "34"))
               )
            )
            (branch "Precondition"
               (rule "andRight" (formula "33"))
               (branch
                  (rule "andRight" (formula "33"))
                  (branch
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "5")))
                     (rule "closeTrue" (formula "33"))
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                     (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                     (rule "div_literals" (formula "17") (term "0,0,1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "mod_axiom" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                     (rule "div_literals" (formula "17") (term "0,1,1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "17") (term "1,1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "pow_literals" (formula "17") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0"))
                     (rule "mod_axiom" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "div_literals" (formula "17") (term "0,1,0,1,0"))
                     (rule "times_zero_2" (formula "17") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "17") (term "0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "wellFormedStoreObject" (formula "32"))
                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "26")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "18"))
                     (rule "wellFormedAnonEQ" (formula "32") (term "0") (ifseqformula "18"))
                     (rule "wellFormedStorePrimitive" (formula "32") (term "0,0"))
                     (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "20")))
                     (rule "wellFormedStoreObject" (formula "32"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "wellFormedStorePrimitive" (formula "32"))
                     (rule "wellFormedStoreObject" (formula "32"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "wellFormedStorePrimitive" (formula "32"))
                     (rule "wellFormedCreate" (formula "32"))
                     (rule "close" (formula "32") (ifseqformula "2"))
                  )
               )
               (branch
                  (rule "andRight" (formula "33"))
                  (branch
                     (rule "andRight" (formula "33"))
                     (branch
                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "29")))
                        (rule "closeTrue" (formula "33"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "dismissNonSelectedField" (formula "33") (term "0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "19"))
                        (rule "orRight" (formula "33"))
                        (rule "dismissNonSelectedField" (formula "33") (term "0"))
                        (rule "dismissNonSelectedField" (formula "33") (term "0"))
                        (rule "dismissNonSelectedField" (formula "33") (term "0"))
                        (rule "dismissNonSelectedField" (formula "33") (term "0"))
                        (rule "dismissNonSelectedField" (formula "33") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                        (rule "mod_axiom" (formula "17") (term "1,2,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,2,1,0,0,1,0"))
                        (rule "div_literals" (formula "17") (term "0,1,1,2,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,2,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,2,1,0,0,1,0"))
                        (rule "pow_literals" (formula "17") (term "2,1,0,0,1,0"))
                        (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "div_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                        (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0"))
                        (rule "mod_axiom" (formula "17") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                        (rule "div_literals" (formula "17") (term "0,1,0,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,1,0"))
                        (rule "mul_literals" (formula "17") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=de_wiesler_Tree_tree_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "sortsDisjointModuloNull" (formula "23") (term "0,0,0"))
                        (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")))
                        (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "22") (term "0,0,0"))
                        (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "closeTrue" (formula "33"))
                     )
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")))
                     (rule "closeTrue" (formula "33"))
                  )
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "34"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "translateJavaSubInt" (formula "26") (term "0,2,1,1,0"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "eqSymm" (formula "27"))
               (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "polySimp_elimSub" (formula "27") (term "0,2,0"))
               (rule "mul_literals" (formula "27") (term "1,0,2,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,2,0"))
               (rule "add_literals" (formula "27") (term "0,0,2,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "1"))
               (rule "dismissNonSelectedField" (formula "27") (term "0"))
               (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
               (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")))
               (rule "eqSymm" (formula "24"))
               (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "23") (term "0,0,0"))
               (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "ifthenelse_negated" (formula "23") (term "0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0"))
               (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=de_wiesler_Tree_tree_0"))
               (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
               (rule "eqSymm" (formula "25"))
               (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "24") (term "0,0,0"))
               (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")))
               (rule "ifthenelse_negated" (formula "24") (term "0"))
               (rule "dismissNonSelectedField" (formula "24") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
               (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "1") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
               (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "34")))
               (rule "eqSymm" (formula "28") (term "0,0,0"))
               (rule "eqSymm" (formula "27") (term "0,0,0"))
               (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
               (rule "ifthenelse_negated" (formula "28") (term "0"))
               (rule "ifthenelse_negated" (formula "27") (term "0"))
               (rule "pullOutSelect" (formula "28") (term "1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfCreate" (formula "28"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
               (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
               (rule "hideAuxiliaryEq" (formula "28"))
               (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "14"))
               (rule "pullOutSelect" (formula "28") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "28"))
               (rule "simplifySelectOfCreate" (formula "28"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
               (rule "castDel" (formula "28") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "28") (term "0,0"))
               (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")))
               (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "28"))
               (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "28"))
               (rule "hideAuxiliaryEq" (formula "28"))
               (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "simplifySelectOfCreate" (formula "27"))
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "3")))
               (rule "true_left" (formula "28"))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "elim_double_block_2" (formula "34") (term "1"))
               (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "arrayLengthNotNegative" (formula "12") (term "0"))
               (rule "arrayLengthNotNegative" (formula "9") (term "0"))
               (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "ifUnfold" (formula "34") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_1"))
               (rule "inequality_comparison_simple" (formula "34") (term "1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "replace_known_left" (formula "34") (term "0,0,1,0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "ifSplit" (formula "34"))
               (branch "if x_1 true"
                   (builtin "One Step Simplification" (formula "35"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_1 false"
                   (builtin "One Step Simplification" (formula "35"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "34") (term "1"))
                   (builtin "Block Contract (Internal)" (formula "34") (newnames "exc#1,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "5")) (ifInst ""  (formula "31")) (ifInst ""  (formula "1")))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "27"))
                     (rule "eqSymm" (formula "36") (term "0,0,1,0,1"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "19"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                     (rule "variableDeclarationAssign" (formula "36") (term "1"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "exc#1_1"))
                     (rule "assignment" (formula "36") (term "1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "emptyStatement" (formula "36") (term "1"))
                     (rule "emptyStatement" (formula "36") (term "1"))
                     (rule "pullOutSelect" (formula "28") (term "0,0") (inst "selectSK=java_lang_Object_created__2"))
                     (rule "simplifySelectOfCreate" (formula "28"))
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                     (rule "castDel" (formula "28") (term "0"))
                     (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "28"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "tryEmpty" (formula "35") (term "1"))
                     (rule "blockEmptyLabel" (formula "35") (term "1"))
                     (rule "blockEmpty" (formula "35") (term "1"))
                     (rule "methodCallEmpty" (formula "35") (term "1"))
                     (rule "emptyModality" (formula "35") (term "1"))
                     (rule "andRight" (formula "35"))
                     (branch
                        (rule "andRight" (formula "35"))
                        (branch
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "closeTrue" (formula "35"))
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "dismissNonSelectedField" (formula "35") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                           (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,0,1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "mod_axiom" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,1,1,1,0,0,1,0"))
                           (rule "times_zero_2" (formula "17") (term "1,1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "pow_literals" (formula "17") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0"))
                           (rule "mod_axiom" (formula "17") (term "0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,0,1,0,1,0"))
                           (rule "times_zero_2" (formula "17") (term "0,1,0,1,0"))
                           (rule "times_zero_2" (formula "17") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "35"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_wiesler_Classifier_tree_0"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                           (rule "replaceKnownSelect_taclet20012_4" (formula "2") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20012_5" (formula "2") (term "0,0,1,0,0"))
                           (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                           (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "34"))
                           (rule "close" (formula "34") (ifseqformula "22"))
                        )
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "closeTrue" (formula "35"))
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "34"))
                     (branch
                        (rule "andRight" (formula "34"))
                        (branch
                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "5")))
                           (rule "closeTrue" (formula "34"))
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                           (rule "mod_axiom" (formula "17") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,1,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,1,0,1,1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,1,1,1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,1,1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,1,1,0,0,1,0"))
                           (rule "pow_literals" (formula "17") (term "1,1,1,0,0,1,0"))
                           (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "mod_axiom" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,0,1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0,1,0"))
                           (rule "times_zero_2" (formula "17") (term "1,1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "pow_literals" (formula "17") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0"))
                           (rule "mod_axiom" (formula "17") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,1,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "wellFormedStoreObject" (formula "33"))
                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "27")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1") (ifseqformula "18"))
                           (rule "wellFormedAnonEQ" (formula "33") (term "0") (ifseqformula "18"))
                           (rule "wellFormedStorePrimitive" (formula "33") (term "0,0"))
                           (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "20")))
                           (rule "wellFormedStoreObject" (formula "33"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "wellFormedStorePrimitive" (formula "33"))
                           (rule "wellFormedStoreObject" (formula "33"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "wellFormedStorePrimitive" (formula "33"))
                           (rule "wellFormedCreate" (formula "33"))
                           (rule "close" (formula "33") (ifseqformula "2"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "34"))
                        (branch
                           (rule "andRight" (formula "34"))
                           (branch
                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                              (rule "closeTrue" (formula "34"))
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "19"))
                              (rule "orRight" (formula "34"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0"))
                              (rule "dismissNonSelectedField" (formula "34") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "mod_axiom" (formula "17") (term "1,2,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,2,1,0,0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,1,1,2,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,2,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "1,2,1,0,0,1,0"))
                              (rule "pow_literals" (formula "17") (term "2,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "17") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,1,0,1,1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,1,1,1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "0,1,1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,1,1,0,0,1,0"))
                              (rule "pow_literals" (formula "17") (term "1,1,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0"))
                              (rule "mod_axiom" (formula "17") (term "0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "closeTrue" (formula "34"))
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "34"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=de_wiesler_Tree_log_buckets_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "28") (term "0,0,0"))
                     (rule "replace_known_right" (formula "28") (term "1,0,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                     (rule "pullOutSelect" (formula "28") (term "0,0,0,0,0") (inst "selectSK=de_wiesler_Classifier_tree_0"))
                     (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "29") (term "1,0,0,1,0,0") (ifseqformula "28"))
                     (rule "simplifySelectOfStore" (formula "28"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "castDel" (formula "28") (term "0"))
                     (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0") (ifseqformula "28"))
                     (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "28"))
                     (rule "applyEqReverse" (formula "29") (term "1,2,0") (ifseqformula "28"))
                     (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0,0") (ifseqformula "28"))
                     (rule "replaceKnownSelect_taclet20012_4" (formula "29") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet20012_5" (formula "29") (term "0,0,1,0,0"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")) (ifInst ""  (formula "23")))
                     (rule "true_left" (formula "28"))
                     (rule "elim_double_block_2" (formula "35") (term "1"))
                     (rule "ifUnfold" (formula "35") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_2"))
                     (rule "inequality_comparison_simple" (formula "35") (term "1"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "replace_known_left" (formula "35") (term "0,0,1,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "25"))
                     (rule "ifSplit" (formula "36"))
                     (branch "if x_2 true"
                         (builtin "One Step Simplification" (formula "37"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_2 false"
                         (builtin "One Step Simplification" (formula "37"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "36") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "36"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "eval_order_access4_this" (formula "36") (term "1") (inst "#v1=x"))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_3"))
                        (rule "compound_shiftleft_2" (formula "36") (term "1") (inst "#v0=x_4") (inst "#v1=x_5"))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_4"))
                        (rule "assignment" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_5"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "36") (term "1") (inst "#v0=x_6"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_6"))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "b"))
                        (rule "assignment" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_toInt,savedHeapBefore_toInt"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "returnUnfold" (formula "36") (term "1") (inst "#v0=x_7"))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_7"))
                        (rule "condition_simple" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "methodCallReturn" (formula "36") (term "1"))
                        (rule "assignment" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "methodCallEmpty" (formula "36") (term "1"))
                        (rule "blockEmpty" (formula "36") (term "1"))
                        (rule "assignment" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "assignmentShiftLeftInt" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "assignment_write_attribute_this" (formula "36"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "assignment_write_attribute_this" (formula "36"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "methodCallEmpty" (formula "36") (term "1"))
                        (rule "blockEmpty" (formula "36") (term "1"))
                        (rule "assignment_write_attribute" (formula "36"))
                        (branch "Normal Execution (self_25 != null)"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "tryEmpty" (formula "36") (term "1"))
                           (rule "emptyModality" (formula "36") (term "1"))
                           (rule "andRight" (formula "36"))
                           (branch "Case 1"
                              (rule "andRight" (formula "36"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "36") (ifseqformula "1") (userinteraction))
                                 (rule "andRight" (formula "36"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "36"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "36"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "36"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "36"))
                                             (branch
                                                (rule "andRight" (formula "36"))
                                                (branch
                                                   (rule "notRight" (formula "36"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "replaceKnownSelect_taclet2120012_16" (formula "1") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "1") (term "0"))
                                                   (rule "close" (formula "31") (ifseqformula "1"))
                                                )
                                                (branch
                                                   (rule "notRight" (formula "36"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                   (rule "mod_axiom" (formula "18") (term "0,1,1,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1,1,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,1,0,1,1,1,1,0,0,1,0"))
                                                   (rule "times_zero_2" (formula "18") (term "1,0,1,1,1,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,1,1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0,1,0"))
                                                   (rule "pow_literals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,1,1,2,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "1,2,1,0,0,1,0"))
                                                   (rule "pow_literals" (formula "18") (term "2,1,0,0,1,0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                                   (rule "leq_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                   (rule "mod_axiom" (formula "18") (term "0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "times_zero_2" (formula "18") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_Classifier_sorted_splitters_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "35") (ifseqformula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "36") (term "0") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "pullOut" (formula "36") (term "3,0,0,0,0,1") (inst "sk=javaShiftLeftInt_0") (userinteraction))
                                                (rule "eqTermCut" (formula "37") (term "1,0") (inst "s=javaShiftLeftInt_0") (userinteraction))
                                                (branch "Assume c_2.num_buckets@heapAfter_Tree[c_2.tree := self_0] [c_2.sorted_splitters := sorted_splitters] [c_2.num_buckets := javaShiftLeftInt(javaShiftLeftInt(1, log_buckets), if ( equal_buckets = TRUE) then (1) else (0))] [c_2.equal_buckets := equal_buckets] [c_2.<initialized> := TRUE] = javaShiftLeftInt_0"
                                                   (rule "ifthenelse_split" (formula "2") (term "1,0") (userinteraction))
                                                   (branch "equal_buckets = TRUE TRUE"
                                                      (rule "shiftLeftChain" (formula "3") (term "0") (userinteraction))
                                                      (rule "impLeft" (formula "3") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "leq_literals" (formula "32") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "replace_known_left" (formula "1") (term "0,1,3,0,0,0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replace_known_left" (formula "40") (term "0,1,3,0,0,0,1,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "40") (term "0,1"))
                                                         (rule "dismissNonSelectedField" (formula "40") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "40") (term "0,1"))
                                                         (rule "dismissNonSelectedField" (formula "40") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "40") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                                         (rule "add_literals" (formula "32") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                         (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "applyEq" (formula "40") (term "3,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "1") (term "3,0,0") (ifseqformula "3"))
                                                         (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                         (rule "mod_axiom" (formula "20") (term "0,1,0"))
                                                         (rule "div_literals" (formula "20") (term "0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                         (rule "add_literals" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                         (rule "mul_literals" (formula "20") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_subsumption0" (formula "31") (term "1") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "31") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_geqRight" (formula "31"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "closeFalse" (formula "10"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "shiftLeftSplitTwo" (formula "3") (term "1") (userinteraction))
                                                         (rule "replace_known_left" (formula "1") (term "0,1,3,0,0,0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replace_known_left" (formula "41") (term "0,1,3,0,0,0,1,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "polySimp_elimSub" (formula "3") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "1,1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "3") (term "1,0,0,1"))
                                                         (rule "eqSymm" (formula "3") (term "1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "41") (term "0,1"))
                                                         (rule "dismissNonSelectedField" (formula "41") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "41") (term "0,1"))
                                                         (rule "dismissNonSelectedField" (formula "41") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                         (rule "mod_axiom" (formula "22") (term "0,1,1,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,1,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,1,0,1,1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,1,1,1,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,1,1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,1,1,0,0,1,0"))
                                                         (rule "pow_literals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,1,0,0,1,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,1,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "applyEq" (formula "1") (term "3,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "41") (term "3,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "4"))
                                                         (rule "mod_axiom" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,1,1,1,0,0,1,0"))
                                                         (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "pow_literals" (formula "22") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                         (rule "applyEq" (formula "1") (term "3,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "3") (term "1"))
                                                         (rule "mod_axiom" (formula "22") (term "0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                         (rule "applyEq" (formula "41") (term "3,0,0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                         (rule "mul_literals" (formula "22") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "21"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "inEqSimp_subsumption0" (formula "3") (term "0") (ifseqformula "12"))
                                                         (rule "leq_literals" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "newSym_eq" (formula "3") (inst "l=l_0") (inst "newSymDef=mul(javaShiftLeftInt_0, Z(0(#)))"))
                                                         (rule "times_zero_1" (formula "3") (term "1,1"))
                                                         (rule "add_zero_right" (formula "3") (term "1"))
                                                         (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "4"))
                                                         (rule "applyEq" (formula "18") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "15") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "41") (term "3,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "41") (term "3,0,0,1") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "1") (term "3,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "4"))
                                                         (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=de_wiesler_Classifier_num_buckets_0"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "inEqSimp_subsumption4" (formula "40") (term "1") (ifseqformula "21"))
                                                         (rule "greater_literals" (formula "40") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "40") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_geqRight" (formula "40"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "21"))
                                                         (rule "greater_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "equal_buckets = TRUE FALSE"
                                                      (rule "translateJavaShiftLeftIntZero" (formula "2") (term "0") (userinteraction))
                                                      (rule "replace_known_right" (formula "1") (term "0,1,3,0,0,0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_right" (formula "39") (term "0,1,3,0,0,0,1,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "translateJavaShiftLeftIntZero" (formula "39") (term "3,0,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "39") (term "0,1"))
                                                      (rule "translateJavaShiftLeftIntZero" (formula "1") (term "3,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "39") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "39") (term "0,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "39") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "39") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                      (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0,1,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,1,0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEq" (formula "39") (term "3,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "1") (term "3,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "16") (term "1,0,2,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "16"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "11") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "15") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "mod_axiom" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "19") (term "0,1,1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                      (rule "mod_axiom" (formula "19") (term "0,1,0"))
                                                      (rule "div_literals" (formula "19") (term "0,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "applyEq" (formula "16") (term "1,0,2,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "16"))
                                                      (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "pullOutSelect" (formula "38") (term "0,1") (inst "selectSK=de_wiesler_Classifier_num_buckets_0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_leqRight" (formula "37"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "closeFalse" (formula "18"))
                                                   )
                                                )
                                                (branch "Assume c_2.num_buckets@heapAfter_Tree[c_2.tree := self_0] [c_2.sorted_splitters := sorted_splitters] [c_2.num_buckets := javaShiftLeftInt(javaShiftLeftInt(1, log_buckets), if ( equal_buckets = TRUE) then (1) else (0))] [c_2.equal_buckets := equal_buckets] [c_2.<initialized> := TRUE] != javaShiftLeftInt_0"
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "38") (term "0,1"))
                                                   (rule "dismissNonSelectedField" (formula "38") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "38") (term "0,1"))
                                                   (rule "dismissNonSelectedField" (formula "38") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "38") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,1,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                                   (rule "leq_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "30") (term "3,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "38") (term "3,0,0,0") (ifseqformula "1"))
                                                   (rule "mod_axiom" (formula "18") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                   (rule "pow_literals" (formula "18") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                   (rule "mod_axiom" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                   (rule "div_literals" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "pullOutSelect" (formula "37") (term "0,1") (inst "selectSK=de_wiesler_Classifier_num_buckets_0"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeTrue" (formula "30"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "translateJavaAddInt" (formula "36") (term "1,1") (userinteraction))
                                             (rule "eqTermCut" (formula "36") (term "1,1,1,1") (inst "s=TRUE") (userinteraction))
                                             (branch "Assume c_2.equal_buckets@heapAfter_Tree[c_2.tree := self_0] [c_2.sorted_splitters := sorted_splitters] [c_2.num_buckets := javaShiftLeftInt(javaShiftLeftInt(1, log_buckets), if ( equal_buckets = TRUE) then (1) else (0))] [c_2.equal_buckets := equal_buckets] [c_2.<initialized> := TRUE] = TRUE"
                                                (rule "applyEq" (formula "37") (term "1,1,1,1") (ifseqformula "1") (userinteraction))
                                                 (builtin "Evaluate Query" (formula "37") (term "1,1,1") (newnames "b_0,callee,queryResult,res_toInt"))
                                                 (builtin "Evaluate Query" (formula "38") (term "1,1,1") (newnames "b_1,callee,queryResult,res_toInt_0"))
                                                (rule "replaceKnownQuery0100000012120012_19" (formula "39") (term "1,1,1"))
                                                (rule "eqTermCut" (formula "39") (term "0,1,1") (inst "s=log_buckets<<origin(\"requires @ file Classifier.java @ line 65\",\"[]\")>>") (userinteraction))
                                                (branch "Assume c_2.tree.log_buckets@heapAfter_Tree[c_2.tree := self_0] [c_2.sorted_splitters := sorted_splitters] [c_2.num_buckets := javaShiftLeftInt(javaShiftLeftInt(1, log_buckets), if ( equal_buckets = TRUE) then (1) else (0))] [c_2.equal_buckets := equal_buckets] [c_2.<initialized> := TRUE] = log_buckets"
                                                   (rule "applyEq" (formula "40") (term "0,1,1") (ifseqformula "1") (userinteraction))
                                                   (rule "eqSymm" (formula "3") (term "0,0,1,0"))
                                                   (rule "variableDeclaration" (formula "3") (term "1,0") (newnames "queryResult"))
                                                   (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1,0") (inst "#v0=x"))
                                                   (rule "variableDeclaration" (formula "3") (term "1,0") (newnames "x_8"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                                   (rule "variableDeclaration" (formula "32") (term "1") (newnames "b_2"))
                                                   (rule "assignment" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_toInt_0,savedHeapBefore_toInt_0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "returnUnfold" (formula "32") (term "1") (inst "#v0=x_9"))
                                                   (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                                   (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_9"))
                                                   (rule "condition_simple" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodCallReturn" (formula "32") (term "1"))
                                                   (rule "assignment" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodCallEmpty" (formula "32") (term "1"))
                                                   (rule "blockEmpty" (formula "32") (term "1"))
                                                   (rule "assignment" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodCallEmpty" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "emptyModality" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notRight" (formula "32"))
                                                   (rule "eqSymm" (formula "3") (term "0,0,1,0"))
                                                   (rule "variableDeclaration" (formula "3") (term "1,0") (newnames "queryResult_1"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "methodCallWithAssignmentWithinClass" (formula "32") (term "1") (inst "#v0=x"))
                                                   (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_10"))
                                                   (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                                   (rule "variableDeclaration" (formula "32") (term "1") (newnames "b_3"))
                                                   (rule "assignment" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_toInt_1,savedHeapBefore_toInt_1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "returnUnfold" (formula "32") (term "1") (inst "#v0=x_11"))
                                                   (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                                   (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_11"))
                                                   (rule "condition_simple" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodCallReturn" (formula "32") (term "1"))
                                                   (rule "assignment" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodCallEmpty" (formula "32") (term "1"))
                                                   (rule "blockEmpty" (formula "32") (term "1"))
                                                   (rule "assignment" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "methodCallEmpty" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "emptyModality" (formula "32") (term "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notRight" (formula "32"))
                                                   (rule "applyEq" (formula "40") (term "1,1,1") (ifseqformula "1") (userinteraction))
                                                   (rule "shiftLeftSplitTwo" (formula "40") (term "1") (userinteraction))
                                                   (rule "impLeft" (formula "1") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "polySimp_addComm0" (formula "41") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "41") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "4") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "41") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                                      (rule "replaceKnownSelect_taclet2120012_14" (formula "3") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2120012_15" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                                      (rule "add_literals" (formula "32") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                      (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                      (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                                      (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                      (rule "mod_axiom" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                      (rule "div_literals" (formula "20") (term "0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                      (rule "mul_literals" (formula "20") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (term "0") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_leqRight" (formula "31"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "pullOut" (formula "41") (term "3,0,0,0,0") (inst "sk=javaShiftLeftInt_0") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "1") (term "1,0"))
                                                      (branch "equal_buckets = TRUE TRUE"
                                                         (rule "shiftLeftChain" (formula "2") (term "0") (userinteraction))
                                                         (rule "impLeft" (formula "2") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "leq_literals" (formula "36") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "replace_known_left" (formula "6") (term "0,1,3,0,0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
                                                            (rule "replace_known_left" (formula "7") (term "0,1,3,0,0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "1,0,0"))
                                                            (rule "eqSymm" (formula "3"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "1,1"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "44") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "7") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "44") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "1,0"))
                                                            (rule "replaceKnownSelect_taclet2120012_16" (formula "6") (term "1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "6") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,1,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "6") (term "0"))
                                                            (rule "replaceKnownSelect_taclet20012_0" (formula "6") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_commuteLeq" (formula "35") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                            (rule "mod_axiom" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,0"))
                                                            (rule "div_literals" (formula "23") (term "0,1,1,0,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,1,0,0,1,0,0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,1,0,0,1,0"))
                                                            (rule "leq_literals" (formula "23") (term "0,1,0,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "applyEq" (formula "6") (term "3,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "3,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "43") (term "1") (ifseqformula "3"))
                                                            (rule "mod_axiom" (formula "23") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                            (rule "div_literals" (formula "23") (term "0,1,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,1,1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0"))
                                                            (rule "pow_literals" (formula "23") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                            (rule "mod_axiom" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                                            (rule "div_literals" (formula "23") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                            (rule "add_literals" (formula "23") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                            (rule "mul_literals" (formula "23") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "35") (term "0") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "35") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_leqRight" (formula "35"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "closeFalse" (formula "14"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "eqTermCut" (formula "3") (term "1") (inst "s=javaShiftLeftInt(Z(1(#)),
                 add(log_buckets<<origin(\"requires @ file Classifier.java @ line 65\",\"[]\")>>,
                     Z(1(#))))") (userinteraction))
                                                            (branch "Assume javaShiftLeftInt_0 = javaShiftLeftInt(1, log_buckets + 1)"
                                                               (rule "eqSymm" (formula "3"))
                                                               (rule "replace_known_left" (formula "8") (term "0,1,3,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
                                                               (rule "replace_known_left" (formula "9") (term "0,1,3,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "5") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "5"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "45") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "9") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "45") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "26") (term "1,0,0,0,1,0,1,0"))
                                                               (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "1,0"))
                                                               (rule "replaceKnownSelect_taclet2120012_16" (formula "8") (term "1,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "8") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0"))
                                                               (rule "replaceKnownSelect_taclet20012_0" (formula "8") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                               (rule "mod_axiom" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                                               (rule "div_literals" (formula "25") (term "0,0,1,0,1,1,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,1,1,1,1,0,0,1,0"))
                                                               (rule "times_zero_2" (formula "25") (term "1,0,1,1,1,1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "25") (term "0,1,1,1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "1,1,1,1,0,0,1,0"))
                                                               (rule "pow_literals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                               (rule "mod_axiom" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                                                               (rule "div_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,0"))
                                                               (rule "times_zero_2" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,1,0,0,1,0"))
                                                               (rule "leq_literals" (formula "25") (term "0,1,0,0,1,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "applyEq" (formula "8") (term "3,0,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                               (rule "eqSymm" (formula "5"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "2"))
                                                               (rule "applyEq" (formula "7") (term "3,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "43") (term "1") (ifseqformula "2"))
                                                               (rule "mod_axiom" (formula "24") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                               (rule "div_literals" (formula "24") (term "0,1,1,1,0,0,1,0"))
                                                               (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                               (rule "pow_literals" (formula "24") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                                               (rule "applyEq" (formula "7") (term "3,0,0,0") (ifseqformula "2"))
                                                               (rule "mod_axiom" (formula "24") (term "0,1,0"))
                                                               (rule "div_literals" (formula "24") (term "0,0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0,1,0"))
                                                               (rule "add_zero_right" (formula "24") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                               (rule "mul_literals" (formula "24") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "newSym_eq" (formula "4") (inst "l=l_0") (inst "newSymDef=mul(javaShiftLeftInt_0, Z(0(#)))"))
                                                               (rule "times_zero_1" (formula "4") (term "1,1"))
                                                               (rule "add_zero_right" (formula "4") (term "1"))
                                                               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "23") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "17") (term "1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "20") (term "1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "24") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "21") (term "1,0,2,0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "21"))
                                                               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "5"))
                                                               (rule "applyEq" (formula "21") (term "1,0,2,0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "21"))
                                                               (rule "applyEq" (formula "43") (term "3,0,0") (ifseqformula "5"))
                                                               (rule "applyEq" (formula "8") (term "3,0,0,0") (ifseqformula "5"))
                                                               (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "5"))
                                                               (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "5"))
                                                               (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                                                               (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=de_wiesler_Classifier_num_buckets_0"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "closeTrue" (formula "44"))
                                                            )
                                                            (branch "Assume javaShiftLeftInt_0 != javaShiftLeftInt(1, log_buckets + 1)"
                                                               (rule "notLeft" (formula "3"))
                                                               (rule "eqSymm" (formula "37"))
                                                               (rule "replace_known_left" (formula "7") (term "0,1,3,0,0,0,1,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                               (rule "replace_known_left" (formula "8") (term "0,1,3,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "4"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "45") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "45") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "7") (term "1,0"))
                                                               (rule "replaceKnownSelect_taclet2120012_14" (formula "7") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet2120012_15" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                               (rule "mod_axiom" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "div_literals" (formula "24") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0"))
                                                               (rule "leq_literals" (formula "24") (term "0,1,0,0,1,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "applyEq" (formula "7") (term "3,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "7") (term "3,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                               (rule "eqSymm" (formula "2"))
                                                               (rule "close" (formula "36") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                      (branch "equal_buckets = TRUE FALSE"
                                                         (rule "replace_known_right" (formula "6") (term "0,1,3,0,0,0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_right" (formula "5") (term "0,1,3,0,0,0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")))
                                                         (rule "polySimp_elimSub" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "2"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "43") (term "0"))
                                                         (rule "translateJavaShiftLeftIntZero" (formula "1") (term "0"))
                                                         (rule "translateJavaShiftLeftIntZero" (formula "6") (term "3,0,0,0,0"))
                                                         (rule "translateJavaShiftLeftIntZero" (formula "5") (term "3,0,0,0,0"))
                                                         (rule "translateJavaShiftLeftIntZero" (formula "5") (term "3,0,0,0,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "43") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "6") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                         (rule "replaceKnownSelect_taclet2120012_16" (formula "5") (term "1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "5") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                         (rule "replaceKnownSelect_taclet20012_0" (formula "5") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                         (rule "mod_axiom" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,1,1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,1,0,0,1,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,1,0,0,1,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                                         (rule "apply_eq_boolean" (formula "5") (term "3,0,0") (ifseqformula "34"))
                                                         (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "5") (term "3,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "42") (term "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                                                         (rule "mod_axiom" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,1,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                         (rule "pow_literals" (formula "22") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                         (rule "mod_axiom" (formula "22") (term "0,1,0"))
                                                         (rule "div_literals" (formula "22") (term "0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                         (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                         (rule "mul_literals" (formula "22") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "21"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=de_wiesler_Classifier_num_buckets_0"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "polySimp_homoEq" (formula "41"))
                                                         (rule "polySimp_pullOutFactor0" (formula "41") (term "0"))
                                                         (rule "add_literals" (formula "41") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "20"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=de_wiesler_Classifier_equal_buckets_0"))
                                                         (rule "simplifySelectOfStore" (formula "5"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "castDel" (formula "5") (term "0"))
                                                         (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "closeFalse" (formula "6"))
                                                      )
                                                   )
                                                )
                                                (branch "Assume c_2.tree.log_buckets@heapAfter_Tree[c_2.tree := self_0] [c_2.sorted_splitters := sorted_splitters] [c_2.num_buckets := javaShiftLeftInt(javaShiftLeftInt(1, log_buckets), if ( equal_buckets = TRUE) then (1) else (0))] [c_2.equal_buckets := equal_buckets] [c_2.<initialized> := TRUE] != log_buckets"
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "eqSymm" (formula "31") (term "0,0,1"))
                                                   (rule "eqSymm" (formula "30") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,1,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,1"))
                                                   (rule "replaceKnownSelect_taclet2120012_16" (formula "40") (term "1,1,1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "40") (term "1,1,1,1"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "40") (term "1,1,1"))
                                                   (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                   (rule "replaceKnownSelect_taclet2120012_14" (formula "32") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2120012_15" (formula "32") (term "0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "closeTrue" (formula "32"))
                                                )
                                             )
                                             (branch "Assume c_2.equal_buckets@heapAfter_Tree[c_2.tree := self_0] [c_2.sorted_splitters := sorted_splitters] [c_2.num_buckets := javaShiftLeftInt(javaShiftLeftInt(1, log_buckets), if ( equal_buckets = TRUE) then (1) else (0))] [c_2.equal_buckets := equal_buckets] [c_2.<initialized> := TRUE] != TRUE"
                                                (rule "notLeft" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_wiesler_Classifier_equal_buckets_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "replace_known_right" (formula "37") (term "0,1,3,0,0,0,1,1,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                                                (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1,1,1,0"))
                                                (rule "translateJavaShiftLeftIntZero" (formula "37") (term "3,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "1,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2120012_16" (formula "37") (term "1,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "37") (term "1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
                                                (rule "replaceKnownSelect_taclet20012_0" (formula "37") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "37") (term "0,1,0"))
                                                (rule "apply_eq_boolean" (formula "37") (term "3,0,1,1,1,0") (ifseqformula "29"))
                                                (rule "apply_eq_boolean" (formula "37") (term "3,0,0,1,1,0") (ifseqformula "29"))
                                                (rule "pullOutSelect" (formula "37") (term "1") (inst "selectSK=de_wiesler_Classifier_num_buckets_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "37") (term "1,1,1,0") (inst "selectSK=de_wiesler_Classifier_equal_buckets_1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "38") (term "1,1,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "translateJavaShiftLeftIntZero" (formula "37") (term "1") (userinteraction))
                                                (rule "translateJavaShiftLeftIntZero" (formula "37") (term "3,0,0,0,1,1,0") (userinteraction))
                                                (rule "pullOut" (formula "37") (term "1,1,0") (inst "sk=de_wiesler_ConstantstoInt_0") (userinteraction))
                                                (rule "eqTermCut" (formula "1") (term "1") (inst "s=Z(0(#))") (userinteraction))
                                                (branch "Assume de_wiesler_ConstantstoInt_0 = 0"
                                                   (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                   (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "19") (term "0,0,1,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,1,2,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "1,2,1,0,0,1,0"))
                                                   (rule "pow_literals" (formula "19") (term "2,1,0,0,1,0"))
                                                   (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "19") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1,0,0,1,0"))
                                                   (rule "leq_literals" (formula "19") (term "0,1,0,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "39") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "add_zero_left" (formula "39") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "closeTrue" (formula "39"))
                                                )
                                                (branch "Assume de_wiesler_ConstantstoInt_0 != 0"
                                                   (rule "notLeft" (formula "1") (userinteraction))
                                                    (builtin "Evaluate Query" (formula "1") (term "0") (newnames "b_0,callee,queryResult,res_toInt"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "30") (term "0,0,1"))
                                                   (rule "variableDeclaration" (formula "30") (term "1") (newnames "queryResult"))
                                                   (rule "methodCallWithAssignmentWithinClass" (formula "30") (term "1") (inst "#v0=x"))
                                                   (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_8"))
                                                   (rule "variableDeclarationAssign" (formula "30") (term "1"))
                                                   (rule "variableDeclaration" (formula "30") (term "1") (newnames "b_1"))
                                                   (rule "assignment" (formula "30") (term "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_toInt_0,savedHeapBefore_toInt_0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "returnUnfold" (formula "30") (term "1") (inst "#v0=x_9"))
                                                   (rule "variableDeclarationAssign" (formula "30") (term "1"))
                                                   (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_9"))
                                                   (rule "condition_simple" (formula "30") (term "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "methodCallReturn" (formula "30") (term "1"))
                                                   (rule "assignment" (formula "30") (term "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "methodCallEmpty" (formula "30") (term "1"))
                                                   (rule "blockEmpty" (formula "30") (term "1"))
                                                   (rule "assignment" (formula "30") (term "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "methodCallEmpty" (formula "30") (term "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "emptyModality" (formula "30") (term "1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "notRight" (formula "30"))
                                                   (rule "replaceKnownQuery11100000012120012_24" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                   (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "div_literals" (formula "19") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1,0,0,1,0"))
                                                   (rule "leq_literals" (formula "19") (term "0,1,0,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "2"))
                                                   (rule "close" (formula "31") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet2120012_16" (formula "36") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "36") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_leqRight" (formula "36"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "mod_axiom" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                          (rule "div_literals" (formula "18") (term "0,1,1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                          (rule "leq_literals" (formula "18") (term "0,1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "mod_axiom" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "div_literals" (formula "18") (term "0,0,1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "pow_literals" (formula "18") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                          (rule "mod_axiom" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                          (rule "div_literals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "18") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet20012_4" (formula "1") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet20012_5" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=de_wiesler_Classifier_sorted_splitters_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "commute_or" (formula "11") (term "0,0"))
                                          (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(2(#))),
    javaShiftLeftInt(Z(1(#)), log_buckets))"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "11") (term "0,0,2,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0"))
                                          (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "15"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1"))
                                          (rule "add_literals" (formula "11") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "11") (term "0,1"))
                                          (rule "qeq_literals" (formula "11") (term "1"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "Partial_inv_axiom_for_JML_class_invariant_nr_62_in_Tree" (formula "26"))
                                          (rule "replaceKnownSelect_taclet10000012120012_18" (formula "26") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000012120012_19" (formula "26") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet20012_2" (formula "26") (term "0,3,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet20012_3" (formula "26") (term "0,3,0"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "26"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "Partial_inv_axiom_for_JML_class_invariant_nr_58_in_Tree" (formula "29"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "replaceKnownSelect_taclet20012_0" (formula "29") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "29") (term "1,0"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "29") (term "0"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "9")))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "Partial_inv_axiom_for_JML_class_invariant_nr_60_in_Tree" (formula "29"))
                                          (rule "replaceKnownSelect_taclet10000012120012_18" (formula "29") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000012120012_19" (formula "29") (term "0"))
                                          (rule "replaceKnownSelect_taclet20012_0" (formula "29") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "29") (term "1,1"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                          (rule "inEqSimp_commuteLeq" (formula "27"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "11"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch
                                       (rule "dismissNonSelectedField" (formula "36") (term "3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "1,3,0"))
                                       (rule "replaceKnownSelect_taclet2120012_16" (formula "36") (term "1,3,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "36") (term "1,3,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                       (rule "mod_axiom" (formula "17") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,0,1,0,1,1,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "17") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,1,1,0,0,1,0"))
                                       (rule "pow_literals" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "17") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,2,1,0,0,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,1,1,2,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,2,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "1,2,1,0,0,1,0"))
                                       (rule "pow_literals" (formula "17") (term "2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "mod_axiom" (formula "17") (term "0,1,0"))
                                       (rule "div_literals" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "pullOutSelect" (formula "35") (term "1,0") (inst "selectSK=de_wiesler_Classifier_sorted_splitters_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "35") (term "3,0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "replaceKnownSelect_taclet20012_4" (formula "1") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20012_5" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "36") (term "3,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                       (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "translateJavaAddInt" (formula "35") (term "0,2,1,1,0,1"))
                                       (rule "translateJavaSubInt" (formula "35") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "1,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "1,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "1,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "1,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "0,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "35") (term "1,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1"))
                                       (rule "nnf_imp2or" (formula "35") (term "0,1"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0,0,1"))
                                       (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "35") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "33")))
                                       (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0"))
                                       (rule "commute_or" (formula "10") (term "0,0"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "35") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,0,0"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "35") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "leq_literals" (formula "35") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "commute_and_2" (formula "35") (term "0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(2(#))),
    javaShiftLeftInt(Z(1(#)), log_buckets))"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,2,0,1"))
                                       (rule "add_literals" (formula "10") (term "0,0,2,0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,1,0"))
                                       (rule "leq_literals" (formula "10") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0"))
                                       (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "10") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1"))
                                       (rule "add_literals" (formula "10") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "10") (term "0,1"))
                                       (rule "qeq_literals" (formula "10") (term "1"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "cut_direct" (formula "35") (term "1,0"))
                                       (branch "CUT: self_0.num_buckets@anon_heap_Tree<<anonHeapFunction>> <= sorted_splitters.length TRUE"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "cut_direct" (formula "36") (term "0"))
                                          (branch "CUT: self_0.num_buckets@anon_heap_Tree<<anonHeapFunction>> >= 0 TRUE"
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "allRight" (formula "37") (inst "sk=i_0"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "38"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                             (rule "eqSymm" (formula "3") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ifthenelse_negated" (formula "3") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                                             (rule "replaceKnownSelect_taclet20012_10" (formula "3") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20012_11" (formula "3") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                             (rule "eqSymm" (formula "3") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet20012_10" (formula "3") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20012_11" (formula "3") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "16") (inst "t=i_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,1"))
                                             (rule "leq_literals" (formula "16") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_58_in_Tree" (formula "32"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "replaceKnownSelect_taclet20012_0" (formula "32") (term "1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "32") (term "1,0"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "32") (term "0"))
                                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "12")))
                                             (rule "inEqSimp_commuteLeq" (formula "32"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_60_in_Tree" (formula "32"))
                                             (rule "replaceKnownSelect_taclet1000012120012_20" (formula "32") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1000012120012_21" (formula "32") (term "0"))
                                             (rule "replaceKnownSelect_taclet20012_0" (formula "32") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "32") (term "1,1"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "32"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "32"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "32"))
                                             (rule "inEqSimp_commuteLeq" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "add_literals" (formula "14") (term "0"))
                                             (rule "leq_literals" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                          (branch "CUT: self_0.num_buckets@anon_heap_Tree<<anonHeapFunction>> >= 0 FALSE"
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "inEqSimp_geqRight" (formula "36"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_58_in_Tree" (formula "27"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "replaceKnownSelect_taclet20012_0" (formula "27") (term "1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "27") (term "1,0"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "9")))
                                             (rule "inEqSimp_commuteLeq" (formula "27"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_60_in_Tree" (formula "27"))
                                             (rule "replaceKnownSelect_taclet1000012120012_20" (formula "27") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1000012120012_21" (formula "27") (term "0"))
                                             (rule "replaceKnownSelect_taclet20012_0" (formula "27") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "27") (term "1,1"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "closeFalse" (formula "16"))
                                          )
                                       )
                                       (branch "CUT: self_0.num_buckets@anon_heap_Tree<<anonHeapFunction>> <= sorted_splitters.length FALSE"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "inEqSimp_leqRight" (formula "35"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "Partial_inv_axiom_for_JML_class_invariant_nr_58_in_Tree" (formula "26"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "replaceKnownSelect_taclet20012_0" (formula "26") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "26") (term "1,0"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "8")))
                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                          (rule "Partial_inv_axiom_for_JML_class_invariant_nr_60_in_Tree" (formula "26"))
                                          (rule "replaceKnownSelect_taclet1000012120012_20" (formula "26") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1000012120012_21" (formula "26") (term "0"))
                                          (rule "replaceKnownSelect_taclet20012_0" (formula "26") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "26") (term "1,1"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "translateJavaSubInt" (formula "36") (term "0,2,0"))
                                    (rule "translateJavaSubInt" (formula "36") (term "0,2,1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_elimSub" (formula "36") (term "0,2,1"))
                                    (rule "polySimp_elimSub" (formula "36") (term "0,2,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,2,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_elimOneLeft0" (formula "36") (term "1,0,2,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,2,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,2,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1,0,2,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1,0,2,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1,0,2,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,1,0,2,0"))
                                    (rule "replaceKnownSelect_taclet2120012_16" (formula "36") (term "1,1,0,2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "36") (term "1,1,0,2,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1,0,2,1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "1"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,2,1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,2,2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,2,1,0"))
                                    (rule "replaceKnownSelect_taclet2120012_16" (formula "1") (term "1,1,0,2,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "1") (term "1,1,0,2,1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,2,2,0"))
                                    (rule "replaceKnownSelect_taclet2120012_16" (formula "1") (term "1,1,0,2,2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2120012_17" (formula "1") (term "1,1,0,2,2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_wiesler_Classifier_sorted_splitters_0"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet20012_10" (formula "2") (term "0,0,1,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20012_11" (formula "2") (term "0,0,1,1,0,0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,2,0") (inst "selectSK=de_wiesler_Tree_num_buckets_0"))
                                    (rule "applyEq" (formula "2") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                    (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "replaceKnownSelect_taclet20012_4" (formula "1") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20012_5" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0,2,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet20012_10" (formula "1") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20012_11" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                    (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "eqTermCut" (formula "36") (term "1,0,2,0") (inst "s=javaShiftLeftInt(Z(1(#)), log_buckets)") (userinteraction))
                                    (branch "Assume self_0.num_buckets@anon_heap_Tree<<anonHeapFunction>> = javaShiftLeftInt(1, log_buckets)"
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "mod_axiom" (formula "18") (term "1,2,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                       (rule "div_literals" (formula "18") (term "0,1,1,2,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,2,1,0,0,1,0"))
                                       (rule "pow_literals" (formula "18") (term "2,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "18") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "div_literals" (formula "18") (term "0,0,1,0,1,1,1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "0,1,0,1,1,1,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,0,1,1,1,1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,1,1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0,1,0"))
                                       (rule "pow_literals" (formula "18") (term "1,1,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                       (rule "div_literals" (formula "18") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                       (rule "applyEq" (formula "37") (term "1,0,2,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "mod_axiom" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                       (rule "div_literals" (formula "18") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "applyEq" (formula "37") (term "1,0,2,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "close" (formula "37") (ifseqformula "15"))
                                    )
                                    (branch "Assume self_0.num_buckets@anon_heap_Tree<<anonHeapFunction>> != javaShiftLeftInt(1, log_buckets)"
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_60_in_Tree" (formula "26") (userinteraction))
                                       (rule "replaceKnownSelect_taclet100012120012_22" (formula "26") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet100012120012_24" (formula "26") (term "0"))
                                       (rule "replaceKnownSelect_taclet20012_0" (formula "26") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20012_1" (formula "26") (term "1,1"))
                                       (rule "close" (formula "30") (ifseqformula "26"))
                                    )
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "closeTrue" (formula "36"))
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "allRight" (formula "36") (inst "sk=f_0"))
                              (rule "allRight" (formula "36") (inst "sk=o_0"))
                              (rule "orRight" (formula "36"))
                              (rule "orRight" (formula "36"))
                              (rule "orRight" (formula "36"))
                              (rule "eqSymm" (formula "39"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,0,1,1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "mod_axiom" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "pow_literals" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0"))
                              (rule "mod_axiom" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                              (rule "div_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "39"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__2"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_9"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_10"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_11"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "nnf_imp2or" (formula "23") (term "0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                              (rule "commute_and" (formula "13") (term "0,0"))
                              (rule "commute_and" (formula "12") (term "0,0"))
                              (rule "commute_and" (formula "11") (term "0,0"))
                              (rule "commute_and" (formula "10") (term "0,0"))
                              (rule "commute_and" (formula "9") (term "0,0"))
                              (rule "commute_and" (formula "6") (term "0,0"))
                              (rule "commute_and" (formula "8") (term "0,0"))
                              (rule "commute_and" (formula "5") (term "0,0"))
                              (rule "commute_or" (formula "23") (term "0,0"))
                              (rule "commute_and" (formula "4") (term "0,0"))
                              (rule "commute_and" (formula "3") (term "0,0"))
                              (rule "commute_and" (formula "2") (term "0,0"))
                              (rule "commute_and" (formula "1") (term "0,0"))
                              (rule "ifthenelse_split" (formula "7") (term "0"))
                              (branch "o_0 = c_2 TRUE"
                                 (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "49") (term "1,0,0,1") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "42"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "notRight" (formula "49"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "8"))
                                 (rule "sortsDisjointModuloNull" (formula "49"))
                                 (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "45")))
                                 (rule "false_right" (formula "49"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "8"))
                                 (rule "sortsDisjointModuloNull" (formula "48"))
                                 (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "44")))
                                 (rule "false_right" (formula "48"))
                                 (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "close" (formula "44") (ifseqformula "8"))
                              )
                              (branch "o_0 = c_2 FALSE"
                                 (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "10") (term "1,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "38"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "commute_and" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Null Reference (self_25 = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (Tree)"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "20"))
            (rule "close" (formula "27") (ifseqformula "26"))
         )
         (branch "Pre (Tree)"
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "20")))
            (rule "wellFormedStorePrimitive" (formula "23") (term "0,0,1"))
            (rule "translateJavaSubInt" (formula "23") (term "3,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "23") (term "3,0,0,1,0"))
            (rule "mul_literals" (formula "23") (term "1,3,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "23") (term "3,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "1,1,0"))
            (rule "replace_known_left" (formula "23") (term "1,1,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "inEqSimp_homoInEq1" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm0" (formula "17") (term "0,0"))
            (rule "mod_axiom" (formula "17") (term "1,2,1,0,0,1,0"))
            (rule "div_literals" (formula "17") (term "0,0,1,1,2,1,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,2,1,0,0,1,0"))
            (rule "times_zero_2" (formula "17") (term "1,1,2,1,0,0,1,0"))
            (rule "add_zero_right" (formula "17") (term "1,2,1,0,0,1,0"))
            (rule "pow_literals" (formula "17") (term "2,1,0,0,1,0"))
            (rule "mod_axiom" (formula "17") (term "1,0,0,1,0,0,1,0"))
            (rule "div_literals" (formula "17") (term "0,0,1,1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
            (rule "leq_literals" (formula "17") (term "0,1,0,0,1,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "add_literals" (formula "17") (term "0,0,1,0"))
            (rule "mod_axiom" (formula "17") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
            (rule "div_literals" (formula "17") (term "0,1,0,1,0"))
            (rule "times_zero_2" (formula "17") (term "1,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17"))
            (rule "mul_literals" (formula "17") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
            (rule "leq_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "wellFormedStoreObject" (formula "22") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,1"))
            (rule "wellFormedStoreObject" (formula "22") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,1"))
            (rule "wellFormedCreate" (formula "22") (term "0,0,1"))
            (rule "replace_known_left" (formula "22") (term "0,0,1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "pullOutSelect" (formula "22") (term "0,1,1") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "applyEqReverse" (formula "23") (term "0,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "22") (term "1,1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
            (rule "applyEqReverse" (formula "23") (term "0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "1,1,0,0"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "22") (term "0,0"))
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "7")))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0"))
            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "translateJavaAddInt" (formula "22") (term "0,2,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "22") (term "1,1,0,0,1"))
            (rule "add_literals" (formula "22") (term "0,1,1,0,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "22") (term "0,1"))
            (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
            (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "22") (term "0,0"))
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
            (rule "times_zero_2" (formula "22") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0"))
            (rule "mul_literals" (formula "22") (term "1,1,0"))
            (rule "inEqSimp_subsumption1" (formula "22") (term "1,0") (ifseqformula "15"))
            (rule "leq_literals" (formula "22") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "commute_or" (formula "10") (term "0,0"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "22") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0"))
            (rule "times_zero_2" (formula "22") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0"))
            (rule "mul_literals" (formula "22") (term "1,0,1,0"))
            (rule "inEqSimp_subsumption1" (formula "22") (term "1,1,0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "22") (term "1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,1,1,0"))
            (rule "qeq_literals" (formula "22") (term "0,1,1,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_subsumption1" (formula "22") (term "1,0") (ifseqformula "15"))
            (rule "leq_literals" (formula "22") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "22") (term "0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "leq_literals" (formula "22") (term "0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0"))
            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "allRight" (formula "22") (inst "sk=i_0"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfCreate" (formula "3"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfCreate" (formula "3"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "arrayLengthNotNegative" (formula "13") (term "0"))
            (rule "arrayLengthIsAShort" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthIsAShort" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "arrayLengthNotNegative" (formula "16") (term "0"))
            (rule "allLeft" (formula "14") (inst "t=i_0"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
            (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "14") (term "0,0,1"))
            (rule "leq_literals" (formula "14") (term "0,1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
            (rule "qeq_literals" (formula "14") (term "0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
            (rule "andLeft" (formula "14"))
            (rule "inEqSimp_homoInEq1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0"))
            (rule "add_zero_right" (formula "14") (term "0"))
            (rule "leq_literals" (formula "14"))
            (rule "closeFalse" (formula "14"))
         )
      )
      (branch "Assertion ( ( var[num_splitters]==var[num_splitters-1])) Terminates And OK"
          (builtin "One Step Simplification" (formula "23"))
         (rule "remove_parentheses_right" (formula "23") (term "1"))
         (rule "compound_equality_comparison_2" (formula "23") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_1"))
         (rule "assignment_array2" (formula "23"))
         (branch "Normal Execution (var != null)"
             (builtin "One Step Simplification" (formula "23"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
            (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_2"))
            (rule "eval_order_array_access5" (formula "23") (term "1") (inst "#v1=x_3") (inst "#ar1=x_arr"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr"))
            (rule "assignment" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_3"))
            (rule "assignmentSubtractionInt" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
            (rule "mul_literals" (formula "23") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
            (rule "add_literals" (formula "23") (term "0,0,1,0"))
            (rule "assignment_array2" (formula "23"))
            (branch "Normal Execution (x_arr != null)"
                (builtin "One Step Simplification" (formula "23"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,1,0"))
               (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "14"))
               (rule "equality_comparison_simple" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "methodCallEmpty" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "emptyModality" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "closeTrue" (formula "23"))
            )
            (branch "Null Reference (x_arr = null)"
               (rule "false_right" (formula "24"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr != null, but x_3 Out of Bounds!)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "shiftLeftLowerBoundGe" (formula "11") (term "0") (ifseqformula "7") (userinteraction))
                (builtin "One Step Simplification" (formula "25"))
               (rule "false_right" (formula "25"))
               (rule "leq_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "translateJavaShiftLeftIntConstant" (formula "11") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
               (rule "inEqSimp_homoInEq1" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0"))
               (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
               (rule "div_literals" (formula "19") (term "0,1,0,1,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,1,0"))
               (rule "pow_literals" (formula "19") (term "1,1,1,0,0,1,0"))
               (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
               (rule "div_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,0"))
               (rule "times_zero_2" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
               (rule "add_zero_right" (formula "19") (term "1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "19") (term "0,0,1,0,0,1,0"))
               (rule "leq_literals" (formula "19") (term "0,1,0,0,1,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "mod_axiom" (formula "19") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
               (rule "div_literals" (formula "19") (term "0,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "19") (term "1,1,0,0,1,0"))
               (rule "pow_literals" (formula "19") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "19") (term "0,0,1,0"))
               (rule "mod_axiom" (formula "19") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
               (rule "div_literals" (formula "19") (term "0,1,0,1,0"))
               (rule "mul_literals" (formula "19") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "19") (term "0,1,0"))
               (rule "mul_literals" (formula "19") (term "1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "add_literals" (formula "19") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption0" (formula "11") (term "0") (ifseqformula "8"))
               (rule "leq_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "javaShiftLeftIntConstantDef" (formula "11") (term "0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
               (rule "div_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "1,0,0"))
               (rule "shiftleft_literals" (formula "11") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "14") (term "0"))
               (rule "expand_moduloInteger" (formula "12") (term "1"))
               (rule "replace_int_HALFRANGE" (formula "12") (term "0,0,1,1"))
               (rule "replace_int_MIN" (formula "12") (term "0,1"))
               (rule "replace_int_RANGE" (formula "12") (term "1,1,1"))
               (rule "add_literals" (formula "12") (term "0,1,1"))
               (rule "inEqSimp_homoInEq1" (formula "12"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "mod_axiom" (formula "12") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
               (rule "div_literals" (formula "12") (term "0,1,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,0"))
               (rule "add_literals" (formula "12") (term "1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "expand_moduloInteger" (formula "11") (term "0") (userinteraction))
               (rule "replace_int_MIN" (formula "11") (term "0,0"))
               (rule "replace_int_HALFRANGE" (formula "11") (term "0,0,1,0"))
               (rule "replace_int_RANGE" (formula "11") (term "1,1,0"))
               (rule "add_literals" (formula "11") (term "0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "mod_axiom" (formula "11") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
               (rule "div_literals" (formula "11") (term "0,1,0,1,0"))
               (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,1,0"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "add_literals" (formula "11") (term "0"))
               (rule "qeq_literals" (formula "11"))
               (rule "closeFalse" (formula "11"))
            )
         )
         (branch "Null Reference (var = null)"
            (rule "false_right" (formula "24"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (var != null, but num_splitters Out of Bounds!)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
            (rule "shiftLeftLowerBoundGe" (formula "11") (term "0") (ifseqformula "7") (userinteraction))
             (builtin "One Step Simplification" (formula "25"))
            (rule "false_right" (formula "25"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaShiftLeftIntConstant" (formula "11") (term "1,1"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "add_zero_left" (formula "1") (term "0,1"))
            (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
            (rule "inEqSimp_homoInEq1" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm0" (formula "19") (term "0,0"))
            (rule "mod_axiom" (formula "19") (term "1,2,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,2,1,0,0,1,0"))
            (rule "div_literals" (formula "19") (term "0,1,1,2,1,0,0,1,0"))
            (rule "times_zero_2" (formula "19") (term "1,1,2,1,0,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "1,2,1,0,0,1,0"))
            (rule "pow_literals" (formula "19") (term "2,1,0,0,1,0"))
            (rule "mod_axiom" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
            (rule "div_literals" (formula "19") (term "0,0,1,0,1,1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,1,1,1,1,0,0,1,0"))
            (rule "times_zero_2" (formula "19") (term "1,0,1,1,1,1,0,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,1,1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,1,0"))
            (rule "pow_literals" (formula "19") (term "1,1,1,0,0,1,0"))
            (rule "mod_axiom" (formula "19") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
            (rule "div_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,0"))
            (rule "times_zero_2" (formula "19") (term "1,1,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,1,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,0,1,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "add_literals" (formula "19") (term "0,0,1,0"))
            (rule "mod_axiom" (formula "19") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
            (rule "div_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,1,0"))
            (rule "mul_literals" (formula "19") (term "1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "add_literals" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption0" (formula "11") (term "0") (ifseqformula "8"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "javaShiftLeftIntConstantDef" (formula "11") (term "0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "div_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "times_zero_2" (formula "11") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "11") (term "1,0,0"))
            (rule "shiftleft_literals" (formula "11") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
            (rule "inEqSimp_commuteGeq" (formula "11"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
            (rule "qeq_literals" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "12"))
            (rule "add_zero_right" (formula "13") (term "1,0,0,0"))
            (rule "applyEq" (formula "16") (term "1,0,2,0") (ifseqformula "12"))
            (rule "add_zero_right" (formula "16") (term "0,2,0"))
            (rule "eqSymm" (formula "16"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "9") (term "1") (ifseqformula "11"))
            (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
            (rule "applyEq" (formula "13") (term "1,0,2,0") (ifseqformula "10"))
            (rule "add_zero_right" (formula "13") (term "0,2,0"))
            (rule "eqSymm" (formula "13"))
            (rule "inEqSimp_and_contradInEq0" (formula "11") (term "0,0"))
            (rule "qeq_literals" (formula "11") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "expand_moduloInteger" (formula "9") (term "0"))
            (rule "replace_int_MIN" (formula "9") (term "0,0"))
            (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,0"))
            (rule "replace_int_RANGE" (formula "9") (term "1,1,0"))
            (rule "add_literals" (formula "9") (term "0,1,0"))
            (rule "mod_axiom" (formula "9") (term "1,0"))
            (rule "div_literals" (formula "9") (term "0,0,1,1,0"))
            (rule "times_zero_2" (formula "9") (term "0,1,1,0"))
            (rule "times_zero_2" (formula "9") (term "1,1,0"))
            (rule "add_zero_right" (formula "9") (term "1,0"))
            (rule "add_literals" (formula "9") (term "0"))
            (rule "leq_literals" (formula "9"))
            (rule "closeFalse" (formula "9"))
         )
      )
      (branch "Assertion ( ( var[num_splitters]==var[num_splitters-1])) No Effects"
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "eqSymm" (formula "1"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_1"))
         (rule "applyEq" (formula "24") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "remove_parentheses_right" (formula "24") (term "1"))
         (rule "compound_equality_comparison_2" (formula "24") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_2"))
         (rule "assignment_array2" (formula "24"))
         (branch "Normal Execution (var != null)"
             (builtin "One Step Simplification" (formula "24"))
            (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1,0") (ifseqformula "1"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
            (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
            (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_3"))
            (rule "eval_order_array_access5" (formula "24") (term "1") (inst "#v1=x_4") (inst "#ar1=x_arr"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr"))
            (rule "assignment" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_4"))
            (rule "assignmentSubtractionInt" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "translateJavaSubInt" (formula "24") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "24") (term "0,1,0"))
            (rule "mul_literals" (formula "24") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,1,0"))
            (rule "assignment_array2" (formula "24"))
            (branch "Normal Execution (x_arr != null)"
                (builtin "One Step Simplification" (formula "24"))
               (rule "dismissNonSelectedFieldEQ" (formula "24") (term "0,1,0") (ifseqformula "1"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
               (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "15"))
               (rule "equality_comparison_simple" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "methodCallEmpty" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "emptyModality" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "closeTrue" (formula "24"))
            )
            (branch "Null Reference (x_arr = null)"
               (rule "false_right" (formula "25"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr != null, but x_4 Out of Bounds!)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "shiftLeftLowerBoundGe" (formula "12") (term "0") (ifseqformula "8") (userinteraction))
                (builtin "One Step Simplification" (formula "26"))
               (rule "false_right" (formula "26"))
               (rule "leq_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "translateJavaShiftLeftIntConstant" (formula "12") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
               (rule "inEqSimp_homoInEq1" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "polySimp_addComm0" (formula "20") (term "0,0"))
               (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
               (rule "div_literals" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
               (rule "times_zero_2" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
               (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
               (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0"))
               (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0"))
               (rule "mod_axiom" (formula "20") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
               (rule "div_literals" (formula "20") (term "0,1,0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "20") (term "0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption0" (formula "12") (term "0") (ifseqformula "9"))
               (rule "leq_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "javaShiftLeftIntDef" (formula "12") (term "0"))
               (rule "mod_axiom" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "div_literals" (formula "12") (term "0,1,1,0,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "1,0,0"))
               (rule "shiftleft_literals" (formula "12") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "expand_moduloInteger" (formula "13") (term "1"))
               (rule "replace_int_RANGE" (formula "13") (term "1,1,1"))
               (rule "replace_int_HALFRANGE" (formula "13") (term "0,0,1,1"))
               (rule "replace_int_MIN" (formula "13") (term "0,1"))
               (rule "add_literals" (formula "13") (term "0,1,1"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "mod_axiom" (formula "13") (term "1,0"))
               (rule "div_literals" (formula "13") (term "0,0,1,1,0"))
               (rule "times_zero_2" (formula "13") (term "0,1,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,0"))
               (rule "add_zero_right" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
               (rule "qeq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
               (rule "leq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "1"))
               (rule "leq_literals" (formula "19") (term "0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (var = null)"
            (rule "false_right" (formula "25"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (var != null, but num_splitters Out of Bounds!)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "shiftLeftLowerBoundGe" (formula "12") (term "0") (ifseqformula "8") (userinteraction))
             (builtin "One Step Simplification" (formula "26"))
            (rule "false_right" (formula "26"))
            (rule "leq_literals" (formula "12") (term "0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "translateJavaShiftLeftIntConstant" (formula "12") (term "1,1"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "add_zero_left" (formula "1") (term "0,1"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
            (rule "inEqSimp_homoInEq1" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0"))
            (rule "mod_axiom" (formula "20") (term "1,0,0,1,0,0,1,0"))
            (rule "div_literals" (formula "20") (term "0,0,1,1,0,0,1,0,0,1,0"))
            (rule "times_zero_2" (formula "20") (term "0,1,1,0,0,1,0,0,1,0"))
            (rule "times_zero_2" (formula "20") (term "1,1,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
            (rule "leq_literals" (formula "20") (term "0,1,0,0,1,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "mod_axiom" (formula "20") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
            (rule "div_literals" (formula "20") (term "0,1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,1,1,0,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,0"))
            (rule "pow_literals" (formula "20") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0"))
            (rule "mod_axiom" (formula "20") (term "0,1,0"))
            (rule "div_literals" (formula "20") (term "0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "add_literals" (formula "20") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20"))
            (rule "mul_literals" (formula "20") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "11"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption0" (formula "12") (term "0") (ifseqformula "9"))
            (rule "leq_literals" (formula "12") (term "0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "javaShiftLeftIntConstantDef" (formula "12") (term "0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "div_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "1,0,0"))
            (rule "shiftleft_literals" (formula "12") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
            (rule "applyEq" (formula "17") (term "1") (ifseqformula "13"))
            (rule "applyEq" (formula "17") (term "1,0,2,0") (ifseqformula "13"))
            (rule "add_zero_right" (formula "17") (term "0,2,0"))
            (rule "eqSymm" (formula "17"))
            (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "13"))
            (rule "add_zero_right" (formula "15") (term "1,0,0,0"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
            (rule "qeq_literals" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
            (rule "inEqSimp_commuteGeq" (formula "11"))
            (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
            (rule "applyEq" (formula "14") (term "1,0,2,0") (ifseqformula "11"))
            (rule "add_literals" (formula "14") (term "0,2,0"))
            (rule "eqSymm" (formula "14"))
            (rule "inEqSimp_and_contradInEq0" (formula "12") (term "0,0"))
            (rule "qeq_literals" (formula "12") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "expand_moduloInteger" (formula "10") (term "0"))
            (rule "replace_int_RANGE" (formula "10") (term "1,1,0"))
            (rule "replace_int_HALFRANGE" (formula "10") (term "0,0,1,0"))
            (rule "replace_int_MIN" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "0,1,0"))
            (rule "mod_axiom" (formula "10") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
            (rule "div_literals" (formula "10") (term "0,1,1,0"))
            (rule "times_zero_2" (formula "10") (term "1,1,0"))
            (rule "add_literals" (formula "10") (term "1,0"))
            (rule "add_literals" (formula "10") (term "0"))
            (rule "leq_literals" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
      )
   )
)
)
}
