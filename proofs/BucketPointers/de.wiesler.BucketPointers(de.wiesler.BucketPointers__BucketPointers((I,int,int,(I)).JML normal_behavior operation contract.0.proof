\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jan 03 17:16:21 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src/de";

\proofObligation "#Proof Obligation Settings
#Mon Jan 03 17:16:21 CET 2022
contract=de.wiesler.BucketPointers[de.wiesler.BucketPointers\\:\\:BucketPointers([I,int,int,[I)].JML normal_behavior operation contract.0
name=de.wiesler.BucketPointers[de.wiesler.BucketPointers\\:\\:BucketPointers([I,int,int,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "666bcb0c95"))

(autoModeTime "40557")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "translateJavaSubInt" (formula "1") (term "2,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaMulInt" (formula "1") (term "0,2,2,0,0,0,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "8") (term "2,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "8") (term "1,2,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "0,2,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "2,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "self_25"))
(rule "elementOfArrayRange" (formula "8") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=b"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "b"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "8"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=b_1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "b_1"))
(rule "allocateInstance" (formula "8"))
 (builtin "One Step Simplification" (formula "9"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "11") (term "1"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "11"))
(rule "assignment_write_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallWithinClass" (formula "11") (term "1"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallSuper" (formula "11") (term "1"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallEmpty" (formula "11") (term "1"))
(rule "blockEmpty" (formula "11") (term "1"))
(rule "assignment_write_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "assignment_write_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "assignment_write_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "assignment_write_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallEmpty" (formula "11") (term "1"))
(rule "blockEmpty" (formula "11") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "11") (term "1"))
(rule "methodCallReturn" (formula "11") (term "1"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallEmpty" (formula "11") (term "1"))
(rule "blockEmpty" (formula "11") (term "1"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "blockEmpty" (formula "11") (term "1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "var"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "var_1"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "var_2"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "var_3"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>,varBefore_<init>,var_1Before_<init>,var_2Before_<init>,var_3Before_<init>"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallSuper" (formula "11") (term "1"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "11"))
(rule "methodCallEmpty" (formula "11") (term "1"))
(rule "blockEmpty" (formula "11") (term "1"))
(rule "assignment_write_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationGhostAssign" (formula "11") (term "1"))
(rule "variableDeclarationGhost" (formula "11") (term "1") (newnames "self_26"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "assignment_write_attribute" (formula "11"))
(branch "Normal Execution (self_26 != null)"
    (builtin "One Step Simplification" (formula "11"))
   (rule "assignment_write_attribute" (formula "11"))
   (branch "Normal Execution (self_26 != null)"
       (builtin "One Step Simplification" (formula "11"))
      (rule "assignment_write_attribute" (formula "11"))
      (branch "Normal Execution (self_26 != null)"
          (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallUnfoldArguments" (formula "11") (term "1"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_5"))
         (rule "assignment" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_6"))
         (rule "assignmentAdditionInt" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "translateJavaAddInt" (formula "11") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
          (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_ascending_geq_first,exc_25") (contract "de.wiesler.Lemma[de.wiesler.Lemma::ascending_geq_first([I,int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (ascending_geq_first)"
             (builtin "One Step Simplification" (formula "7"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "1,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "1,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "1,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "1,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "8") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
            (rule "blockEmpty" (formula "13") (term "1"))
            (rule "pullOutSelect" (formula "8") (term "1,1,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfCreate" (formula "8"))
             (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
            (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "8"))
            (rule "hideAuxiliaryEq" (formula "8"))
            (rule "commute_and" (formula "8") (term "0,0"))
            (rule "for_to_while" (formula "13") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "bucket"))
            (rule "assignment" (formula "13") (term "1"))
             (builtin "One Step Simplification" (formula "13"))
             (builtin "Loop Invariant" (formula "13") (newnames "variant,b_0,heapBefore_LOOP,bucketBefore_LOOP,bucket_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
            (branch "Invariant Initially Valid"
               (rule "andRight" (formula "13"))
               (branch "Case 1"
                  (rule "andRight" (formula "13"))
                  (branch "Case 1"
                     (rule "andRight" (formula "13"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "leq_literals" (formula "13"))
                        (rule "closeTrue" (formula "13"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "dismissNonSelectedField" (formula "13") (term "1"))
                        (rule "dismissNonSelectedField" (formula "13") (term "1"))
                        (rule "inEqSimp_leqRight" (formula "13"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "nnf_imp2or" (formula "9") (term "0"))
                        (rule "nnf_notAnd" (formula "9") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                        (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "translateJavaMulInt" (formula "7") (term "1,0,1,0,0"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "notLeft" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                        (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "translateJavaMod" (formula "10") (term "0"))
                        (rule "jmod_axiom" (formula "10") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "newSym_eq" (formula "10") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                        (rule "times_zero_1" (formula "10") (term "1,1"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                        (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "translateJavaAddInt" (formula "7") (term "3,0,1"))
                        (rule "translateJavaAddInt" (formula "7") (term "3,0,0,0,0"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "polySimp_addComm0" (formula "10") (term "3,0"))
                        (rule "polySimp_addComm0" (formula "7") (term "3,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "9"))
                        (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "closeFalse" (formula "8"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "allRight" (formula "13") (inst "sk=i_0"))
                     (rule "impRight" (formula "13"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "wellFormedStorePrimitive" (formula "13"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                  (rule "wellFormedStoreObject" (formula "13"))
                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
                  (rule "wellFormedStorePrimitive" (formula "13") (term "0"))
                  (rule "dismissNonSelectedField" (formula "13") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "13") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "13") (term "0,1"))
                  (rule "wellFormedStoreObject" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
                  (rule "wellFormedStorePrimitive" (formula "13") (term "0,0"))
                  (rule "wellFormedCreate" (formula "13") (term "0,0"))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "dismissNonSelectedField" (formula "13") (term "0,0"))
                  (rule "pullOutSelect" (formula "13") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                  (rule "applyEqReverse" (formula "14") (term "0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "14") (ifseqformula "5"))
               )
            )
            (branch "Body Preserves Invariant"
                (builtin "One Step Simplification" (formula "10"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "translateJavaMulInt" (formula "10") (term "0,2,1,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "10") (term "2,1,0,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,0,1,1,0,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,0,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,2,0,0,0,0,1,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "10") (term "2,1,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "10") (term "0,2,1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,0,1,0,1,1,0,1"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0,0"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,2,0,0,0,0,1,0,1,1,0,1,1"))
               (rule "andLeft" (formula "10"))
               (rule "impRight" (formula "16"))
               (rule "andLeft" (formula "11"))
               (rule "eqSymm" (formula "18") (term "1,0,0,1,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,2,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "18") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "18") (term "1,2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "1") (term "2,1,0,1,1,0"))
               (rule "mul_literals" (formula "1") (term "1,2,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "18") (term "0,1,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "18") (term "2,1,0,1,0,1,1,0"))
               (rule "mul_literals" (formula "18") (term "1,2,1,0,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "18") (term "0,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "2,1,0,1"))
               (rule "mul_literals" (formula "12") (term "1,2,1,0,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,0,1"))
               (rule "polySimp_addComm0" (formula "18") (term "0,1,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "18") (term "0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "18") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "2,1,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "18") (term "2,1,0,1,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "12") (term "2,1,0,1"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "11"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "pullOutSelect" (formula "1") (term "0,1,0,1,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_0"))
               (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "19") (term "0,1,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "19") (term "0,1,0,1,0,1,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclarationAssign" (formula "18") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_1"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "exc_26"))
               (rule "assignment" (formula "18") (term "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "thrownExc"))
               (rule "blockThrow" (formula "18") (term "1,0,0,1"))
               (rule "elementOfArrayRange" (formula "18") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
               (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_0"))
               (rule "simplifySelectOfAnon" (formula "12"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
               (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,0"))
               (rule "elementOfArrayRange" (formula "12") (term "0,0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "ifthenelse_negated" (formula "12") (term "0"))
               (rule "pullOutSelect" (formula "12") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "12"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")))
               (rule "castDel" (formula "12") (term "0"))
               (rule "applyEqReverse" (formula "13") (term "0,0,0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfStore" (formula "13"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "castDel" (formula "13") (term "0"))
               (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "12"))
               (rule "hideAuxiliaryEq" (formula "12"))
               (rule "boxToDiamond" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "commute_and" (formula "12") (term "0,0"))
               (rule "less_than_comparison_simple" (formula "13") (term "1"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "emptyModality" (formula "13") (term "1"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "notRight" (formula "13"))
               (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "x"))
               (rule "less_than_comparison_simple" (formula "18") (term "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "ifSplit" (formula "18"))
               (branch "if x true"
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "start"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "18") (term "1"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "var_7"))
                  (rule "assignment_array2" (formula "18"))
                  (branch "Normal Execution (var != null)"
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "pullOutSelect" (formula "18") (term "0,1,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_align_to_next_block,result_21,exc_27") (contract "de.wiesler.Buffers[de.wiesler.Buffers::align_to_next_block(int)].JML normal_behavior operation contract.0"))
                     (branch "Post (align_to_next_block)"
                         (builtin "One Step Simplification" (formula "20"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaSubInt" (formula "15") (term "0,1,0,1"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "polySimp_elimSub" (formula "18") (term "0"))
                        (rule "polySimp_addComm0" (formula "18") (term "0"))
                        (rule "assignment" (formula "23") (term "1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "blockEmpty" (formula "23") (term "1"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "stop"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "23") (term "1"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "var_8"))
                        (rule "eval_order_array_access5" (formula "23") (term "1") (inst "#v1=x") (inst "#ar1=x_arr"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr"))
                        (rule "assignment" (formula "23") (term "1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_1"))
                        (rule "assignmentAdditionInt" (formula "23") (term "1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                        (rule "assignment_array2" (formula "23"))
                        (branch "Normal Execution (x_arr != null)"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet0010000_12" (formula "1") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "1") (term "0,0,1,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                            (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_align_to_next_block_0,result_22,exc_28") (contract "de.wiesler.Buffers[de.wiesler.Buffers::align_to_next_block(int)].JML normal_behavior operation contract.0"))
                           (branch "Post (align_to_next_block)"
                               (builtin "One Step Simplification" (formula "25"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaSubInt" (formula "20") (term "0,1,0,1"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "polySimp_elimSub" (formula "23") (term "0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0"))
                              (rule "assignment" (formula "28") (term "1"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "blockEmpty" (formula "28") (term "1"))
                               (builtin "Use Operation Contract" (formula "28") (newnames "heapBefore_init,exc_29,heapAfter_init,anon_heap_init") (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::init(int,int,int,int)].JML normal_behavior operation contract.0"))
                              (branch "Post (init)"
                                  (builtin "One Step Simplification" (formula "30"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "translateJavaMulInt" (formula "25") (term "0,2,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "25") (term "1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "25") (term "2,1,0,0"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "2,1,0"))
                                 (rule "blockEmpty" (formula "32") (term "1"))
                                 (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                 (rule "simplifySelectOfAnon" (formula "25"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")))
                                 (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet10000_2" (formula "25") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "25") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000_5" (formula "25") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "25") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "elementOfArrayRange" (formula "25") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "25"))
                                 (rule "hideAuxiliaryEq" (formula "25"))
                                 (rule "preincrement" (formula "32") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "32") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                 (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_2"))
                                 (rule "remove_parentheses_right" (formula "32") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "32") (term "1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "translateJavaAddInt" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "32") (term "1"))
                                 (rule "assignment" (formula "32") (term "1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "tryEmpty" (formula "32") (term "1"))
                                 (rule "methodCallEmpty" (formula "32") (term "1"))
                                 (rule "emptyModality" (formula "32") (term "1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "andRight" (formula "32"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "32"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "32"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "32"))
                                          (branch "Case 1"
                                             (rule "inEqSimp_geqRight" (formula "32"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                          (branch "Case 2"
                                             (rule "inEqSimp_geqRight" (formula "32"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                             (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "2") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                             (rule "replaceKnownSelect_taclet10000_4" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "1") (term "0,0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_literals" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "32") (inst "sk=i_0") (userinteraction))
                                          (rule "instAll" (formula "32") (term "0,0,0") (ifseqformula "15") (userinteraction))
                                          (rule "impRight" (formula "33"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_ltToLeq" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (term "1,0,0,0") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "4") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "29") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "31")))
                                          (rule "wellFormedAnonEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                          (rule "wellFormedAnon" (formula "29") (term "0,1,0,0"))
                                          (rule "wellFormedStorePrimitive" (formula "29") (term "0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "29") (term "1,0,1,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "26")))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet10000_5" (formula "29") (term "0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "29") (term "0,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0,0,0,0"))
                                          (rule "wellFormedStoreObject" (formula "29") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                                          (rule "wellFormedStorePrimitive" (formula "29") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet0010000_12" (formula "29") (term "0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "29") (term "0,1,1,0"))
                                          (rule "replace_known_left" (formula "29") (term "1,1,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "wellFormedStoreObject" (formula "29") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                                          (rule "wellFormedStorePrimitive" (formula "29") (term "0,1,0"))
                                          (rule "wellFormedCreate" (formula "29") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,1,0"))
                                          (rule "pullOutSelect" (formula "29") (term "0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
                                          (rule "replaceKnownSelect_taclet10000_4" (formula "29") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "29") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000_5" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "29") (term "0,0,0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0,0,0") (ifseqformula "29"))
                                          (rule "hideAuxiliaryEq" (formula "29"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=java_lang_Object_created__2"))
                                          (rule "simplifySelectOfCreate" (formula "29"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
                                          (rule "castDel" (formula "29") (term "1,0"))
                                          (rule "sortsDisjointModuloNull" (formula "29") (term "0,0"))
                                          (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
                                          (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "29"))
                                          (rule "hideAuxiliaryEq" (formula "29"))
                                          (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "translateJavaMulInt" (formula "12") (term "1,0,1,0,0"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "20"))
                                          (rule "inEqSimp_commuteGeq" (formula "24"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "translateJavaMod" (formula "25") (term "0"))
                                          (rule "jmod_axiom" (formula "25") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "newSym_eq" (formula "25") (inst "l=l_0") (inst "newSymDef=mul(result_22, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "25") (term "1,1"))
                                          (rule "add_zero_right" (formula "25") (term "1"))
                                          (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "25"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "26"))
                                          (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "translateJavaMod" (formula "21") (term "0"))
                                          (rule "jmod_axiom" (formula "21") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "newSym_eq" (formula "21") (inst "l=l_1") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "21") (term "1,1"))
                                          (rule "add_zero_right" (formula "21") (term "1"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "22"))
                                          (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "38") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                          (rule "wellFormedAnonEQ" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                          (rule "wellFormedAnon" (formula "1") (term "0,1,0,0"))
                                          (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_19" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_20" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,1,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet10000_5" (formula "1") (term "0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "1") (term "0,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                          (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                          (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet0010000_12" (formula "1") (term "0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "1") (term "0,1,1,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                          (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                          (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "1") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "1") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "4") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "36")))
                                          (rule "wellFormedAnon" (formula "4") (term "1,0,0"))
                                          (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000_4" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "4") (term "1,1,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet10000_5" (formula "4") (term "0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "4") (term "0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                          (rule "wellFormedStoreObject" (formula "4") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                          (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet0010000_12" (formula "4") (term "0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "4") (term "0,1,1,0"))
                                          (rule "replace_known_left" (formula "4") (term "1,1,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "wellFormedStoreObject" (formula "4") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                          (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0"))
                                          (rule "wellFormedCreate" (formula "4") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "dismissNonSelectedField" (formula "4") (term "0,1,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "4") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "4") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "34") (term "0") (ifseqformula "7"))
                                          (rule "translateJavaMulInt" (formula "34") (term "0,2,1,0"))
                                          (rule "translateJavaAddInt" (formula "34") (term "0,2,2,0"))
                                          (rule "translateJavaMulInt" (formula "34") (term "0,0,2,2,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,2,2,0"))
                                          (rule "pullOutSelect" (formula "34") (term "1,2,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_2"))
                                          (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "34"))
                                          (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "37")))
                                          (rule "replaceKnownSelect_taclet00000010000_17" (formula "34") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000010000_18" (formula "34") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000_5" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "34") (term "0,0,0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfArrayRange" (formula "34") (term "0,0") (inst "iv=iv"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "1,2,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_5"))
                                          (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                          (rule "elementOfArrayRangeConcrete" (formula "34") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,1,0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_6"))
                                          (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                          (rule "elementOfArrayRangeConcrete" (formula "34") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,1,0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "translateJavaMod" (formula "15") (term "0"))
                                          (rule "jmod_axiom" (formula "15") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "newSym_eq" (formula "15") (inst "l=l_2") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "15") (term "1,1"))
                                          (rule "add_zero_right" (formula "15") (term "1"))
                                          (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "applyEq" (formula "4") (term "3,0,0,1") (ifseqformula "16"))
                                          (rule "applyEq" (formula "4") (term "3,0,0,1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "5") (term "3,0,0,0,1") (ifseqformula "16"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "21") (term "3,0,0,0,1,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "33") (term "3,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                          (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "translateJavaAddInt" (formula "12") (term "3,0,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "12") (term "3,0,1"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "polySimp_addComm0" (formula "15") (term "3,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "3,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "14"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "inEqSimp_commuteLeq" (formula "17"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "13"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0"))
                                          (rule "greater_literals" (formula "16") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "44") (term "0") (ifseqformula "7"))
                                          (rule "replaceKnownSelect_taclet10000000010000_25" (formula "44") (term "1,2,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_25" (formula "44") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_26" (formula "44") (term "1,2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_26" (formula "44") (term "1,1,0"))
                                          (rule "translateJavaMulInt" (formula "44") (term "0,0,2,2,0"))
                                          (rule "translateJavaMulInt" (formula "44") (term "0,2,1,0"))
                                          (rule "translateJavaAddInt" (formula "44") (term "0,2,2,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,2,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0"))
                                          (rule "pullOutSelect" (formula "44") (term "1,0") (inst "selectSK=arr_7"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_subsumption4" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                          (rule "greater_literals" (formula "1") (term "0,0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcdRightDiv=bucket_0") (inst "elimGcdLeftDiv=i_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "45") (term "2,0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_subsumption4" (formula "1") (term "1,0,0") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "1") (term "0,0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,0,1,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcdRightDiv=add(Z(0(#)), bucket_0)") (inst "elimGcdLeftDiv=i_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_left" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "1,0,0,0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_9"))
                                          (rule "simplifySelectOfAnon" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "2") (term "0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "2") (term "0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                          (rule "inEqSimp_subsumption6" (formula "2") (term "0,0,0") (ifseqformula "5"))
                                          (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "elimGcdGeq" (formula "2") (term "0,0") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                          (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000000010000_21" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption6" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "greater_literals" (formula "1") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "leq_literals" (formula "1") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcdRightDiv=add(Z(1(#)), i_0)") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_11"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_12"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "5") (term "0"))
                                          (rule "cut_direct" (formula "9") (term "0"))
                                          (branch "CUT: i_0 <= -1 + bucket_0 TRUE"
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "47") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "inEqSimp_commuteLeq" (formula "40"))
                                             (rule "inEqSimp_commuteLeq" (formula "41"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "21"))
                                             (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "20") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "18") (term "0") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "18") (term "0,2,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "49")))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "jdiv_axiom" (formula "36") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                             (rule "elimGcdGeq" (formula "36") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,1,0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polyDiv_pullOut" (formula "36") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,2,0,2,0"))
                                             (rule "equal_literals" (formula "36") (term "0,0,2,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0,2,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,0,0,2,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,0,2,0"))
                                             (rule "div_literals" (formula "36") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "2,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polyDiv_pullOut" (formula "36") (term "0,1") (inst "polyDivCoeff=l_0"))
                                             (rule "equal_literals" (formula "36") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "36") (term "1"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0,1,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,0,0,0,1,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,0,1,0,1"))
                                             (rule "div_literals" (formula "36") (term "0,0,1,0,1"))
                                             (rule "add_zero_left" (formula "36") (term "0,1,0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "36") (term "0,1"))
                                             (rule "add_literals" (formula "36") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "commute_or" (formula "28") (term "0,0"))
                                             (rule "jdiv_axiom" (formula "31") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                             (rule "elimGcdGeq" (formula "31") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "sub_literals" (formula "31") (term "0,0,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "31") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "31") (term "1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "31") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "polyDiv_pullOut" (formula "31") (term "0,2,0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,2,0"))
                                             (rule "equal_literals" (formula "31") (term "0,0,2,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,0,2,0"))
                                             (rule "add_literals" (formula "31") (term "1,0,0,0,2,0"))
                                             (rule "times_zero_1" (formula "31") (term "0,0,0,2,0"))
                                             (rule "div_literals" (formula "31") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "2,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "polyDiv_pullOut" (formula "31") (term "0,1") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "31") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "31") (term "1"))
                                             (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,0,1,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,0,0,0,1,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "0,0,0,1,0,1"))
                                             (rule "div_literals" (formula "31") (term "0,0,1,0,1"))
                                             (rule "add_zero_left" (formula "31") (term "0,1,0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1"))
                                             (rule "add_literals" (formula "31") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "commute_and" (formula "6") (term "0"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                             (rule "jdiv_axiom" (formula "23") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "24"))
                                             (rule "inEqSimp_subsumption6" (formula "23") (term "0,0") (ifseqformula "21"))
                                             (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "23") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "leq_literals" (formula "23") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=l_2"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0"))
                                             (rule "add_literals" (formula "23") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,0"))
                                             (rule "div_literals" (formula "23") (term "0,0"))
                                             (rule "add_zero_left" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "3") (term "1") (inst "i=i") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replaceKnownSelect_taclet10000000010000_19" (formula "3") (term "3,0,1,0,1"))
                                             (rule "replaceKnownSelect_taclet10000000010000_25" (formula "3") (term "1,0,1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_20" (formula "3") (term "3,0,1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_26" (formula "3") (term "1,0,1,0,1"))
                                             (rule "replaceKnownSelect_taclet10000000010000_25" (formula "3") (term "0,0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet10000000010000_19" (formula "3") (term "1,1,0,0,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_26" (formula "3") (term "0,0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_20" (formula "3") (term "1,1,0,0,1,1"))
                                             (rule "replace_known_right" (formula "3") (term "0,1,0,0,1") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,1"))
                                             (rule "pullOutSelect" (formula "3") (term "4,0,1,0,1") (inst "selectSK=de_wiesler_BucketPointers_first_empty_position_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "3") (term "0,0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "3") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "3") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "castDel" (formula "3") (term "0"))
                                             (rule "applyEqReverse" (formula "4") (term "4,0,1,0,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "pullOutSelect" (formula "3") (term "2,0,1,0,1") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_0"))
                                             (rule "applyEq" (formula "4") (term "0,0,0,0,1") (ifseqformula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "3") (term "0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "3") (term "0,0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "3") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "3") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "castDel" (formula "3") (term "0"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0,0,1") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0,1,0,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,1") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "48")))
                                             (rule "wellFormedAnon" (formula "8") (term "1,0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "8") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "8") (term "1,1,0,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "8") (term "0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "8") (term "0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                             (rule "wellFormedStoreObject" (formula "8") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "51")))
                                             (rule "wellFormedStorePrimitive" (formula "8") (term "0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet0010000_12" (formula "8") (term "0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "8") (term "0,1,1,0"))
                                             (rule "replace_known_left" (formula "8") (term "1,1,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "wellFormedStoreObject" (formula "8") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "50")))
                                             (rule "wellFormedStorePrimitive" (formula "8") (term "0,1,0"))
                                             (rule "wellFormedCreate" (formula "8") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
                                             (rule "replaceKnownSelect_taclet10000000010000_21" (formula "8") (term "0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000000010000_22" (formula "8") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_2"))
                                             (rule "simplifySelectOfAnon" (formula "8"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "49")))
                                             (rule "dismissNonSelectedField" (formula "8") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "2,0"))
                                             (rule "replaceKnownSelect_taclet10000_6" (formula "8") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "8") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "8") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "8") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "8") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                             (rule "elementOfArrayRange" (formula "8") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "applyEqReverse" (formula "9") (term "1,1,0,0") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "53") (term "0"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0,0"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "47") (term "0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "translateJavaMod" (formula "47") (term "0"))
                                             (rule "jmod_axiom" (formula "47") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                             (rule "newSym_eq" (formula "47") (inst "l=l_3") (inst "newSymDef=mul(int::select(anon_heap_init<<anonHeapFunction>>,
                buffer,
                arr(add(Z(1(#)),
                        mul(bucket_0, Z(2(#)))))),
    Z(0(#)))"))
                                             (rule "times_zero_1" (formula "47") (term "1,1"))
                                             (rule "add_zero_right" (formula "47") (term "1"))
                                             (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "47"))
                                             (rule "eqSymm" (formula "48"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                             (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_3") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "45") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0"))
                                             (rule "leq_literals" (formula "45") (term "0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "46") (term "0"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "translateJavaMod" (formula "46") (term "0"))
                                             (rule "jmod_axiom" (formula "46") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "newSym_eq" (formula "46") (inst "l=l_4") (inst "newSymDef=mul(int::select(anon_heap_init<<anonHeapFunction>>,
                buffer,
                arr(mul(bucket_0, Z(2(#))))),
    Z(0(#)))"))
                                             (rule "times_zero_1" (formula "46") (term "1,1"))
                                             (rule "add_zero_right" (formula "46") (term "1"))
                                             (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                             (rule "eqSymm" (formula "47"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "44") (term "0") (ifseqformula "47"))
                                             (rule "elimGcdGeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "44") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                             (rule "add_literals" (formula "44") (term "0,0"))
                                             (rule "leq_literals" (formula "44") (term "0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "6") (term "1") (inst "i=i") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replaceKnownSelect_taclet010000000010000_42" (formula "6") (term "4,0,1,0,1"))
                                             (rule "replaceKnownSelect_taclet010000000010000_49" (formula "6") (term "3,0,1,0,1"))
                                             (rule "replaceKnownSelect_taclet010000000010000_46" (formula "6") (term "2,0,1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_44" (formula "6") (term "4,0,1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_50" (formula "6") (term "3,0,1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_48" (formula "6") (term "2,0,1,0,1"))
                                             (rule "replaceKnownSelect_taclet010000000010000_46" (formula "6") (term "0,0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet010000000010000_49" (formula "6") (term "1,1,0,0,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_48" (formula "6") (term "0,0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_50" (formula "6") (term "1,1,0,0,1,1"))
                                             (rule "replace_known_right" (formula "6") (term "0,0,0,0,1") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,1"))
                                             (rule "pullOutSelect" (formula "6") (term "0,0,0,0,1") (inst "selectSK=de_wiesler_BucketPointers_buffer_3"))
                                             (rule "applyEq" (formula "7") (term "1,0,1,0,1") (ifseqformula "6"))
                                             (rule "simplifySelectOfAnon" (formula "6"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "52")))
                                             (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                             (rule "replaceKnownSelect_taclet10000_2" (formula "6") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "6") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "6") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "6") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfArrayRange" (formula "6") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "1,0,1,0,1") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "0,0,0,0,1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_right" (formula "6") (term "0,0,0,1") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "andLeft" (formula "17"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_commuteLeq" (formula "16"))
                                             (rule "nnf_imp2or" (formula "3") (term "0,1,1"))
                                             (rule "commute_or_2" (formula "30") (term "0"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "num_buckets >= 1 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "56") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "56") (term "1,0,1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "55") (term "1,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "55") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "2") (term "1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "7") (term "0") (ifseqformula "9"))
                                                (rule "replaceKnownSelect_taclet010000000010000_51" (formula "7") (term "1,2,0"))
                                                (rule "replaceKnownSelect_taclet010000000010000_51" (formula "7") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_52" (formula "7") (term "1,2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_52" (formula "7") (term "1,1,0"))
                                                (rule "translateJavaAddInt" (formula "7") (term "0,2,2,0"))
                                                (rule "translateJavaMulInt" (formula "7") (term "0,2,1,0"))
                                                (rule "translateJavaMulInt" (formula "7") (term "0,0,2,2,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,0"))
                                                (rule "replaceKnownSelect_taclet10000000010000_33" (formula "7") (term "1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000000010000_53" (formula "7") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,0,2,2,0"))
                                                (rule "polySimp_addComm0" (formula "7") (term "0,2,2,0"))
                                                (rule "replaceKnownSelect_taclet10000000010000_34" (formula "7") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000000010000_54" (formula "7") (term "2,0"))
                                                (rule "nnf_imp2or" (formula "5") (term "0,1,1"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,1,1"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,1,1"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,1"))
                                                (rule "nnf_notAnd" (formula "5") (term "0,0,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,1"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,1"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,0,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,1"))
                                                (rule "allLeft" (formula "26") (inst "t=bucket_0"))
                                                (rule "replaceKnownSelect_taclet0010000_10" (formula "26") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "26") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "31"))
                                                (rule "mul_literals" (formula "26") (term "0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "leq_literals" (formula "26") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), bucket_0)"))
                                                (rule "replaceKnownSelect_taclet000010000_15" (formula "28") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000010000_16" (formula "28") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "leq_literals" (formula "28") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "38"))
                                                (rule "mul_literals" (formula "28") (term "0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "leq_literals" (formula "28") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0"))
                                                (rule "leq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "allLeft" (formula "30") (inst "t=num_buckets"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "30") (term "0,1,0"))
                                                (rule "leq_literals" (formula "30") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "30") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_13"))
                                                (rule "simplifySelectOfCreate" (formula "30"))
                                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "55")))
                                                (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                                (rule "hideAuxiliaryEq" (formula "30"))
                                                (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                                (rule "replaceKnownSelect_taclet0000_0" (formula "31") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "31") (term "0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "17"))
                                                (rule "qeq_literals" (formula "31") (term "1"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "58") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "translateJavaMod" (formula "58") (term "0,1,0"))
                                                (rule "jmod_axiom" (formula "58") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "58") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "5") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")))
                                                (rule "translateJavaMulInt" (formula "5") (term "1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0,0,1"))
                                                (rule "pullOutSelect" (formula "5") (term "3,0,1,0,0,1") (inst "selectSK=arr_14"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "58")))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0,0"))
                                                (rule "eqSymm" (formula "5") (term "0,0,0,0,0"))
                                                (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0010000000010000_55" (formula "5") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000000010000_56" (formula "5") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                (rule "ifthenelse_negated" (formula "5") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0"))
                                                (rule "replaceKnownSelect_taclet0010000_12" (formula "5") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "5") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "3,0,1,0,0,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "2") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                (rule "translateJavaMulInt" (formula "2") (term "1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0,0,1"))
                                                (rule "pullOutSelect" (formula "2") (term "3,0,1,0,0,1") (inst "selectSK=arr_15"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
                                                (rule "replaceKnownSelect_taclet0010000000010000_57" (formula "2") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000000010000_58" (formula "2") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,0,0,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet0010000_12" (formula "2") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "2") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "3,0,1,0,0,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_commuteLeq" (formula "7"))
                                                (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "jdiv_axiom" (formula "54") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "applyEq" (formula "54") (term "1") (ifseqformula "55"))
                                                (rule "inEqSimp_subsumption6" (formula "54") (term "0,0") (ifseqformula "51"))
                                                (rule "greater_literals" (formula "54") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                                                (rule "leq_literals" (formula "54") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "polyDiv_pullOut" (formula "54") (term "0") (inst "polyDivCoeff=l_3"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "54") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,0"))
                                                (rule "add_literals" (formula "54") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "0,0,0"))
                                                (rule "div_literals" (formula "54") (term "0,0"))
                                                (rule "add_zero_left" (formula "54") (term "0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "allLeft" (formula "34") (inst "t=mul(bucket_0, Z(2(#)))"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq5" (formula "34") (term "0,0") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "34") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "pullOutSelect" (formula "34") (term "0,1") (inst "selectSK=arr_16"))
                                                (rule "simplifySelectOfCreate" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")))
                                                (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "34"))
                                                (rule "hideAuxiliaryEq" (formula "34"))
                                                (rule "allLeft" (formula "35") (inst "t=mul(i_0, Z(2(#)))"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq5" (formula "35") (term "0,0") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "35") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "pullOutSelect" (formula "35") (term "0,1") (inst "selectSK=arr_17"))
                                                (rule "simplifySelectOfCreate" (formula "35"))
                                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "60")))
                                                (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "35"))
                                                (rule "hideAuxiliaryEq" (formula "35"))
                                                (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), mul(bucket_0, Z(2(#))))"))
                                                (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq5" (formula "36") (term "0,0") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "pullOutSelect" (formula "36") (term "0,1") (inst "selectSK=arr_18"))
                                                (rule "simplifySelectOfCreate" (formula "36"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "61")))
                                                (rule "applyEqReverse" (formula "37") (term "0,1") (ifseqformula "36"))
                                                (rule "hideAuxiliaryEq" (formula "36"))
                                                (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), mul(i_0, Z(2(#))))"))
                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq5" (formula "37") (term "0,0") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "37") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "pullOutSelect" (formula "37") (term "0,1") (inst "selectSK=arr_19"))
                                                (rule "simplifySelectOfCreate" (formula "37"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "62")))
                                                (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "37"))
                                                (rule "hideAuxiliaryEq" (formula "37"))
                                                (rule "jdiv_axiom" (formula "56") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "applyEq" (formula "56") (term "1") (ifseqformula "57"))
                                                (rule "inEqSimp_subsumption6" (formula "56") (term "0,0") (ifseqformula "54"))
                                                (rule "greater_literals" (formula "56") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                                                (rule "leq_literals" (formula "56") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "polyDiv_pullOut" (formula "56") (term "0") (inst "polyDivCoeff=l_4"))
                                                (rule "equal_literals" (formula "56") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "56") (term "0,0,0"))
                                                (rule "add_literals" (formula "56") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "56") (term "0,0,0"))
                                                (rule "div_literals" (formula "56") (term "0,0"))
                                                (rule "add_zero_left" (formula "56") (term "0"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "true_left" (formula "56"))
                                                (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "40") (term "0,0,0,0") (ifseqformula "12"))
                                                (rule "replaceKnownSelect_taclet010000000010000_51" (formula "40") (term "1,2,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet010000000010000_51" (formula "40") (term "1,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_52" (formula "40") (term "1,2,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010000000010000_52" (formula "40") (term "1,1,0,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "40") (term "0,2,2,0,0,0,0"))
                                                (rule "translateJavaMulInt" (formula "40") (term "0,2,1,0,0,0,0"))
                                                (rule "translateJavaMulInt" (formula "40") (term "0,0,2,2,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,2,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,0,2,2,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,2,0,0,0,0"))
                                                (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "5") (term "0,0,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "translateJavaAddInt" (formula "5") (term "3,0,0,0,0,0,0,0,0,1"))
                                                (rule "translateJavaAddInt" (formula "5") (term "3,0,1,0,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "5") (term "3,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "5") (term "3,0,1,0,0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0,0,0,0,1"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0,0,0,0,0,1") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "pullOutSelect" (formula "5") (term "0,1,0,0,0,0,0,1") (inst "selectSK=arr_20"))
                                                (rule "simplifySelectOfAnon" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "65")))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "ifthenelse_negated" (formula "5") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "1,0"))
                                                (rule "replaceKnownSelect_taclet0000_0" (formula "5") (term "1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "5") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "5") (term "0,0,0"))
                                                (rule "replaceKnownSelect_taclet0010000_12" (formula "5") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "5") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "15"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "0,1,0,0,0,0,0,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0,0,0,0,1") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "2") (term "0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "translateJavaMod" (formula "2") (term "0,1,0,1"))
                                                (rule "jmod_axiom" (formula "2") (term "0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,1,0,1") (ifseqformula "26"))
                                                (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,1"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "translateJavaMod" (formula "10") (term "0"))
                                                (rule "jmod_axiom" (formula "10") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "newSym_eq" (formula "10") (inst "l=l_5") (inst "newSymDef=mul(int::select(anon_heap_LOOP<<anonHeapFunction>>,
                buffer,
                arr(add(Z(1(#)), mul(i_0, Z(2(#)))))),
    Z(0(#)))"))
                                                (rule "times_zero_1" (formula "10") (term "1,1"))
                                                (rule "add_zero_right" (formula "10") (term "1"))
                                                (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "11"))
                                                (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                                (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_5") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "translateJavaMod" (formula "9") (term "0"))
                                                (rule "jmod_axiom" (formula "9") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "newSym_eq" (formula "9") (inst "l=l_6") (inst "newSymDef=mul(int::select(anon_heap_LOOP<<anonHeapFunction>>,
                buffer,
                arr(mul(i_0, Z(2(#))))),
    Z(0(#)))"))
                                                (rule "times_zero_1" (formula "9") (term "1,1"))
                                                (rule "add_zero_right" (formula "9") (term "1"))
                                                (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                                                (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_6") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "leq_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "42") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "leq_literals" (formula "23") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "allLeft" (formula "24") (inst "t=bucket_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "51"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "24"))
                                                (rule "mul_literals" (formula "35") (term "0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "37"))
                                                (rule "mul_literals" (formula "35") (term "1,1,0"))
                                                (rule "greater_literals" (formula "35") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1"))
                                                (rule "elimGcdGeq_antec" (formula "50") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "1,1,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "50") (term "1,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "50") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0"))
                                                (rule "leq_literals" (formula "50") (term "0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "allLeft" (formula "26") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "26") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "add_literals" (formula "26") (term "0,2,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "0"))
                                                (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "21"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "5") (term "0,1,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,0,0,1"))
                                                (rule "replace_known_left" (formula "5") (term "1,1,0,0,0,1") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_subsumption6" (formula "5") (term "1,0,0,0,1") (ifseqformula "21"))
                                                (rule "mul_literals" (formula "5") (term "1,1,0,1,0,0,0,1"))
                                                (rule "greater_literals" (formula "5") (term "0,0,1,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "leq_literals" (formula "5") (term "0,1,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "2") (term "0,1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "2") (term "1,1,0,0,1"))
                                                (rule "replace_known_left" (formula "2") (term "1,1,0,0,1") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1"))
                                                (rule "inEqSimp_subsumption6" (formula "2") (term "1,0,0,1") (ifseqformula "21"))
                                                (rule "greater_literals" (formula "2") (term "0,0,1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,0,1,0,0,1"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "72") (term "0"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "translateJavaMod" (formula "72") (term "0"))
                                                (rule "jmod_axiom" (formula "72") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "1,0"))
                                                (rule "applyEq" (formula "72") (term "0,1,0") (ifseqformula "11"))
                                                (rule "polySimp_pullOutFactor0" (formula "72") (term "0"))
                                                (rule "add_literals" (formula "72") (term "1,0"))
                                                (rule "times_zero_1" (formula "72") (term "0"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "closeTrue" (formula "72"))
                                             )
                                             (branch "num_buckets >= 1 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "56") (term "1,0,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "56") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "55") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "55") (term "1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_geqRight" (formula "45"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "6"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0"))
                                                (rule "add_literals" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                          (branch "CUT: i_0 <= -1 + bucket_0 FALSE"
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_leqRight" (formula "42"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "47") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "6"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "1,1,1,0") (ifseqformula "1"))
                                             (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,2,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,2,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "43") (term "0,0,2,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqRigid" (formula "41") (term "0,1,0,2,2,0") (ifseqformula "1"))
                                             (rule "close" (formula "41") (ifseqformula "35"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "32") (inst "sk=f_0") (userinteraction))
                                       (rule "allRight" (formula "32") (inst "sk=o_0") (userinteraction))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "eqSymm" (formula "32") (term "0,0,0,1"))
                                       (rule "eqSymm" (formula "32") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "32") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "32") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "32") (term "0,0"))
                                       (rule "replaceKnownSelect_taclet10000_2" (formula "32") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "32") (term "0,0"))
                                       (rule "eqSymm" (formula "32") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "33") (term "1") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "34") (term "0,0,1") (inst "selectSK=java_lang_Object_created__2"))
                                       (rule "applyEq" (formula "3") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=f_0_2"))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replaceKnownSelect_taclet1000000010000_20" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1000000010000_21" (formula "3") (term "0,0,1,1,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfArrayRange" (formula "3") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "3") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_6"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_7"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                       (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "translateJavaMulInt" (formula "17") (term "1,0,1,0,0"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "38"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "10"))
                                       (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "10"))
                                       (rule "hideAuxiliaryEq" (formula "10"))
                                       (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "9"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "25"))
                                       (rule "inEqSimp_commuteGeq" (formula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "27"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "31"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1"))
                                       (rule "mul_literals" (formula "27") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "translateJavaMod" (formula "26") (term "0"))
                                       (rule "jmod_axiom" (formula "26") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "newSym_eq" (formula "26") (inst "l=l_0") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "26") (term "1,1"))
                                       (rule "add_zero_right" (formula "26") (term "1"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "27"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                       (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "36") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "39")))
                                       (rule "wellFormedAnonEQ" (formula "36") (term "1,0,0") (ifseqformula "34"))
                                       (rule "wellFormedAnon" (formula "36") (term "0,1,0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "36") (term "0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "1,0,1,0,0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "36") (term "0,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "36") (term "0,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0,0,0"))
                                       (rule "wellFormedStoreObject" (formula "36") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
                                       (rule "wellFormedStorePrimitive" (formula "36") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,1,1,0"))
                                       (rule "replaceKnownSelect_taclet0010000_12" (formula "36") (term "0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "36") (term "0,1,1,0"))
                                       (rule "replace_known_left" (formula "36") (term "1,1,0") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "wellFormedStoreObject" (formula "36") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "41")))
                                       (rule "wellFormedStorePrimitive" (formula "36") (term "0,1,0"))
                                       (rule "wellFormedCreate" (formula "36") (term "0,1,0"))
                                       (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,1,0"))
                                       (rule "pullOutSelect" (formula "36") (term "0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")))
                                       (rule "replaceKnownSelect_taclet10000_4" (formula "36") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "36") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "36") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "36") (term "0,0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "elementOfArrayRange" (formula "36") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "36"))
                                       (rule "hideAuxiliaryEq" (formula "36"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "pullOutSelect" (formula "36") (term "0,1,0") (inst "selectSK=java_lang_Object_created__3"))
                                       (rule "simplifySelectOfCreate" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")))
                                       (rule "castDel" (formula "36") (term "1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "36") (term "0,0"))
                                       (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "36"))
                                       (rule "hideAuxiliaryEq" (formula "36"))
                                       (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "translateJavaMod" (formula "31") (term "0"))
                                       (rule "jmod_axiom" (formula "31") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "newSym_eq" (formula "31") (inst "l=l_1") (inst "newSymDef=mul(result_22, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "31") (term "1,1"))
                                       (rule "add_zero_right" (formula "31") (term "1"))
                                       (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "32"))
                                       (rule "commute_and" (formula "44"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "37") (term "0") (ifseqformula "10"))
                                       (rule "translateJavaMulInt" (formula "37") (term "0,2,1,0"))
                                       (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0"))
                                       (rule "translateJavaMulInt" (formula "37") (term "0,0,2,2,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "0,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "0,0,2,2,0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "0,2,2,0"))
                                       (rule "pullOutSelect" (formula "37") (term "1,2,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_2"))
                                       (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")))
                                       (rule "replaceKnownSelect_taclet00000010000_17" (formula "37") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000010000_18" (formula "37") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "37") (term "0,0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "elementOfArrayRange" (formula "37") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "1,2,0") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "42")))
                                       (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1000000010000_33" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1000000010000_34" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,1,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "37") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "37") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "42")))
                                       (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1000000010000_33" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1000000010000_34" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,1,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "37") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "translateJavaMod" (formula "18") (term "0"))
                                       (rule "jmod_axiom" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "newSym_eq" (formula "18") (inst "l=l_2") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "18") (term "1,1"))
                                       (rule "add_zero_right" (formula "18") (term "1"))
                                       (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "36") (term "3,0,0,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "24") (term "3,0,0,0,1,0") (ifseqformula "19"))
                                       (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "translateJavaAddInt" (formula "15") (term "3,0,1"))
                                       (rule "translateJavaAddInt" (formula "15") (term "3,0,0,0,0"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "polySimp_addComm0" (formula "18") (term "3,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "3,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "17"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "20"))
                                       (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "16"))
                                       (rule "greater_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1,0"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_or" (formula "24") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "47") (term "0"))
                                       (branch "CUT: o_0 = buffer TRUE"
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEq" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,1,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "7") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "7") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "46")))
                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "0,0,1") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "48") (term "0,1") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "notRight" (formula "48"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,1,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "5") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "7") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "7") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "7") (term "1,1,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "3") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "nnf_ex2all" (formula "41"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "36") (term "0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "inEqSimp_commuteLeq" (formula "37"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "13") (term "0") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "45")))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "commute_or_2" (formula "24") (term "0"))
                                          (rule "jdiv_axiom" (formula "27") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "28"))
                                          (rule "polyDiv_pullOut" (formula "27") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,2,0,2,0"))
                                          (rule "equal_literals" (formula "27") (term "0,0,2,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,2,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,2,0"))
                                          (rule "add_literals" (formula "27") (term "1,0,0,0,2,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,2,0"))
                                          (rule "div_literals" (formula "27") (term "0,0,2,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "2,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "2,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "elimGcdGeq" (formula "27") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,0"))
                                          (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "27") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polyDiv_pullOut" (formula "27") (term "0,1") (inst "polyDivCoeff=l_0"))
                                          (rule "equal_literals" (formula "27") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "27") (term "1"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,1"))
                                          (rule "div_literals" (formula "27") (term "0,0,1,0,1"))
                                          (rule "add_zero_left" (formula "27") (term "0,1,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
                                          (rule "add_literals" (formula "27") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "translateJavaMod" (formula "41") (term "0"))
                                          (rule "jmod_axiom" (formula "41") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "newSym_eq" (formula "41") (inst "l=l_3") (inst "newSymDef=mul(int::select(anon_heap_init<<anonHeapFunction>>,
                buffer,
                arr(add(Z(1(#)),
                        mul(bucket_0, Z(2(#)))))),
    Z(0(#)))"))
                                          (rule "times_zero_1" (formula "41") (term "1,1"))
                                          (rule "add_zero_right" (formula "41") (term "1"))
                                          (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "41"))
                                          (rule "eqSymm" (formula "42"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                          (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_3") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "leq_literals" (formula "39") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0"))
                                          (rule "leq_literals" (formula "39") (term "0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "40") (term "0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "translateJavaMod" (formula "40") (term "0"))
                                          (rule "jmod_axiom" (formula "40") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "newSym_eq" (formula "40") (inst "l=l_4") (inst "newSymDef=mul(int::select(anon_heap_init<<anonHeapFunction>>,
                buffer,
                arr(mul(bucket_0, Z(2(#))))),
    Z(0(#)))"))
                                          (rule "times_zero_1" (formula "40") (term "1,1"))
                                          (rule "add_zero_right" (formula "40") (term "1"))
                                          (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "41"))
                                          (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "leq_literals" (formula "38") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "jdiv_axiom" (formula "32") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "33"))
                                          (rule "elimGcdGeq" (formula "32") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "0,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "32") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "polyDiv_pullOut" (formula "32") (term "0,2,0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,2,0,2,0"))
                                          (rule "equal_literals" (formula "32") (term "0,0,2,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,2,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,2,0"))
                                          (rule "add_literals" (formula "32") (term "1,0,0,0,2,0"))
                                          (rule "times_zero_1" (formula "32") (term "0,0,0,2,0"))
                                          (rule "div_literals" (formula "32") (term "0,0,2,0"))
                                          (rule "add_zero_left" (formula "32") (term "0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "2,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "2,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "polyDiv_pullOut" (formula "32") (term "0,1") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0,1"))
                                          (rule "equal_literals" (formula "32") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "polySimp_homoEq" (formula "32") (term "1"))
                                          (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,1,0,1"))
                                          (rule "add_literals" (formula "32") (term "1,0,0,0,1,0,1"))
                                          (rule "times_zero_1" (formula "32") (term "0,0,0,1,0,1"))
                                          (rule "div_literals" (formula "32") (term "0,0,1,0,1"))
                                          (rule "add_zero_left" (formula "32") (term "0,1,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1"))
                                          (rule "add_literals" (formula "32") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "32") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "inEqSimp_commuteLeq" (formula "12"))
                                          (rule "inEqSimp_homoInEq0" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1,0"))
                                          (rule "add_zero_right" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "commute_or" (formula "24") (term "0,0"))
                                          (rule "jdiv_axiom" (formula "18") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "19"))
                                          (rule "inEqSimp_subsumption6" (formula "18") (term "0,0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "18") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "leq_literals" (formula "18") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=l_2"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "18") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0"))
                                          (rule "add_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "0,0,0"))
                                          (rule "div_literals" (formula "18") (term "0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " exists int iv; ( arr(iv) = f_0 & iv >= bucket_0 * 2 & iv <= 1 + bucket_0 * 2) & !f_0 = java.lang.Object::<created> TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "eqSymm" (formula "53"))
                                             (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqRigid" (formula "53") (term "2,1") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "53") (term "1") (ifseqformula "8") (ifseqformula "51"))
                                             (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "38") (ifseqformula "51"))
                                             (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "27") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "translateJavaMulInt" (formula "27") (term "0,2,1,0,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "27") (term "0,2,2,0,0,0,0"))
                                             (rule "translateJavaMulInt" (formula "27") (term "0,0,2,2,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,0,2,2,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,2,2,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "27") (term "1,2,0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_3"))
                                             (rule "applyEq" (formula "28") (term "1,1,0,0,0,0") (ifseqformula "27"))
                                             (rule "simplifySelectOfAnon" (formula "27"))
                                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                             (rule "replaceKnownSelect_taclet10000_2" (formula "27") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "27") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "27") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "27") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "elementOfArrayRange" (formula "27") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "1,1,0,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "1,2,0,0,0,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "27") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "27") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "translateJavaMod" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "jmod_axiom" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "27") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "translateJavaMod" (formula "27") (term "0,1,0,0,0"))
                                             (rule "jmod_axiom" (formula "27") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "27") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "commute_or" (formula "27") (term "0,0"))
                                             (rule "commute_or_2" (formula "27") (term "0"))
                                             (rule "jdiv_axiom" (formula "45") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "45"))
                                             (rule "applyEq" (formula "45") (term "1") (ifseqformula "46"))
                                             (rule "inEqSimp_subsumption6" (formula "45") (term "0,0") (ifseqformula "42"))
                                             (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "45") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "leq_literals" (formula "45") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "polyDiv_pullOut" (formula "45") (term "0") (inst "polyDivCoeff=l_3"))
                                             (rule "equal_literals" (formula "45") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "45"))
                                             (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "45") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "45") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "45") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                             (rule "add_literals" (formula "45") (term "1,0"))
                                             (rule "times_zero_1" (formula "45") (term "0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "jdiv_axiom" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                                             (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "41"))
                                             (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "leq_literals" (formula "43") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_4"))
                                             (rule "equal_literals" (formula "43") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "cnf_rightDist" (formula "27") (term "0"))
                                             (rule "distr_forallAnd" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "commute_or" (formula "28") (term "0"))
                                             (rule "cnf_rightDist" (formula "27") (term "0"))
                                             (rule "distr_forallAnd" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "commute_or" (formula "28") (term "0"))
                                             (rule "cnf_rightDist" (formula "27") (term "0"))
                                             (rule "distr_forallAnd" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "commute_or" (formula "28") (term "0"))
                                             (rule "allLeft" (formula "24") (inst "t=bucket_0"))
                                             (rule "replaceKnownSelect_taclet0010000_10" (formula "24") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "24") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "33"))
                                             (rule "mul_literals" (formula "24") (term "0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0"))
                                             (rule "leq_literals" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "26") (inst "t=Z(0(#))"))
                                             (rule "replaceKnownSelect_taclet0000_0" (formula "26") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "26") (term "0,1"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0"))
                                             (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "26") (term "1"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), bucket_0)"))
                                             (rule "replaceKnownSelect_taclet000010000_15" (formula "26") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000010000_16" (formula "26") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "40"))
                                             (rule "mul_literals" (formula "26") (term "0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "28") (inst "t=num_buckets"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,1,0"))
                                             (rule "leq_literals" (formula "28") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "28") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_7"))
                                             (rule "simplifySelectOfCreate" (formula "28"))
                                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "57")))
                                             (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "allLeft" (formula "16") (inst "t=bucket_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "16") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "32"))
                                             (rule "qeq_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "43"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "27") (term "0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "29"))
                                             (rule "times_zero_1" (formula "27") (term "1,1,0"))
                                             (rule "greater_literals" (formula "27") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "42") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "42") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "add_zero_left" (formula "42") (term "1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0"))
                                             (rule "qeq_literals" (formula "42") (term "0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "42"))
                                             (rule "mul_literals" (formula "26") (term "0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0"))
                                             (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                             (rule "add_literals" (formula "18") (term "0,2,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "0"))
                                             (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "18") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "cut_direct" (formula "1") (term "0"))
                                             (branch "CUT: iv_0 <= -1 TRUE"
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "inEqSimp_contradInEq5" (formula "4") (ifseqformula "35"))
                                                (rule "mul_literals" (formula "4") (term "1,1,0"))
                                                (rule "greater_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                             (branch "CUT: iv_0 <= -1 FALSE"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "59"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "2"))
                                                (rule "greater_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "6"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0"))
                                                (rule "add_literals" (formula "7") (term "0"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                          (branch " exists int iv; ( arr(iv) = f_0 & iv >= bucket_0 * 2 & iv <= 1 + bucket_0 * 2) & !f_0 = java.lang.Object::<created> FALSE"
                                             (rule "close" (formula "51") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "CUT: o_0 = buffer FALSE"
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "false_right" (formula "48"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "o_0 = b_1 TRUE"
                                             (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "50")))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                          (branch "o_0 = b_1 FALSE"
                                             (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "34") (term "0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_commuteLeq" (formula "35"))
                                             (rule "inEqSimp_commuteLeq" (formula "34"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_commuteLeq" (formula "14"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "11") (term "0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                             (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "44")))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "commute_or_2" (formula "22") (term "0"))
                                             (rule "jdiv_axiom" (formula "25") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "26"))
                                             (rule "elimGcdGeq" (formula "25") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0"))
                                             (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "25") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polyDiv_pullOut" (formula "25") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,2,0,2,0"))
                                             (rule "equal_literals" (formula "25") (term "0,0,2,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,2,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,0,0,2,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,2,0"))
                                             (rule "div_literals" (formula "25") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "2,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polyDiv_pullOut" (formula "25") (term "0,1") (inst "polyDivCoeff=l_0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,2,0,1"))
                                             (rule "equal_literals" (formula "25") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,1"))
                                             (rule "div_literals" (formula "25") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "25") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "39") (term "0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "translateJavaMod" (formula "39") (term "0"))
                                             (rule "jmod_axiom" (formula "39") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "39"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                             (rule "newSym_eq" (formula "39") (inst "l=l_3") (inst "newSymDef=mul(int::select(anon_heap_init<<anonHeapFunction>>,
                buffer,
                arr(add(Z(1(#)),
                        mul(bucket_0, Z(2(#)))))),
    Z(0(#)))"))
                                             (rule "times_zero_1" (formula "39") (term "1,1"))
                                             (rule "add_zero_right" (formula "39") (term "1"))
                                             (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "39"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "40"))
                                             (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_3") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "37") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0"))
                                             (rule "leq_literals" (formula "37") (term "0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "38") (term "0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "translateJavaMod" (formula "38") (term "0"))
                                             (rule "jmod_axiom" (formula "38") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "newSym_eq" (formula "38") (inst "l=l_4") (inst "newSymDef=mul(int::select(anon_heap_init<<anonHeapFunction>>,
                buffer,
                arr(mul(bucket_0, Z(2(#))))),
    Z(0(#)))"))
                                             (rule "times_zero_1" (formula "38") (term "1,1"))
                                             (rule "add_zero_right" (formula "38") (term "1"))
                                             (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "39"))
                                             (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "36") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0"))
                                             (rule "leq_literals" (formula "36") (term "0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "commute_and" (formula "49"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "jdiv_axiom" (formula "30") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "30") (term "1") (ifseqformula "31"))
                                             (rule "polyDiv_pullOut" (formula "30") (term "0,2,0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "30") (term "0,0,2,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,2,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0,2,0"))
                                             (rule "add_literals" (formula "30") (term "1,0,0,0,2,0"))
                                             (rule "times_zero_1" (formula "30") (term "0,0,0,2,0"))
                                             (rule "div_literals" (formula "30") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "2,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "polyDiv_pullOut" (formula "30") (term "0,1") (inst "polyDivCoeff=l_1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0,1"))
                                             (rule "equal_literals" (formula "30") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "30") (term "1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "30") (term "0,0,0,1"))
                                             (rule "div_literals" (formula "30") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "30") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "commute_or" (formula "22") (term "0,0"))
                                             (rule "jdiv_axiom" (formula "16") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                             (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "14"))
                                             (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                             (rule "leq_literals" (formula "16") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_2"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "0,0,0"))
                                             (rule "div_literals" (formula "16") (term "0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "22") (term "0,0,0,0") (ifseqformula "3"))
                                             (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,0,0,0"))
                                             (rule "translateJavaMulInt" (formula "22") (term "0,2,1,0,0,0,0"))
                                             (rule "translateJavaMulInt" (formula "22") (term "0,0,2,2,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "0,0,2,2,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "22") (term "0,2,2,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "22") (term "1,2,0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_3"))
                                             (rule "applyEq" (formula "23") (term "1,1,0,0,0,0") (ifseqformula "22"))
                                             (rule "simplifySelectOfAnon" (formula "22"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                             (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                             (rule "replaceKnownSelect_taclet10000_2" (formula "22") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "22") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "22") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "22") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,2,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,1,0,0,0,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "42"))
                                                (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "replace_known_right" (formula "51") (term "0,1") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "43")))
                                                (rule "closeTrue" (formula "51"))
                                             )
                                             (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                                                (rule "close" (formula "51") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,0,0"))
                                    (rule "precOfInt" (formula "32"))
                                    (rule "inEqSimp_ltToLeq" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "0,1"))
                                    (rule "leq_literals" (formula "32") (term "1"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                              (branch "Exceptional Post (init)"
                                  (builtin "One Step Simplification" (formula "30"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "translateJavaAddInt" (formula "25") (term "2,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "25") (term "1,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "25") (term "0,2,1,0,0"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "close" (formula "29") (ifseqformula "28"))
                              )
                              (branch "Pre (init)"
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "18")) (ifInst ""  (formula "22")))
                                 (rule "andRight" (formula "28"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "28"))
                                    (branch "Case 1"
                                       (rule "replaceKnownSelect_taclet10000_4" (formula "28") (term "3,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "28") (term "3,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1"))
                                       (rule "mul_literals" (formula "19") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "27") (term "1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "replaceKnownSelect_taclet10000_2" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "1") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "1") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "28") (term "4,0") (inst "selectSK=de_wiesler_BucketPointers_first_empty_position_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "1") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "28") (term "4,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "11") (term "0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "translateJavaMod" (formula "17") (term "0"))
                                       (rule "jmod_axiom" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "newSym_eq" (formula "17") (inst "l=l_0") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "17") (term "1,1"))
                                       (rule "add_zero_right" (formula "17") (term "1"))
                                       (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "16"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1"))
                                       (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "translateJavaMulInt" (formula "9") (term "1,0,1,0,0"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "notLeft" (formula "9"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "22"))
                                       (rule "inEqSimp_homoInEq0" (formula "24"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "translateJavaMod" (formula "23") (term "0"))
                                       (rule "jmod_axiom" (formula "23") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "newSym_eq" (formula "23") (inst "l=l_1") (inst "newSymDef=mul(result_22, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "23") (term "1,1"))
                                       (rule "add_zero_right" (formula "23") (term "1"))
                                       (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "23"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                       (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                                       (rule "translateJavaMulInt" (formula "31") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0"))
                                       (rule "pullOutSelect" (formula "31") (term "3,0,1,0") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet0010000_12" (formula "1") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                       (rule "applyEqReverse" (formula "32") (term "3,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "12") (term "0,0"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "translateJavaMod" (formula "10") (term "0"))
                                       (rule "jmod_axiom" (formula "10") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "newSym_eq" (formula "10") (inst "l=l_2") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "10") (term "1,1"))
                                       (rule "add_zero_right" (formula "10") (term "1"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "16") (term "3,0,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "32") (term "3,0,0,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "32") (term "3,0,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "32") (term "3,0,0,0,1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "32") (term "3,0,0,0,0,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "11"))
                                       (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "translateJavaAddInt" (formula "7") (term "3,0,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "7") (term "3,0,1"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "3,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "3,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "9"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "8"))
                                       (rule "greater_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "36") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0"))
                                       (rule "replace_known_left" (formula "36") (term "1,1,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0"))
                                       (rule "inEqSimp_subsumption6" (formula "36") (term "1,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,1,0"))
                                       (rule "greater_literals" (formula "36") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "leq_literals" (formula "36") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "10") (term "0") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "10") (term "0,2,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                       (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "35")))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "37") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "translateJavaMod" (formula "37") (term "0,1"))
                                       (rule "jmod_axiom" (formula "37") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,1") (ifseqformula "15"))
                                       (rule "polySimp_pullOutFactor0" (formula "37") (term "0,1"))
                                       (rule "add_literals" (formula "37") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "37") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_commuteLeq" (formula "7"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "inEqSimp_homoInEq0" (formula "8"))
                                       (rule "times_zero_2" (formula "8") (term "1,0"))
                                       (rule "add_zero_right" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "37") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1"))
                                       (rule "replace_known_left" (formula "37") (term "1,1") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_subsumption6" (formula "37") (term "1") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,1"))
                                       (rule "greater_literals" (formula "37") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "leq_literals" (formula "37") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "commute_or_2" (formula "21") (term "0"))
                                       (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "37") (term "0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "translateJavaAddInt" (formula "37") (term "3,0,1"))
                                       (rule "translateJavaAddInt" (formula "37") (term "3,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "3,0,1"))
                                       (rule "polySimp_addComm0" (formula "37") (term "3,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                       (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "replaceKnownSelect_taclet0010000_12" (formula "1") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet0000_0" (formula "1") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "38") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "21") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "translateJavaAddInt" (formula "21") (term "0,2,2,0,0,0,0"))
                                       (rule "translateJavaMulInt" (formula "21") (term "0,2,1,0,0,0,0"))
                                       (rule "translateJavaMulInt" (formula "21") (term "0,0,2,2,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,0,2,2,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,2,2,0,0,0,0"))
                                       (rule "pullOutSelect" (formula "21") (term "1,2,0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_2"))
                                       (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "simplifySelectOfAnon" (formula "21"))
                                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "34")))
                                       (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                       (rule "replaceKnownSelect_taclet10000_2" (formula "21") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "21") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet10000_5" (formula "21") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "21") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "elementOfArrayRange" (formula "21") (term "0,0") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "applyEqReverse" (formula "22") (term "1,2,0,0,0,0") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "jdiv_axiom" (formula "24") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "25"))
                                       (rule "polyDiv_pullOut" (formula "24") (term "1,0") (inst "polyDivCoeff=l_0"))
                                       (rule "equal_literals" (formula "24") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "0,0,1,0"))
                                       (rule "div_literals" (formula "24") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "polySimp_homoEq" (formula "24") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
                                       (rule "polyDiv_pullOut" (formula "24") (term "0,1") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,2,0,1"))
                                       (rule "equal_literals" (formula "24") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1"))
                                       (rule "polySimp_homoEq" (formula "24") (term "1"))
                                       (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "24") (term "1,0,0,0,1,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,1"))
                                       (rule "div_literals" (formula "24") (term "0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "24") (term "0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1"))
                                       (rule "add_literals" (formula "24") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "37") (term "1,0") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "jdiv_axiom" (formula "29") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                                       (rule "polyDiv_pullOut" (formula "29") (term "0,2,0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
                                       (rule "equal_literals" (formula "29") (term "0,0,2,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,0,2,0"))
                                       (rule "add_literals" (formula "29") (term "1,0,0,0,2,0"))
                                       (rule "times_zero_1" (formula "29") (term "0,0,0,2,0"))
                                       (rule "div_literals" (formula "29") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "2,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "elimGcdGeq" (formula "29") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "0,1,0,0,0"))
                                       (rule "leq_literals" (formula "29") (term "1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "polyDiv_pullOut" (formula "29") (term "0,1") (inst "polyDivCoeff=l_1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0,1"))
                                       (rule "equal_literals" (formula "29") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "polySimp_homoEq" (formula "29") (term "1"))
                                       (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,0,0,0,1,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,1"))
                                       (rule "div_literals" (formula "29") (term "0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "29") (term "0,1,0,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1"))
                                       (rule "add_literals" (formula "29") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "21") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,0"))
                                       (rule "jdiv_axiom" (formula "15") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                                       (rule "inEqSimp_subsumption6" (formula "15") (term "0,0") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "15") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "15") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_2"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "0,0,0"))
                                       (rule "div_literals" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "37") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1,0"))
                                       (rule "replace_known_left" (formula "37") (term "1,1,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "37") (term "1,0") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "21") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "translateJavaMod" (formula "21") (term "0,1,0,0,0"))
                                       (rule "jmod_axiom" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "0"))
                                       (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "21") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "translateJavaMod" (formula "21") (term "0,1,0,0,0,0"))
                                       (rule "jmod_axiom" (formula "21") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0"))
                                       (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "37") (term "0") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "translateJavaAddInt" (formula "37") (term "0,2,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0"))
                                       (rule "allRight" (formula "37") (inst "sk=i_0"))
                                       (rule "impRight" (formula "37"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,2,1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "add_zero_left" (formula "2") (term "1"))
                                       (rule "inEqSimp_leqRight" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet0010000_12" (formula "1") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "replaceKnownSelect_taclet0010000_12" (formula "1") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "commute_or_2" (formula "25") (term "0"))
                                       (rule "cnf_rightDist" (formula "25") (term "0"))
                                       (rule "distr_forallAnd" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "commute_or" (formula "26") (term "0"))
                                       (rule "cnf_rightDist" (formula "25") (term "0"))
                                       (rule "distr_forallAnd" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "commute_or" (formula "26") (term "0"))
                                       (rule "cnf_rightDist" (formula "25") (term "0"))
                                       (rule "distr_forallAnd" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "commute_or" (formula "26") (term "0"))
                                       (rule "allLeft" (formula "14") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,0,1"))
                                       (rule "leq_literals" (formula "14") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "3"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0"))
                                       (rule "add_literals" (formula "14") (term "0"))
                                       (rule "leq_literals" (formula "14"))
                                       (rule "closeFalse" (formula "14"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "28"))
                                       (branch "Case 1"
                                          (rule "replaceKnownSelect_taclet10000_4" (formula "28") (term "3,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000_8" (formula "28") (term "3,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                          (rule "times_zero_2" (formula "1") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1"))
                                          (rule "mul_literals" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "qeq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "translateJavaMod" (formula "21") (term "0"))
                                          (rule "jmod_axiom" (formula "21") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "newSym_eq" (formula "21") (inst "l=l_0") (inst "newSymDef=mul(result_22, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "21") (term "1,1"))
                                          (rule "add_zero_right" (formula "21") (term "1"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "20"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq0" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "translateJavaMulInt" (formula "9") (term "1,0,1,0,0"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "19"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1"))
                                          (rule "mul_literals" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                          (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "translateJavaMod" (formula "18") (term "0"))
                                          (rule "jmod_axiom" (formula "18") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "newSym_eq" (formula "18") (inst "l=l_1") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "18") (term "1,1"))
                                          (rule "add_zero_right" (formula "18") (term "1"))
                                          (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "19"))
                                          (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "19"))
                                          (rule "Definition_axiom_for_isBetween_in_de_wiesler_Functions" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "31") (term "0"))
                                          (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "28"))
                                          (branch "Case 1"
                                             (rule "inEqSimp_ltToLeq" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1"))
                                             (rule "mul_literals" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                             (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "nnf_imp2or" (formula "14") (term "0"))
                                             (rule "nnf_imp2or" (formula "11") (term "0"))
                                             (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                             (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "translateJavaMulInt" (formula "9") (term "1,0,1,0,0"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "21"))
                                             (rule "inEqSimp_commuteGeq" (formula "17"))
                                             (rule "inEqSimp_homoInEq0" (formula "23"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "19"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1"))
                                             (rule "mul_literals" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "translateJavaMod" (formula "22") (term "0"))
                                             (rule "jmod_axiom" (formula "22") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "newSym_eq" (formula "22") (inst "l=l_0") (inst "newSymDef=mul(result_22, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "22") (term "1,1"))
                                             (rule "add_zero_right" (formula "22") (term "1"))
                                             (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "22"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                             (rule "applyEq" (formula "30") (term "3,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "23"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "translateJavaMod" (formula "18") (term "0"))
                                             (rule "jmod_axiom" (formula "18") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                             (rule "newSym_eq" (formula "18") (inst "l=l_1") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "18") (term "1,1"))
                                             (rule "add_zero_right" (formula "18") (term "1"))
                                             (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                                             (rule "eqSymm" (formula "19"))
                                             (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "19"))
                                             (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "19"))
                                             (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "translateJavaMod" (formula "10") (term "0"))
                                             (rule "jmod_axiom" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "newSym_eq" (formula "10") (inst "l=l_2") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "10") (term "1,1"))
                                             (rule "add_zero_right" (formula "10") (term "1"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "32") (term "3,0,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "16") (term "3,0,0,0,1,0") (ifseqformula "11"))
                                             (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "translateJavaAddInt" (formula "7") (term "3,0,1"))
                                             (rule "translateJavaAddInt" (formula "7") (term "3,0,0,0,0"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "polySimp_addComm0" (formula "10") (term "3,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "3,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "9"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "inEqSimp_commuteLeq" (formula "11"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0"))
                                             (rule "greater_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "commute_or" (formula "19") (term "0,0"))
                                             (rule "commute_or" (formula "16") (term "0,0"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "36") (term "0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "1"))
                                             (rule "elimGcdGeq" (formula "36") (term "1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,1,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,1,0,1"))
                                             (rule "add_zero_right" (formula "36") (term "0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,1"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1"))
                                             (rule "qeq_literals" (formula "36") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,1"))
                                             (rule "leq_literals" (formula "36") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "elimGcdGeq" (formula "36") (term "0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "10") (term "0") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "translateJavaAddInt" (formula "10") (term "0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "10") (term "0"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                             (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "35")))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                             (rule "translateJavaMulInt" (formula "21") (term "0,2,1,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "21") (term "0,2,2,0,1,0"))
                                             (rule "translateJavaMulInt" (formula "21") (term "0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "0,2,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "0,0,2,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "21") (term "0,2,2,0,1,0"))
                                             (rule "pullOutSelect" (formula "21") (term "1,2,0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                             (rule "applyEq" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
                                             (rule "simplifySelectOfAnon" (formula "21"))
                                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "34")))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                             (rule "replaceKnownSelect_taclet10000_2" (formula "21") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "21") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "21") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "21") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "elementOfArrayRange" (formula "21") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,2,0,1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_commuteLeq" (formula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "8"))
                                             (rule "times_zero_2" (formula "8") (term "1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "commute_and" (formula "37"))
                                             (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_commuteLeq" (formula "7"))
                                             (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "21") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "21") (term "0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "translateJavaMod" (formula "21") (term "0,1,0,1,0"))
                                             (rule "jmod_axiom" (formula "21") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                                             (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "21") (term "0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "translateJavaMod" (formula "21") (term "0,1,1,0"))
                                             (rule "jmod_axiom" (formula "21") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "21") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1,0"))
                                             (rule "jdiv_axiom" (formula "29") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "30"))
                                             (rule "polyDiv_pullOut" (formula "29") (term "1,0") (inst "polyDivCoeff=l_0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,1,0"))
                                             (rule "equal_literals" (formula "29") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "29") (term "1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "29") (term "0,0,1,0"))
                                             (rule "div_literals" (formula "29") (term "0,1,0"))
                                             (rule "add_zero_left" (formula "29") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "polySimp_homoEq" (formula "29") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                                             (rule "polyDiv_pullOut" (formula "29") (term "0,1") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "29") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "29") (term "1"))
                                             (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,0,1,0,1"))
                                             (rule "add_literals" (formula "29") (term "1,0,0,0,1,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,1"))
                                             (rule "div_literals" (formula "29") (term "0,0,1,0,1"))
                                             (rule "add_zero_left" (formula "29") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1"))
                                             (rule "add_literals" (formula "29") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "jdiv_axiom" (formula "24") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "25"))
                                             (rule "elimGcdGeq" (formula "24") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "0,1,0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polyDiv_pullOut" (formula "24") (term "1,0") (inst "polyDivCoeff=l_1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,2,1,0"))
                                             (rule "equal_literals" (formula "24") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "0,0,1,0"))
                                             (rule "div_literals" (formula "24") (term "0,1,0"))
                                             (rule "add_zero_left" (formula "24") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_homoEq" (formula "24") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,0,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
                                             (rule "polyDiv_pullOut" (formula "24") (term "0,1") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,2,0,1"))
                                             (rule "equal_literals" (formula "24") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "24") (term "1"))
                                             (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,0,1,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,0,0,0,1,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,1"))
                                             (rule "div_literals" (formula "24") (term "0,0,1,0,1"))
                                             (rule "add_zero_left" (formula "24") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1"))
                                             (rule "add_literals" (formula "24") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "jdiv_axiom" (formula "15") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_subsumption6" (formula "15") (term "0,0") (ifseqformula "13"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "15") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "leq_literals" (formula "15") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_2"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "15") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "polySimp_homoEq" (formula "15"))
                                             (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "15") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "15") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "15") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "times_zero_1" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "cnf_rightDist" (formula "21") (term "0"))
                                             (rule "distr_forallAnd" (formula "21"))
                                             (rule "andLeft" (formula "21"))
                                             (rule "commute_or" (formula "22") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "cnf_rightDist" (formula "22") (term "0"))
                                             (rule "distr_forallAnd" (formula "22"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "commute_or" (formula "23") (term "0"))
                                             (rule "cnf_rightDist" (formula "22") (term "0"))
                                             (rule "distr_forallAnd" (formula "22"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "commute_or" (formula "23") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                                             (rule "cut_direct" (formula "41") (term "0"))
                                             (branch "CUT: l_0 >= l_1 TRUE"
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_geqRight" (formula "42"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), bucket_0)"))
                                                (rule "replaceKnownSelect_taclet000010000_15" (formula "21") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000010000_16" (formula "21") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "24"))
                                                (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0"))
                                                (rule "leq_literals" (formula "21") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "35"))
                                                (rule "mul_literals" (formula "21") (term "0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "leq_literals" (formula "21") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "allLeft" (formula "23") (inst "t=num_buckets"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,0"))
                                                (rule "leq_literals" (formula "23") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "23") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfCreate" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                                                (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                                                (rule "hideAuxiliaryEq" (formula "23"))
                                                (rule "allLeft" (formula "24") (inst "t=bucket_0"))
                                                (rule "replaceKnownSelect_taclet0010000_10" (formula "24") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "24") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "33"))
                                                (rule "mul_literals" (formula "24") (term "0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0"))
                                                (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                (rule "greater_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "closeFalse" (formula "24"))
                                             )
                                             (branch "CUT: l_0 >= l_1 FALSE"
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "inEqSimp_geqRight" (formula "41"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), bucket_0)"))
                                                (rule "replaceKnownSelect_taclet000010000_15" (formula "20") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000010000_16" (formula "20") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "20") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0"))
                                                (rule "leq_literals" (formula "20") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "34"))
                                                (rule "mul_literals" (formula "20") (term "0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "20") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "20") (term "0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "allLeft" (formula "23") (inst "t=num_buckets"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,0"))
                                                (rule "leq_literals" (formula "23") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "23") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfCreate" (formula "23"))
                                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                                                (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                                                (rule "hideAuxiliaryEq" (formula "23"))
                                                (rule "allLeft" (formula "24") (inst "t=bucket_0"))
                                                (rule "replaceKnownSelect_taclet0010000_10" (formula "24") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "24") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "33"))
                                                (rule "mul_literals" (formula "24") (term "0,0"))
                                                (rule "add_zero_left" (formula "24") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "20"))
                                                (rule "greater_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "mul_literals" (formula "24") (term "1,0"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "allLeft" (formula "25") (inst "t=Z(0(#))"))
                                                (rule "replaceKnownSelect_taclet0000_0" (formula "25") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "25") (term "0,1"))
                                                (rule "leq_literals" (formula "25") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0"))
                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "25") (term "1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "allLeft" (formula "12") (inst "t=bucket_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "12") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "39"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "12"))
                                                (rule "times_zero_1" (formula "26") (term "0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "23"))
                                                (rule "mul_literals" (formula "26") (term "1,1,0"))
                                                (rule "greater_literals" (formula "26") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "12"))
                                                (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                (rule "mul_literals" (formula "38") (term "0,1"))
                                                (rule "inEqSimp_contradInEq3" (formula "38") (ifseqformula "1"))
                                                (rule "greater_literals" (formula "38") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "polySimp_rightDist" (formula "38") (term "0"))
                                                (rule "mul_literals" (formula "38") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "38") (term "0"))
                                                (rule "add_literals" (formula "38") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0"))
                                                (rule "add_literals" (formula "38") (term "0"))
                                                (rule "leq_literals" (formula "38"))
                                                (rule "closeFalse" (formula "38"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "eqSymm" (formula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1"))
                                             (rule "mul_literals" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                             (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_wiesler_BucketPointers_first_empty_position_0"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet10000_5" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "1") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "28") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "wellFormedAnon" (formula "28"))
                                    (rule "wellFormedStorePrimitive" (formula "28") (term "0"))
                                    (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "wellFormedStoreObject" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")))
                                    (rule "wellFormedStorePrimitive" (formula "27") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet0010000_12" (formula "27") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "27") (term "0,1"))
                                    (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "wellFormedStoreObject" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")))
                                    (rule "wellFormedStorePrimitive" (formula "27") (term "0"))
                                    (rule "wellFormedCreate" (formula "27") (term "0"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                    (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                    (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "28") (ifseqformula "8"))
                                 )
                              )
                           )
                           (branch "Exceptional Post (align_to_next_block)"
                               (builtin "One Step Simplification" (formula "25"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaSubInt" (formula "20") (term "0,1,0,1"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "20"))
                              (rule "close" (formula "24") (ifseqformula "23"))
                           )
                           (branch "Pre (align_to_next_block)"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "andRight" (formula "24"))
                              (branch "Case 1"
                                 (rule "inEqSimp_geqRight" (formula "24"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "2") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "translateJavaMulInt" (formula "10") (term "1,0,1,0,0"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "translateJavaMod" (formula "19") (term "0"))
                                 (rule "jmod_axiom" (formula "19") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "newSym_eq" (formula "19") (inst "l=l_0") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                                 (rule "times_zero_1" (formula "19") (term "1,1"))
                                 (rule "add_zero_right" (formula "19") (term "1"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "translateJavaMod" (formula "11") (term "0"))
                                 (rule "jmod_axiom" (formula "11") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "newSym_eq" (formula "11") (inst "l=l_1") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                                 (rule "times_zero_1" (formula "11") (term "1,1"))
                                 (rule "add_zero_right" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "17") (term "3,0,0,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                                 (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "translateJavaAddInt" (formula "8") (term "3,0,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "8") (term "3,0,1"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "polySimp_addComm0" (formula "11") (term "3,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "3,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "inEqSimp_commuteLeq" (formula "12"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "9"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0"))
                                 (rule "greater_literals" (formula "12") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                 (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "inEqSimp_homoInEq0" (formula "9"))
                                 (rule "times_zero_2" (formula "9") (term "1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "translateJavaMulInt" (formula "22") (term "0,2,1,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "22") (term "0,0,2,2,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,0,2,2,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,2,2,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "22") (term "1,2,0,1,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                 (rule "applyEq" (formula "23") (term "1,1,0,1,0,0") (ifseqformula "22"))
                                 (rule "simplifySelectOfAnon" (formula "22"))
                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")))
                                 (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet10000_2" (formula "22") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "22") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10000_5" (formula "22") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "22") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEqReverse" (formula "23") (term "1,2,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEqReverse" (formula "23") (term "1,1,0,1,0,0") (ifseqformula "22"))
                                 (rule "hideAuxiliaryEq" (formula "22"))
                                 (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "22") (term "0,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "translateJavaMod" (formula "22") (term "0,1,1,0,0"))
                                 (rule "jmod_axiom" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "22") (term "0,1,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "translateJavaMod" (formula "22") (term "0,1,0,1,0,0"))
                                 (rule "jmod_axiom" (formula "22") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "22") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0"))
                                 (rule "distr_forallAnd" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "commute_or" (formula "23") (term "0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0"))
                                 (rule "distr_forallAnd" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "commute_or" (formula "23") (term "0"))
                                 (rule "jdiv_axiom" (formula "27") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                 (rule "polyDiv_pullOut" (formula "27") (term "1,0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,2,1,0"))
                                 (rule "equal_literals" (formula "27") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "27") (term "1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "27") (term "0,0,1,0"))
                                 (rule "div_literals" (formula "27") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "27") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_homoEq" (formula "27") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "27") (term "1"))
                                 (rule "polyDiv_pullOut" (formula "27") (term "0,1") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,2,0,1"))
                                 (rule "equal_literals" (formula "27") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1"))
                                 (rule "polySimp_homoEq" (formula "27") (term "1"))
                                 (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,1"))
                                 (rule "div_literals" (formula "27") (term "0,0,1,0,1"))
                                 (rule "add_zero_left" (formula "27") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "27") (term "0,1"))
                                 (rule "add_literals" (formula "27") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "cnf_rightDist" (formula "22") (term "0"))
                                 (rule "distr_forallAnd" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "commute_or" (formula "23") (term "0"))
                                 (rule "jdiv_axiom" (formula "16") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                 (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "14"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "leq_literals" (formula "16") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_1"))
                                 (rule "equal_literals" (formula "16") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "16"))
                                 (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "16") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,0"))
                                 (rule "times_zero_1" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                                 (rule "allLeft" (formula "20") (inst "t=num_buckets"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,1,0"))
                                 (rule "leq_literals" (formula "20") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfCreate" (formula "20"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "35")))
                                 (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                 (rule "hideAuxiliaryEq" (formula "20"))
                                 (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), bucket_0)"))
                                 (rule "replaceKnownSelect_taclet000010000_15" (formula "21") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000010000_16" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "21") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "Case 2"
                                 (rule "wellFormedAnon" (formula "24"))
                                 (rule "wellFormedStorePrimitive" (formula "24") (term "0"))
                                 (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "wellFormedStoreObject" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                 (rule "wellFormedStorePrimitive" (formula "23") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0,1"))
                                 (rule "replaceKnownSelect_taclet0010000_12" (formula "23") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "23") (term "0,1"))
                                 (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "wellFormedStoreObject" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                                 (rule "wellFormedStorePrimitive" (formula "23") (term "0"))
                                 (rule "wellFormedCreate" (formula "23") (term "0"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                 (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "24") (ifseqformula "8"))
                              )
                           )
                        )
                        (branch "Null Reference (x_arr = null)"
                           (rule "false_right" (formula "24"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr != null, but x_1 Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "false_right" (formula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "translateJavaMulInt" (formula "9") (term "1,0,1,0,0"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "notLeft" (formula "9"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                           (rule "mul_literals" (formula "20") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "translateJavaMod" (formula "19") (term "0"))
                           (rule "jmod_axiom" (formula "19") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "newSym_eq" (formula "19") (inst "l=l_0") (inst "newSymDef=mul(result_21, Z(0(#)))"))
                           (rule "times_zero_1" (formula "19") (term "1,1"))
                           (rule "add_zero_right" (formula "19") (term "1"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "18") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "20"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "translateJavaMod" (formula "11") (term "0"))
                           (rule "jmod_axiom" (formula "11") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "newSym_eq" (formula "11") (inst "l=l_1") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                           (rule "times_zero_1" (formula "11") (term "1,1"))
                           (rule "add_zero_right" (formula "11") (term "1"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                           (rule "eqSymm" (formula "12"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                           (rule "applyEq" (formula "17") (term "3,0,0,0,1,0") (ifseqformula "12"))
                           (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                           (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "translateJavaAddInt" (formula "8") (term "3,0,1"))
                           (rule "translateJavaAddInt" (formula "8") (term "3,0,0,0,0"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "polySimp_addComm0" (formula "11") (term "3,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "3,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "12"))
                           (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "9"))
                           (rule "mul_literals" (formula "12") (term "1,1,0"))
                           (rule "greater_literals" (formula "12") (term "0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or" (formula "17") (term "0,0"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "leq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0"))
                           (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0") (ifseqformula "3"))
                           (rule "translateJavaMulInt" (formula "22") (term "0,2,1,0,1,0"))
                           (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,1,0"))
                           (rule "translateJavaMulInt" (formula "22") (term "0,0,2,2,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,0,2,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,2,2,0,1,0"))
                           (rule "pullOutSelect" (formula "22") (term "1,1,0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                           (rule "applyEq" (formula "23") (term "1,2,0,1,0") (ifseqformula "22"))
                           (rule "simplifySelectOfAnon" (formula "22"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")))
                           (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                           (rule "replaceKnownSelect_taclet10000_2" (formula "22") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "22") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet10000_5" (formula "22") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "22") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1,2,0,1,0") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1,1,0,1,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "inEqSimp_commuteLeq" (formula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1,0"))
                           (rule "add_zero_right" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "9"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_literals" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "Exceptional Post (align_to_next_block)"
                         (builtin "One Step Simplification" (formula "15"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaSubInt" (formula "15") (term "0,1,0,1"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "17"))
                        (rule "notLeft" (formula "15"))
                        (rule "close" (formula "19") (ifseqformula "18"))
                     )
                     (branch "Pre (align_to_next_block)"
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "wellFormedAnon" (formula "19") (term "1"))
                        (rule "wellFormedStorePrimitive" (formula "19") (term "0,1"))
                        (rule "replace_known_left" (formula "19") (term "1,1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "wellFormedStoreObject" (formula "18") (term "1"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                        (rule "wellFormedStorePrimitive" (formula "18") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,1,1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,1,1"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet0010000_12" (formula "18") (term "0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010000_13" (formula "18") (term "0,1,1"))
                        (rule "replace_known_left" (formula "18") (term "1,1") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "wellFormedStoreObject" (formula "18") (term "1"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
                        (rule "wellFormedStorePrimitive" (formula "18") (term "0,1"))
                        (rule "wellFormedCreate" (formula "18") (term "0,1"))
                        (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "dismissNonSelectedField" (formula "18") (term "0,1"))
                        (rule "pullOutSelect" (formula "18") (term "0,1") (inst "selectSK=java_lang_Object_created__2"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                        (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "translateJavaMulInt" (formula "9") (term "1,0,1,0,0"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                        (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "translateJavaMod" (formula "11") (term "0"))
                        (rule "jmod_axiom" (formula "11") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "newSym_eq" (formula "11") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                        (rule "times_zero_1" (formula "11") (term "1,1"))
                        (rule "add_zero_right" (formula "11") (term "1"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "17") (term "3,0,0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                        (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "translateJavaAddInt" (formula "8") (term "3,0,0,0,0"))
                        (rule "translateJavaAddInt" (formula "8") (term "3,0,1"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "polySimp_addComm0" (formula "11") (term "3,0"))
                        (rule "polySimp_addComm0" (formula "8") (term "3,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                        (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "9"))
                        (rule "greater_literals" (formula "12") (term "0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "mul_literals" (formula "12") (term "1,0"))
                        (rule "leq_literals" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "14"))
                        (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0"))
                        (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                        (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "inEqSimp_homoInEq0" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1,0"))
                        (rule "add_zero_right" (formula "10") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0") (ifseqformula "3"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,2,1,0,1,0"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,1,0"))
                        (rule "translateJavaMulInt" (formula "22") (term "0,0,2,2,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,2,2,0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,2,2,0,1,0"))
                        (rule "pullOutSelect" (formula "22") (term "1,2,0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                        (rule "applyEq" (formula "23") (term "1,1,0,1,0") (ifseqformula "22"))
                        (rule "simplifySelectOfAnon" (formula "22"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "25")))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                        (rule "replaceKnownSelect_taclet10000_2" (formula "22") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "22") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10000_5" (formula "22") (term "0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "22") (term "0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEqReverse" (formula "23") (term "1,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "23") (term "1,2,0,1,0") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "inEqSimp_commuteLeq" (formula "8"))
                        (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1,0"))
                        (rule "add_zero_right" (formula "9") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                        (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "22") (term "0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaMod" (formula "22") (term "0,1,0,1,0"))
                        (rule "jmod_axiom" (formula "22") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                        (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "22") (term "0,1,1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaMod" (formula "22") (term "0,1,1,0"))
                        (rule "jmod_axiom" (formula "22") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "22") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1,0"))
                        (rule "cnf_rightDist" (formula "22") (term "0"))
                        (rule "distr_forallAnd" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "commute_or" (formula "23") (term "0"))
                        (rule "cnf_rightDist" (formula "22") (term "0"))
                        (rule "distr_forallAnd" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "commute_or" (formula "23") (term "0"))
                        (rule "cnf_rightDist" (formula "22") (term "0"))
                        (rule "distr_forallAnd" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "commute_or" (formula "23") (term "0"))
                        (rule "jdiv_axiom" (formula "16") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "17"))
                        (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "14"))
                        (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                        (rule "equal_literals" (formula "16") (term "0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "16") (term "1,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "16") (term "0,0,0,1,0"))
                        (rule "div_literals" (formula "16") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "16") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                        (rule "allLeft" (formula "12") (inst "t=bucket_0"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "12") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "12") (term "0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "allLeft" (formula "21") (inst "t=num_buckets"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                        (rule "add_literals" (formula "21") (term "0,1,0"))
                        (rule "leq_literals" (formula "21") (term "1,0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "21") (term "0,0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfCreate" (formula "21"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "31")))
                        (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                        (rule "replaceKnownSelect_taclet0000_0" (formula "22") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "22") (term "0,1"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0"))
                        (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "11"))
                        (rule "qeq_literals" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                        (rule "add_literals" (formula "13") (term "0,2,0,1"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "0"))
                        (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "11"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "allLeft" (formula "23") (inst "t=bucket_0"))
                        (rule "replaceKnownSelect_taclet0010000_10" (formula "23") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "23") (term "0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "23") (term "0,1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "26"))
                        (rule "qeq_literals" (formula "23") (term "0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                        (rule "andLeft" (formula "23"))
                        (rule "inEqSimp_homoInEq1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0"))
                        (rule "add_literals" (formula "23") (term "0"))
                        (rule "leq_literals" (formula "23"))
                        (rule "closeFalse" (formula "23"))
                     )
                  )
                  (branch "Null Reference (var = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (var != null, but bucket Out of Bounds!)"
                     (rule "false_right" (formula "19") (userinteraction))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "8") (term "0") (userinteraction))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "translateJavaMulInt" (formula "8") (term "1,0,1,0,0"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                     (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "translateJavaMod" (formula "11") (term "0"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "newSym_eq" (formula "11") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                     (rule "times_zero_1" (formula "11") (term "1,1"))
                     (rule "add_zero_right" (formula "11") (term "1"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                     (rule "eqSymm" (formula "12"))
                     (rule "applyEq" (formula "17") (term "3,0,0,0,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                     (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "translateJavaAddInt" (formula "8") (term "3,0,1"))
                     (rule "translateJavaAddInt" (formula "8") (term "3,0,0,0,0"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "polySimp_addComm0" (formula "11") (term "3,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "3,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                     (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "9"))
                     (rule "greater_literals" (formula "12") (term "0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "mul_literals" (formula "12") (term "1,0"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "inEqSimp_commuteLeq" (formula "14"))
                     (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "leq_literals" (formula "13") (term "0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "leq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0"))
                     (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "commute_or" (formula "22") (term "0,0"))
                     (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "22") (term "0,1,0") (ifseqformula "3"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,2,1,0,1,0"))
                     (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,1,0"))
                     (rule "translateJavaMulInt" (formula "22") (term "0,0,2,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,2,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,2,2,0,1,0"))
                     (rule "pullOutSelect" (formula "22") (term "1,1,0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                     (rule "applyEq" (formula "23") (term "1,2,0,1,0") (ifseqformula "22"))
                     (rule "simplifySelectOfAnon" (formula "22"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "25")))
                     (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                     (rule "replaceKnownSelect_taclet10000_2" (formula "22") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet10000_3" (formula "22") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet10000_5" (formula "22") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet10000_7" (formula "22") (term "0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1,2,0,1,0") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1,1,0,1,0") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "commute_or" (formula "19") (term "0,0"))
                     (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "inEqSimp_commuteLeq" (formula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1,0"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                     (rule "andLeft" (formula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,1,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "leq_literals" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
               (branch "if x false"
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Use Case"
                (builtin "One Step Simplification" (formula "15"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "translateJavaSubInt" (formula "15") (term "2,1,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "10") (term "2,1,0,0,1,0,1"))
               (rule "translateJavaSubInt" (formula "10") (term "2,1,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "15") (term "0,2,1,0,1,1,0"))
               (rule "translateJavaMulInt" (formula "10") (term "0,2,1,0,0,1,0,1"))
               (rule "translateJavaMulInt" (formula "10") (term "0,2,1,0,1,1,0"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "polySimp_elimSub" (formula "17") (term "2,1,0,1,1,0"))
               (rule "mul_literals" (formula "17") (term "1,2,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "2,1,0,0,1,0"))
               (rule "mul_literals" (formula "12") (term "1,2,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "11") (term "2,1,0,1"))
               (rule "mul_literals" (formula "11") (term "1,2,1,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,2,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,0,1"))
               (rule "polySimp_addComm0" (formula "17") (term "2,1,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "12") (term "2,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "11") (term "2,1,0,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10"))
               (rule "inEqSimp_commuteLeq" (formula "11"))
               (rule "pullOutSelect" (formula "17") (term "0,1,0,1,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_0"))
               (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "13") (term "0,1,0,0,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "18") (term "0,1,0,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "13") (term "0,1,0,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "variableDeclarationAssign" (formula "17") (term "1"))
               (rule "variableDeclaration" (formula "17") (term "1") (newnames "b_0_1"))
               (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_0"))
               (rule "simplifySelectOfAnon" (formula "11"))
                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "14")))
               (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
               (rule "elementOfArrayRange" (formula "11") (term "0,0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "0"))
               (rule "pullOutSelect" (formula "11") (term "1,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_1"))
               (rule "simplifySelectOfStore" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "castDel" (formula "11") (term "0"))
               (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "pullOutSelect" (formula "11") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "11"))
                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")))
               (rule "castDel" (formula "11") (term "0"))
               (rule "applyEqReverse" (formula "12") (term "0,0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "commute_and" (formula "12") (term "0,0"))
               (rule "less_than_comparison_simple" (formula "17") (term "1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "methodCallEmpty" (formula "17") (term "1"))
               (rule "emptyModality" (formula "17") (term "1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "impRight" (formula "17"))
               (rule "notLeft" (formula "1"))
               (rule "methodCallEmpty" (formula "18") (term "1"))
               (rule "blockEmpty" (formula "18") (term "1"))
               (rule "assignment_write_attribute" (formula "18"))
               (branch "Normal Execution (self_25 != null)"
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "tryEmpty" (formula "18") (term "1"))
                  (rule "emptyModality" (formula "18") (term "1"))
                  (rule "andRight" (formula "18"))
                  (branch "Case 1"
                     (rule "andRight" (formula "18"))
                     (branch "Case 1"
                        (rule "andRight" (formula "18"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "allRight" (formula "18") (inst "sk=i_0") (userinteraction))
                           (rule "instAll" (formula "18") (term "0,0,0") (ifseqformula "12") (userinteraction))
                           (rule "impRight" (formula "19"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_ltRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                           (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "0,1,2,1,0,0,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "4") (term "3,0,0,0,0,0,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "17") (term "3,0,0,0,0,0,1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "22") (term "3,0,0,0,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,0"))
                           (rule "times_zero_1" (formula "16") (term "0"))
                           (rule "leq_literals" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "21") (term "0,1,2,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "11") (term "1,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "15") (term "0,1,2,1,0,0,1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "9") (term "3,0") (ifseqformula "14"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "20") (term "0"))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "1,0,0,0"))
                           (rule "wellFormedAnon" (formula "1") (term "1,0,0,0"))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "1,1,0,0,0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                           (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                           (rule "wellFormedStoreObject" (formula "1") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                           (rule "wellFormedCreate" (formula "1") (term "0,0,1,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                           (rule "pullOutSelect" (formula "1") (term "0,1,1,0") (inst "selectSK=java_lang_Object_created__1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "applyEqReverse" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "1,1,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=java_lang_Object_created__2"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "translateJavaMulInt" (formula "10") (term "1,0,1,0,0"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "21")))
                           (rule "wellFormedAnon" (formula "4") (term "1,0,0"))
                           (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0,0"))
                           (rule "replaceKnownSelect_taclet000020000_12" (formula "4") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_14" (formula "4") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "4") (term "1,1,0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "4") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "4") (term "0,0,1,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "wellFormedStoreObject" (formula "4") (term "1,0"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                           (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                           (rule "replaceKnownSelect_taclet000020000_10" (formula "4") (term "0,1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_11" (formula "4") (term "0,1,1,0"))
                           (rule "replace_known_left" (formula "4") (term "1,1,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "wellFormedStoreObject" (formula "4") (term "1,0"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                           (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0"))
                           (rule "wellFormedCreate" (formula "4") (term "0,1,0"))
                           (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,1,0"))
                           (rule "replaceKnownSelect_taclet000020000_15" (formula "4") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_16" (formula "4") (term "0,1,0"))
                           (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "24") (term "0") (ifseqformula "5"))
                           (rule "translateJavaMulInt" (formula "24") (term "0,2,1,0"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,2,2,0"))
                           (rule "translateJavaMulInt" (formula "24") (term "0,0,2,2,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,2,2,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,2,2,0"))
                           (rule "dismissNonSelectedField" (formula "24") (term "1,1,0"))
                           (rule "dismissNonSelectedField" (formula "24") (term "1,2,0"))
                           (rule "dismissNonSelectedField" (formula "24") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                           (rule "pullOutSelect" (formula "24") (term "1,0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                           (rule "inEqSimp_subsumption4" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                           (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption6" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                           (rule "mul_literals" (formula "1") (term "1,1,0,1,0,0,0"))
                           (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "25") (term "2,0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                           (rule "inEqSimp_subsumption4" (formula "1") (term "1,0,0,0") (ifseqformula "5"))
                           (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption6" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                           (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfCreate" (formula "2"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                           (rule "pullOutSelect" (formula "3") (term "0,0,0,1,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "replaceKnownSelect_taclet20000_2" (formula "2") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_3" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "2") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "2") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                           (rule "replaceKnownSelect_taclet000020000_15" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_16" (formula "1") (term "0,0,1,1,0,0"))
                           (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "11")))
                           (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                           (rule "replaceKnownSelect_taclet000020000_15" (formula "3") (term "0,0,1,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_16" (formula "3") (term "0,0,1,1,0,0"))
                           (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "11")))
                           (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_or_2" (formula "18") (term "0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "translateJavaMod" (formula "13") (term "0"))
                           (rule "jmod_axiom" (formula "13") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "newSym_eq" (formula "13") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                           (rule "times_zero_1" (formula "13") (term "1,1"))
                           (rule "add_zero_right" (formula "13") (term "1"))
                           (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "19") (term "3,0,0,0,1,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "25") (term "3,0,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "4") (term "3,0,0,0") (ifseqformula "14"))
                           (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "translateJavaAddInt" (formula "10") (term "3,0,0,0,0"))
                           (rule "translateJavaAddInt" (formula "10") (term "3,0,1"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "polySimp_addComm0" (formula "13") (term "3,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "3,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "12"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                           (rule "leq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "10"))
                           (rule "mul_literals" (formula "13") (term "1,1,0"))
                           (rule "greater_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "leq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "14") (term "0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "28") (term "0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                           (rule "wellFormedAnon" (formula "3") (term "1,0,0"))
                           (rule "wellFormedStorePrimitive" (formula "3") (term "0,1,0,0"))
                           (rule "replace_known_left" (formula "3") (term "1,1,0,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "3") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "3") (term "0,0,1,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                           (rule "wellFormedStoreObject" (formula "3") (term "1,0"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                           (rule "wellFormedStorePrimitive" (formula "3") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1,1,0"))
                           (rule "replaceKnownSelect_taclet000020000_10" (formula "3") (term "0,1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_11" (formula "3") (term "0,1,1,0"))
                           (rule "replace_known_left" (formula "3") (term "1,1,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "wellFormedStoreObject" (formula "3") (term "1,0"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                           (rule "wellFormedStorePrimitive" (formula "3") (term "0,1,0"))
                           (rule "wellFormedCreate" (formula "3") (term "0,1,0"))
                           (rule "replace_known_left" (formula "3") (term "0,1,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1,0"))
                           (rule "replaceKnownSelect_taclet000020000_15" (formula "3") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_16" (formula "3") (term "0,1,0"))
                           (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_3"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "replaceKnownSelect_taclet000020000_13" (formula "3") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_14" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "3") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "3") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                           (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "1,1,0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "12") (term "0") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "translateJavaSubInt" (formula "12") (term "1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0"))
                           (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,2,1,1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1,0"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                           (rule "leq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "23") (term "0,1,0,0") (ifseqformula "4"))
                           (rule "translateJavaMulInt" (formula "23") (term "0,2,1,0,1,0,0"))
                           (rule "translateJavaMulInt" (formula "23") (term "0,0,2,2,0,1,0,0"))
                           (rule "translateJavaAddInt" (formula "23") (term "0,2,2,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,2,2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,2,2,0,1,0,0"))
                           (rule "pullOutSelect" (formula "23") (term "1,1,0,1,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_2"))
                           (rule "applyEq" (formula "24") (term "1,2,0,1,0,0") (ifseqformula "23"))
                           (rule "simplifySelectOfAnon" (formula "23"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")))
                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                           (rule "replaceKnownSelect_taclet20000_2" (formula "23") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_3" (formula "23") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet20000_7" (formula "23") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "23") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "elementOfArrayRange" (formula "23") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEqReverse" (formula "24") (term "1,2,0,1,0,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "1,1,0,1,0,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "29") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "translateJavaMod" (formula "29") (term "0,1,0"))
                           (rule "jmod_axiom" (formula "29") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "29") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                           (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "3") (term "0") (ifseqformula "4"))
                           (rule "replaceKnownSelect_taclet000020000_27" (formula "3") (term "1,2,0"))
                           (rule "replaceKnownSelect_taclet000020000_27" (formula "3") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_28" (formula "3") (term "1,2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_28" (formula "3") (term "1,1,0"))
                           (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0"))
                           (rule "translateJavaAddInt" (formula "3") (term "0,2,2,0"))
                           (rule "translateJavaMulInt" (formula "3") (term "0,0,2,2,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,2,2,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,2,2,0"))
                           (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet000020000_15" (formula "3") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_16" (formula "3") (term "0,0,1,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_subsumption4" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (rule "greater_literals" (formula "3") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,1,0,0"))
                           (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_subsumption6" (formula "3") (term "0,0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
                           (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "leq_literals" (formula "3") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_5"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                           (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet000020000_15" (formula "3") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020000_16" (formula "3") (term "0,0,1,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                           (rule "inEqSimp_subsumption6" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (rule "greater_literals" (formula "3") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_subsumption4" (formula "3") (term "0,0") (ifseqformula "2"))
                           (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,0,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "3") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "23") (term "0,1,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "29") (term "0,1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "translateJavaMod" (formula "29") (term "0,1"))
                           (rule "jmod_axiom" (formula "29") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                           (rule "polySimp_sepNegMonomial" (formula "29") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                           (rule "jdiv_axiom" (formula "17") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                           (rule "inEqSimp_subsumption6" (formula "17") (term "0,0") (ifseqformula "15"))
                           (rule "greater_literals" (formula "17") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "17") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "17") (term "0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "17") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "26") (term "0,1,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "translateJavaMod" (formula "26") (term "0,1,0,1,0,0"))
                           (rule "jmod_axiom" (formula "26") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "26") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0,0"))
                           (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "translateJavaMod" (formula "6") (term "0"))
                           (rule "jmod_axiom" (formula "6") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "newSym_eq" (formula "6") (inst "l=l_1") (inst "newSymDef=mul(int::select(anon_heap_LOOP<<anonHeapFunction>>,
                buffer,
                arr(add(Z(1(#)), mul(i_0, Z(2(#)))))),
    Z(0(#)))"))
                           (rule "times_zero_1" (formula "6") (term "1,1"))
                           (rule "add_zero_right" (formula "6") (term "1"))
                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                           (rule "eqSymm" (formula "7"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                           (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "5") (term "0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "translateJavaMod" (formula "5") (term "0"))
                           (rule "jmod_axiom" (formula "5") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "close" (formula "34") (ifseqformula "5"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "18") (inst "i=i") (ifseqformula "1") (userinteraction))
                           (rule "andRight" (formula "18"))
                           (branch "Case 1"
                              (rule "andRight" (formula "18"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "18"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "18"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_0"))
                                    (rule "simplifySelectOfAnon" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "16")))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet20000_7" (formula "2") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "2") (term "0,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                    (rule "ifEqualsNull" (formula "2"))
                                    (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "elementOfArrayRange" (formula "16") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "false_right" (formula "16"))
                                    (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,0,0,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "2") (term "3,0,0,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "9") (term "3,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,0"))
                                    (rule "times_zero_1" (formula "15") (term "0"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "14") (term "0,1,2,1,0,0,1,0") (ifseqformula "13"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "19") (ifseqformula "2"))
                                 )
                                 (branch "Case 2"
                                    (rule "notRight" (formula "18"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                    (rule "simplifySelectOfAnon" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "16")))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "replaceKnownSelect_taclet20000_2" (formula "2") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20000_3" (formula "2") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet20000_7" (formula "2") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "2") (term "0,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                    (rule "ifEqualsNull" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "elementOfArrayRange" (formula "2") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "dismissNonSelectedField" (formula "18") (term "3,0"))
                                 (rule "replaceKnownSelect_taclet20000_4" (formula "18") (term "3,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_9" (formula "18") (term "3,0"))
                                 (rule "dismissNonSelectedField" (formula "18") (term "4,0"))
                                 (rule "dismissNonSelectedField" (formula "18") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "18") (term "2,0"))
                                 (rule "inEqSimp_ltRight" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                 (rule "pullOutSelect" (formula "18") (term "4,0") (inst "selectSK=de_wiesler_BucketPointers_first_empty_position_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "19") (term "4,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "18") (term "1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet20000_2" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_3" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "18") (term "2,0") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "19") (term "3,0,0,0,0,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "7") (term "3,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "19") (term "3,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "14") (term "0,1,2,1,0,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "19") (term "0,1,2,1,0,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "12"))
                                 (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                 (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "translateJavaMulInt" (formula "6") (term "1,0,1,0,0"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "notLeft" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "16")))
                                 (rule "translateJavaMulInt" (formula "21") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "3,0,1,0"))
                                 (rule "pullOutSelect" (formula "21") (term "3,0,1,0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "3,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "translateJavaMod" (formula "9") (term "0"))
                                 (rule "jmod_axiom" (formula "9") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "newSym_eq" (formula "9") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                                 (rule "times_zero_1" (formula "9") (term "1,1"))
                                 (rule "add_zero_right" (formula "9") (term "1"))
                                 (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "22") (term "3,0,0,0,0,1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "22") (term "3,0,0,0,0,1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "22") (term "3,0,0,0,0,0,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "22") (term "3,0,0,0,0,1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "16") (term "3,0,0,0,1,0") (ifseqformula "10"))
                                 (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "translateJavaAddInt" (formula "6") (term "3,0,1"))
                                 (rule "translateJavaAddInt" (formula "6") (term "3,0,0,0,0"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "polySimp_addComm0" (formula "9") (term "3,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "3,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0"))
                                 (rule "greater_literals" (formula "10") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "commute_or" (formula "18") (term "0,0"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "inEqSimp_commuteLeq" (formula "12"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "11") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "25") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0"))
                                 (rule "replace_known_left" (formula "25") (term "1,1,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "25") (term "1,0,0") (ifseqformula "7"))
                                 (rule "greater_literals" (formula "25") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "mul_literals" (formula "25") (term "1,0,1,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "9") (term "0") (inst "i=i"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "translateJavaAddInt" (formula "9") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                 (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "commute_or_2" (formula "20") (term "0"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "26") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "1,1,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_subsumption6" (formula "26") (term "1,0") (ifseqformula "12"))
                                 (rule "greater_literals" (formula "26") (term "0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "mul_literals" (formula "26") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "26") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "translateJavaAddInt" (formula "26") (term "3,0,0,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "26") (term "3,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "3,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "3,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0,0"))
                                 (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "pullOutSelect" (formula "26") (term "0,1,0,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet0000_0" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10100020000_21" (formula "1") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10100020000_22" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "27") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "20") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "translateJavaMulInt" (formula "20") (term "0,2,1,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "20") (term "0,2,2,0,1,0,0"))
                                 (rule "translateJavaMulInt" (formula "20") (term "0,0,2,2,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,2,2,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,2,2,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "20") (term "1,1,0,1,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_2"))
                                 (rule "applyEq" (formula "21") (term "1,2,0,1,0,0") (ifseqformula "20"))
                                 (rule "simplifySelectOfAnon" (formula "20"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet20000_2" (formula "20") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_3" (formula "20") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "20") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet20000_7" (formula "20") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "20") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "elementOfArrayRange" (formula "20") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "applyEqReverse" (formula "21") (term "1,2,0,1,0,0") (ifseqformula "20"))
                                 (rule "applyEqReverse" (formula "21") (term "1,1,0,1,0,0") (ifseqformula "20"))
                                 (rule "hideAuxiliaryEq" (formula "20"))
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "26") (term "0,1,0") (inst "i=i"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "translateJavaSubInt" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "26") (term "0,2,1,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,2,1,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "20") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "26") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "translateJavaMod" (formula "26") (term "0,1"))
                                 (rule "jmod_axiom" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                                 (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "14"))
                                 (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1"))
                                 (rule "add_literals" (formula "26") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "jdiv_axiom" (formula "14") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "15"))
                                 (rule "inEqSimp_subsumption6" (formula "14") (term "0,0") (ifseqformula "12"))
                                 (rule "greater_literals" (formula "14") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "14") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "14") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "polySimp_homoEq" (formula "14"))
                                 (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "14") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "1,0"))
                                 (rule "times_zero_1" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "20") (term "0,1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaMod" (formula "20") (term "0,1,1,0,0"))
                                 (rule "jmod_axiom" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "26") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "26") (term "1,0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "20") (term "0,1,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaMod" (formula "20") (term "0,1,0,1,0,0"))
                                 (rule "jmod_axiom" (formula "20") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "20") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0,0"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "26") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "1,1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                 (rule "times_zero_2" (formula "26") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "26") (term "1,0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "26") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0"))
                                 (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "allRight" (formula "26") (inst "sk=i_0"))
                                 (rule "orRight" (formula "26"))
                                 (rule "orRight" (formula "26"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_leqRight" (formula "28"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                                 (rule "replaceKnownSelect_taclet10100020000_21" (formula "3") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10100020000_22" (formula "3") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10100020000_21" (formula "3") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10100020000_22" (formula "3") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "allLeft" (formula "13") (inst "t=i_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "3"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0"))
                                 (rule "add_literals" (formula "13") (term "0"))
                                 (rule "leq_literals" (formula "13"))
                                 (rule "closeFalse" (formula "13"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "18") (inst "sk=i_0") (userinteraction))
                              (rule "instAll" (formula "18") (term "2,0,1") (ifseqformula "12") (userinteraction))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "impRight" (formula "19"))
                              (rule "andLeft" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "2") (term "1"))
                              (rule "replaceKnownSelect_taclet20000_4" (formula "2") (term "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_9" (formula "2") (term "1"))
                              (rule "inEqSimp_ltRight" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "16"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "1,0"))
                              (rule "times_zero_1" (formula "16") (term "0"))
                              (rule "leq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "10") (term "3,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "4") (term "3,0,0,0,0,0,1") (ifseqformula "15"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "11") (term "1,0,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "3") (term "0,1,2,1,0,0,1") (ifseqformula "14"))
                              (rule "applyEq" (formula "20") (term "0,1,2,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "20") (term "3,0,0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "15") (term "0,1,2,1,0,0,1,0") (ifseqformula "14"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "translateJavaMulInt" (formula "10") (term "1,0,1,0,0"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "24") (term "0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "1,0,0,0"))
                              (rule "wellFormedAnon" (formula "1") (term "1,0,0,0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "1,1,0,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                              (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                              (rule "wellFormedStoreObject" (formula "1") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                              (rule "wellFormedCreate" (formula "1") (term "0,0,1,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "pullOutSelect" (formula "1") (term "0,1,1,0") (inst "selectSK=java_lang_Object_created__1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "applyEqReverse" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=java_lang_Object_created__2"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_2"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "21")))
                              (rule "wellFormedAnon" (formula "4") (term "1,0,0"))
                              (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0,0"))
                              (rule "replaceKnownSelect_taclet1100020000_14" (formula "4") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_16" (formula "4") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "4") (term "1,1,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "4") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "4") (term "0,0,1,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "wellFormedStoreObject" (formula "4") (term "1,0"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                              (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_10" (formula "4") (term "0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_11" (formula "4") (term "0,1,1,0"))
                              (rule "replace_known_left" (formula "4") (term "1,1,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "wellFormedStoreObject" (formula "4") (term "1,0"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                              (rule "wellFormedStorePrimitive" (formula "4") (term "0,1,0"))
                              (rule "wellFormedCreate" (formula "4") (term "0,1,0"))
                              (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_12" (formula "4") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_13" (formula "4") (term "0,1,0"))
                              (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "translateJavaMod" (formula "13") (term "0"))
                              (rule "jmod_axiom" (formula "13") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "newSym_eq" (formula "13") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                              (rule "times_zero_1" (formula "13") (term "1,1"))
                              (rule "add_zero_right" (formula "13") (term "1"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
                              (rule "eqSymm" (formula "14"))
                              (rule "applyEq" (formula "19") (term "3,0,0,0,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "25") (term "3,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "4") (term "3,0,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "14"))
                              (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "translateJavaAddInt" (formula "10") (term "3,0,1"))
                              (rule "translateJavaAddInt" (formula "10") (term "3,0,0,0,0"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "polySimp_addComm0" (formula "13") (term "3,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "3,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "12"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                              (rule "leq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "10"))
                              (rule "mul_literals" (formula "13") (term "1,1,0"))
                              (rule "greater_literals" (formula "13") (term "0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "commute_or" (formula "18") (term "0,0"))
                              (rule "commute_or" (formula "21") (term "0,0"))
                              (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "27") (term "0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "1,0,0,0"))
                              (rule "wellFormedAnon" (formula "1") (term "1,0,0,0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "1,1,0,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                              (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_10" (formula "1") (term "0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_11" (formula "1") (term "0,1,1,0"))
                              (rule "replace_known_left" (formula "1") (term "1,1,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "wellFormedStoreObject" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                              (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
                              (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_12" (formula "1") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_13" (formula "1") (term "0,1,0"))
                              (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=de_wiesler_BucketPointers_num_buckets_3"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "replaceKnownSelect_taclet1100020000_15" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_16" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "1") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "1") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "Contract_axiom_for_isValidBucketPointerAt_in_BucketPointers" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                              (rule "wellFormedAnon" (formula "3") (term "1,0,0"))
                              (rule "wellFormedStorePrimitive" (formula "3") (term "0,1,0,0"))
                              (rule "replaceKnownSelect_taclet1100020000_17" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_18" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "3") (term "1,1,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "3") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "3") (term "0,0,1,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "wellFormedStoreObject" (formula "3") (term "1,0"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                              (rule "wellFormedStorePrimitive" (formula "3") (term "0,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_10" (formula "3") (term "0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_11" (formula "3") (term "0,1,1,0"))
                              (rule "replace_known_left" (formula "3") (term "1,1,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "wellFormedStoreObject" (formula "3") (term "1,0"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                              (rule "wellFormedStorePrimitive" (formula "3") (term "0,1,0"))
                              (rule "wellFormedCreate" (formula "3") (term "0,1,0"))
                              (rule "replace_known_left" (formula "3") (term "0,1,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_12" (formula "3") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_13" (formula "3") (term "0,1,0"))
                              (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "14") (term "0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "leq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "12") (term "0") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0"))
                              (rule "translateJavaSubInt" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,2,1,1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,1,1,0,0"))
                              (rule "add_zero_left" (formula "12") (term "1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                              (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1,0"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "29") (term "0") (ifseqformula "4"))
                              (rule "translateJavaAddInt" (formula "29") (term "0,2,2,0"))
                              (rule "translateJavaMulInt" (formula "29") (term "0,2,1,0"))
                              (rule "translateJavaMulInt" (formula "29") (term "0,0,2,2,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,2,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,2,2,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,2,2,0"))
                              (rule "dismissNonSelectedField" (formula "29") (term "1,2,0"))
                              (rule "dismissNonSelectedField" (formula "29") (term "1,1,0"))
                              (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "29") (term "1,0"))
                              (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                              (rule "inEqSimp_subsumption6" (formula "1") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "mul_literals" (formula "1") (term "1,1,0,1,0,0,0,0"))
                              (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption4" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
                              (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                              (rule "inEqSimp_subsumption6" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                              (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption4" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                              (rule "greater_literals" (formula "1") (term "0,0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                              (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "replaceKnownSelect_taclet20000_2" (formula "2") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_3" (formula "2") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet20000_7" (formula "2") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20000_8" (formula "2") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                              (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "23") (term "0,1,0") (ifseqformula "4"))
                              (rule "replaceKnownSelect_taclet1100020000_21" (formula "23") (term "1,1,0,1,0"))
                              (rule "replaceKnownSelect_taclet1100020000_21" (formula "23") (term "1,2,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_22" (formula "23") (term "1,1,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_22" (formula "23") (term "1,2,0,1,0"))
                              (rule "translateJavaAddInt" (formula "23") (term "0,2,2,0,1,0"))
                              (rule "translateJavaMulInt" (formula "23") (term "0,2,1,0,1,0"))
                              (rule "translateJavaMulInt" (formula "23") (term "0,0,2,2,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,2,2,0,1,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,2,2,0,1,0"))
                              (rule "Definition_axiom_for_isValidBucketPointerAt_in_de_wiesler_BucketPointers" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "replaceKnownSelect_taclet1100020000_21" (formula "3") (term "1,2,0"))
                              (rule "replaceKnownSelect_taclet1100020000_21" (formula "3") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_22" (formula "3") (term "1,2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_22" (formula "3") (term "1,1,0"))
                              (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0"))
                              (rule "translateJavaAddInt" (formula "3") (term "0,2,2,0"))
                              (rule "translateJavaMulInt" (formula "3") (term "0,0,2,2,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,2,2,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,2,2,0"))
                              (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet1100020000_12" (formula "3") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_13" (formula "3") (term "0,0,1,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_subsumption6" (formula "3") (term "0,0,0") (ifseqformula "1"))
                              (rule "greater_literals" (formula "3") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_subsumption4" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet1100020000_12" (formula "3") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100020000_13" (formula "3") (term "0,0,1,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                              (rule "inEqSimp_subsumption4" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (rule "greater_literals" (formula "3") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "0,0,1,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_subsumption6" (formula "3") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
                              (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "leq_literals" (formula "3") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1,0"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "jdiv_axiom" (formula "17") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "17"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                              (rule "inEqSimp_subsumption6" (formula "17") (term "0,0") (ifseqformula "15"))
                              (rule "greater_literals" (formula "17") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "leq_literals" (formula "17") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "17") (term "0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "0,0,0"))
                              (rule "div_literals" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                              (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                              (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "24") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                              (rule "Definition_axiom_for_isValidBucketPointer_in_de_wiesler_BucketPointers" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "27") (term "0,1,0,1,0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "translateJavaMod" (formula "27") (term "0,1,0,1,0"))
                              (rule "jmod_axiom" (formula "27") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "27") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,1,0"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "translateJavaMod" (formula "6") (term "0"))
                              (rule "jmod_axiom" (formula "6") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "newSym_eq" (formula "6") (inst "l=l_1") (inst "newSymDef=mul(int::select(anon_heap_LOOP<<anonHeapFunction>>,
                buffer,
                arr(add(Z(1(#)), mul(i_0, Z(2(#)))))),
    Z(0(#)))"))
                              (rule "times_zero_1" (formula "6") (term "1,1"))
                              (rule "add_zero_right" (formula "6") (term "1"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "7"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "7"))
                              (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "leq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "translateJavaMod" (formula "5") (term "0"))
                              (rule "jmod_axiom" (formula "5") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "newSym_eq" (formula "5") (inst "l=l_2") (inst "newSymDef=mul(int::select(anon_heap_LOOP<<anonHeapFunction>>,
                buffer,
                arr(mul(i_0, Z(2(#))))),
    Z(0(#)))"))
                              (rule "times_zero_1" (formula "5") (term "1,1"))
                              (rule "add_zero_right" (formula "5") (term "1"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "6"))
                              (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                              (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "29") (term "0,1,1,0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "translateJavaMod" (formula "29") (term "0,1,1,0"))
                              (rule "jmod_axiom" (formula "29") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "29") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,1,0"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "35") (term "0,1"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "translateJavaMod" (formula "35") (term "0,1"))
                              (rule "jmod_axiom" (formula "35") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                              (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "7"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1"))
                              (rule "add_literals" (formula "35") (term "1,0,1"))
                              (rule "times_zero_1" (formula "35") (term "0,1"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "35") (term "0"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "translateJavaMod" (formula "35") (term "0"))
                              (rule "jmod_axiom" (formula "35") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                              (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "5"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0"))
                              (rule "add_literals" (formula "35") (term "1,0"))
                              (rule "times_zero_1" (formula "35") (term "0"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "closeTrue" (formula "35"))
                           )
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "allRight" (formula "18") (inst "sk=f_0"))
                     (rule "allRight" (formula "18") (inst "sk=o_0"))
                     (rule "orRight" (formula "18"))
                     (rule "orRight" (formula "18"))
                     (rule "eqSymm" (formula "20"))
                     (rule "eqSymm" (formula "18") (term "0,0,0,1"))
                     (rule "inEqSimp_ltRight" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                     (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "21"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
                     (rule "applyEq" (formula "20") (term "0,1,1,1,0,1") (ifseqformula "13"))
                     (rule "applyEq" (formula "8") (term "3,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,0"))
                     (rule "times_zero_1" (formula "2") (term "0"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "14") (term "0,1,2,1,0,0,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "0,1,2,1,0,2,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,0"))
                     (rule "times_zero_1" (formula "13") (term "0"))
                     (rule "leq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEq" (formula "1") (term "3,0,0,0,0,2,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "12"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_7"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "commute_and" (formula "9") (term "0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_and" (formula "8") (term "0,0"))
                     (rule "commute_and" (formula "7") (term "0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_or" (formula "17") (term "0,0"))
                     (rule "commute_or" (formula "21") (term "0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "o_0 = b_1 TRUE"
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                        (rule "sortsDisjointModuloNull" (formula "25") (term "0"))
                        (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
                        (rule "false_right" (formula "25"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "1"))
                        (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "notRight" (formula "25"))
                        (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "23") (ifseqformula "1"))
                     )
                     (branch "o_0 = b_1 FALSE"
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "commute_and" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (self_25 = null)"
                  (rule "false_right" (formula "19"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (ascending_geq_first)"
             (builtin "One Step Simplification" (formula "7"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (ascending_geq_first)"
             (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,1"))
            (rule "wellFormedStoreObject" (formula "11") (term "0,1"))
             (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0,0,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,1,0,1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "wellFormedStoreObject" (formula "11") (term "0,1"))
             (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
            (rule "wellFormedStorePrimitive" (formula "11") (term "0,0,1"))
            (rule "wellFormedCreate" (formula "11") (term "0,0,1"))
            (rule "replace_known_left" (formula "11") (term "0,0,1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,0,1"))
            (rule "pullOutSelect" (formula "11") (term "0,1,1") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "applyEqReverse" (formula "12") (term "0,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "11") (term "1,1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "pullOutSelect" (formula "11") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
            (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "Definition_axiom_for_isBaseInvariantFullfilled_in_de_wiesler_BucketPointers" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "translateJavaMulInt" (formula "6") (term "1,0,1,0,0"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "15") (term "0,0"))
             (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
            (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
            (rule "times_zero_2" (formula "15") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "15") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0"))
            (rule "Definition_axiom_for_isAlignedTo_in_de_wiesler_Functions" (formula "9") (term "0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaMod" (formula "9") (term "0"))
            (rule "jmod_axiom" (formula "9") (term "0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "newSym_eq" (formula "9") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
            (rule "times_zero_1" (formula "9") (term "1,1"))
            (rule "add_zero_right" (formula "9") (term "1"))
            (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
            (rule "eqSymm" (formula "10"))
            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
            (rule "applyEq" (formula "16") (term "3,0,0,1") (ifseqformula "10"))
            (rule "applyEq" (formula "16") (term "3,0,0,0,0,0") (ifseqformula "10"))
            (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "10"))
            (rule "applyEq" (formula "16") (term "3,0,0,1,0,0") (ifseqformula "10"))
            (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "translateJavaAddInt" (formula "6") (term "3,0,0,0,0"))
            (rule "translateJavaAddInt" (formula "6") (term "3,0,1"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "polySimp_addComm0" (formula "9") (term "3,0"))
            (rule "polySimp_addComm0" (formula "6") (term "3,0"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "19") (term "1,0") (ifseqformula "7"))
            (rule "leq_literals" (formula "19") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "7"))
            (rule "mul_literals" (formula "10") (term "1,1,0"))
            (rule "greater_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "leq_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "leq_literals" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "9") (term "0") (inst "i=i"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaAddInt" (formula "9") (term "0,2,1,1,0"))
            (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "1,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "19")))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "inEqSimp_homoInEq0" (formula "8"))
            (rule "times_zero_2" (formula "8") (term "1,0"))
            (rule "add_zero_right" (formula "8") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "mul_literals" (formula "8") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
            (rule "leq_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "21") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,1,0"))
            (rule "mul_literals" (formula "21") (term "1,0,1,0"))
            (rule "inEqSimp_subsumption1" (formula "21") (term "0,1,0") (ifseqformula "8"))
            (rule "leq_literals" (formula "21") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_homoInEq0" (formula "7"))
            (rule "times_zero_2" (formula "7") (term "1,0"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "21") (term "0,1") (inst "i=i"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0,1"))
            (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0,1"))
            (rule "add_literals" (formula "21") (term "0,1,1,0,0,1"))
            (rule "add_zero_left" (formula "21") (term "1,1,0,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "21") (term "0,1"))
            (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
            (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "21") (term "0,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "leq_literals" (formula "21") (term "0,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0"))
            (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "allRight" (formula "21") (inst "sk=i_0"))
            (rule "orRight" (formula "21"))
            (rule "orRight" (formula "21"))
            (rule "inEqSimp_geqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_geqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfCreate" (formula "3"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfCreate" (formula "3"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "jdiv_axiom" (formula "17") (term "0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
            (rule "eqSymm" (formula "17"))
            (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
            (rule "inEqSimp_subsumption6" (formula "17") (term "0,0") (ifseqformula "15"))
            (rule "greater_literals" (formula "17") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
            (rule "leq_literals" (formula "17") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
            (rule "equal_literals" (formula "17") (term "0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "polySimp_homoEq" (formula "17"))
            (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "17") (term "0,0,0,1,0"))
            (rule "div_literals" (formula "17") (term "0,0,1,0"))
            (rule "add_zero_left" (formula "17") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "1,0"))
            (rule "times_zero_1" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "allLeft" (formula "13") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "13") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0"))
            (rule "leq_literals" (formula "13") (term "0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "3"))
            (rule "andLeft" (formula "13"))
            (rule "inEqSimp_homoInEq1" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "1,1,0"))
            (rule "times_zero_1" (formula "13") (term "1,0"))
            (rule "add_zero_right" (formula "13") (term "0"))
            (rule "leq_literals" (formula "13"))
            (rule "closeFalse" (formula "13"))
         )
      )
      (branch "Null Reference (self_26 = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (self_26 = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (self_26 = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
   (rule "closeFalse" (formula "1"))
)
)
}
