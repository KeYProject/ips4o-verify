\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Mar 31 23:00:30 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Thu Mar 31 23:00:30 CEST 2022
contract=de.wiesler.BucketPointers[de.wiesler.BucketPointers\\:\\:writtenElementsCountElementSplitBucket([I,int,int,[I,int)].JML model_behavior operation contract.0
name=de.wiesler.BucketPointers[de.wiesler.BucketPointers\\:\\:writtenElementsCountElementSplitBucket([I,int,int,[I,int)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "802059dea3"))

(autoModeTime "18439")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre_0,heapBefore,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "2"))
 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")) (userinteraction))
(rule "allRight" (formula "18") (inst "sk=element_0") (userinteraction))
(rule "translateJavaAddInt" (formula "18") (term "1") (userinteraction))
(rule "translateJavaCastInt" (formula "18") (term "0,1") (userinteraction))
(rule "Definition_axiom_for_writtenElementsCountElement_in_de_wiesler_BucketPointers" (formula "18") (term "0") (inst "b=b") (userinteraction))
(rule "translateJavaCastInt" (formula "18") (term "0") (userinteraction))
(rule "bsum_equal_except_one_index" (formula "18") (inst "index=split_bucket<<origin(\"User_Interaction @ node 26 (bsum_equal_except_one_index)\",\"[]\")>>") (userinteraction))
(branch "Precondition"
   (rule "andRight" (formula "18"))
   (branch "Case 1"
      (rule "andRight" (formula "18"))
      (branch "Case 1"
         (rule "close" (formula "18") (ifseqformula "10"))
      )
      (branch
         (rule "close" (formula "18") (ifseqformula "11"))
      )
   )
   (branch
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "6"))
      (rule "translateJavaAddInt" (formula "16") (term "2,1,2,0,1"))
      (rule "translateJavaSubInt" (formula "16") (term "3,1,2,0,1"))
      (rule "translateJavaAddInt" (formula "15") (term "2,1,1,1,0"))
      (rule "translateJavaSubInt" (formula "15") (term "3,1,1,1,0"))
      (rule "translateJavaSubInt" (formula "16") (term "0,0,0,1,1"))
      (rule "translateJavaSubInt" (formula "16") (term "2,2,1,1"))
      (rule "translateJavaAddInt" (formula "16") (term "3,2,1,1"))
      (rule "translateJavaSubInt" (formula "10") (term "0"))
      (rule "translateJavaAddInt" (formula "10") (term "1"))
      (rule "translateJavaSubInt" (formula "9") (term "1"))
      (rule "translateJavaAddInt" (formula "9") (term "0"))
      (rule "translateJavaAddInt" (formula "16") (term "0,3,1,2,0,1"))
      (rule "translateJavaAddInt" (formula "15") (term "0,3,1,1,1,0"))
      (rule "translateJavaAddInt" (formula "16") (term "0,2,2,1,1"))
      (rule "translateJavaAddInt" (formula "10") (term "0,0"))
      (rule "translateJavaAddInt" (formula "9") (term "0,1"))
      (rule "allRight" (formula "15") (inst "sk=b_0"))
      (rule "impRight" (formula "15"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "2"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "18") (term "0,1"))
      (rule "eqSymm" (formula "14"))
      (rule "eqSymm" (formula "18"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")))
      (rule "closeTrue" (formula "18"))
   )
)
(branch "Usage"
   (rule "cut_direct" (formula "18") (term "0,0") (userinteraction))
   (branch "CUT: ( javaSubInt(end, begin) < self.nextWriteOf(split_bucket) & 256 <= self.writtenCountOfBucket(split_bucket))<<SC>> TRUE"
       (builtin "One Step Simplification" (formula "19") (userinteraction))
      (rule "Definition_axiom_for_writtenElementsOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "19") (term "0,1") (userinteraction))
      (rule "cut_direct" (formula "19") (term "0,0,1") (userinteraction))
      (branch "CUT: javaSubInt(end, begin) < self.nextWriteOf(split_bucket) & de.wiesler.Buffers.BUFFER_SIZE <= self.writtenCountOfBucket(split_bucket) TRUE"
          (builtin "One Step Simplification" (formula "20") (userinteraction))
         (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "20") (term "1,1") (inst "i=i") (userinteraction))
         (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "20") (term "0,0,1") (inst "i=i") (userinteraction))
         (rule "translateJavaAddInt" (formula "20") (term "0,1") (userinteraction))
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "10"))
          (builtin "One Step Simplification" (formula "8"))
          (builtin "One Step Simplification" (formula "7"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
         (rule "true_left" (formula "7"))
         (rule "translateJavaSubInt" (formula "16") (term "1,1,1"))
         (rule "translateJavaAddInt" (formula "16") (term "0,0,0,1"))
         (rule "translateJavaSubInt" (formula "16") (term "1,0,0,1"))
         (rule "translateJavaAddInt" (formula "17") (term "2,1,2,0,1"))
         (rule "translateJavaAddInt" (formula "16") (term "0,1,1"))
         (rule "translateJavaSubInt" (formula "17") (term "3,1,2,0,1"))
         (rule "translateJavaSubInt" (formula "17") (term "0,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "1") (term "0,0"))
         (rule "translateJavaSubInt" (formula "17") (term "2,2,1,1"))
         (rule "translateJavaAddInt" (formula "17") (term "3,2,1,1"))
         (rule "translateJavaSubInt" (formula "11") (term "0"))
         (rule "translateJavaAddInt" (formula "11") (term "1"))
         (rule "translateJavaAddInt" (formula "10") (term "0"))
         (rule "translateJavaSubInt" (formula "10") (term "1"))
         (rule "translateJavaAddInt" (formula "16") (term "0,1,1,1"))
         (rule "translateJavaAddInt" (formula "16") (term "0,1,0,0,1"))
         (rule "translateJavaAddInt" (formula "17") (term "0,3,1,2,0,1"))
         (rule "translateJavaAddInt" (formula "17") (term "0,2,2,1,1"))
         (rule "translateJavaAddInt" (formula "11") (term "0,0"))
         (rule "translateJavaAddInt" (formula "10") (term "0,1"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "17"))
         (rule "replace_known_left" (formula "18") (term "0,0,1,1") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "2")))
         (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "15"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "polySimp_elimSub" (formula "12") (term "0"))
         (rule "mul_literals" (formula "12") (term "1,0"))
         (rule "polySimp_elimSub" (formula "11") (term "1"))
         (rule "mul_literals" (formula "11") (term "1,1"))
         (rule "polySimp_elimSub" (formula "1") (term "0"))
         (rule "polySimp_elimSub" (formula "17") (term "0"))
         (rule "polySimp_elimSub" (formula "18") (term "3,1,2,0,1"))
         (rule "mul_literals" (formula "18") (term "1,3,1,2,0,1"))
         (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
         (rule "polySimp_homoEq" (formula "18"))
         (rule "polySimp_homoEq" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "polySimp_addComm1" (formula "11") (term "1"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "18") (term "0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "17") (term "1,0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "18") (term "3,1,2,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,1,0"))
         (rule "add_literals" (formula "17") (term "1,1,1,1,0"))
         (rule "times_zero_1" (formula "17") (term "1,1,1,0"))
         (rule "add_zero_right" (formula "17") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,0"))
         (rule "times_zero_1" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "closeTrue" (formula "17"))
      )
      (branch "CUT: javaSubInt(end, begin) < self.nextWriteOf(split_bucket) & de.wiesler.Buffers.BUFFER_SIZE <= self.writtenCountOfBucket(split_bucket) FALSE"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "7"))
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "18"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "17"))
      )
   )
   (branch "CUT: ( javaSubInt(end, begin) < self.nextWriteOf(split_bucket) & 256 <= self.writtenCountOfBucket(split_bucket))<<SC>> FALSE"
       (builtin "One Step Simplification" (formula "19") (userinteraction))
      (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "19") (term "1,1") (inst "i=i") (userinteraction))
      (rule "Definition_axiom_for_writtenElementsOfBucketCountElement_in_de_wiesler_BucketPointers" (formula "19") (term "0,1") (userinteraction))
      (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i") (userinteraction))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (userinteraction))
      (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "19") (term "0,1") (inst "i=i") (userinteraction))
      (rule "translateJavaSubInt" (formula "19") (term "0,0") (userinteraction))
      (rule "translateJavaAddInt" (formula "19") (term "0,0,0") (userinteraction))
      (rule "translateJavaAddInt" (formula "19") (term "1,0") (userinteraction))
      (rule "pullOut" (formula "19") (term "0,0") (inst "sk=sub_0") (userinteraction))
      (rule "bsum_split" (formula "20") (term "0,1") (inst "middle=sub_0") (userinteraction))
       (builtin "One Step Simplification" (formula "14"))
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "7"))
      (rule "translateJavaSubInt" (formula "17") (term "1,1,1"))
      (rule "translateJavaAddInt" (formula "17") (term "1,1,1,0,1"))
      (rule "translateJavaAddInt" (formula "17") (term "1,2,0,1"))
      (rule "translateJavaAddInt" (formula "17") (term "0,0,0,0,1"))
      (rule "translateJavaSubInt" (formula "16") (term "0,0"))
      (rule "translateJavaAddInt" (formula "17") (term "1,1,0,0,1"))
      (rule "translateJavaAddInt" (formula "18") (term "2,1,2,0,1"))
      (rule "translateJavaSubInt" (formula "18") (term "3,1,2,0,1"))
      (rule "translateJavaAddInt" (formula "17") (term "0,0,1,0,1"))
      (rule "translateJavaAddInt" (formula "17") (term "0,2,0,1"))
      (rule "translateJavaAddInt" (formula "17") (term "0,1,1"))
      (rule "translateJavaSubInt" (formula "18") (term "0,0,0,1,1"))
      (rule "translateJavaSubInt" (formula "18") (term "2,2,1,1"))
      (rule "translateJavaAddInt" (formula "18") (term "3,2,1,1"))
      (rule "translateJavaAddInt" (formula "11") (term "0,0"))
      (rule "translateJavaAddInt" (formula "11") (term "1"))
      (rule "translateJavaAddInt" (formula "10") (term "0"))
      (rule "translateJavaAddInt" (formula "10") (term "0,1"))
      (rule "translateJavaAddInt" (formula "17") (term "0,1,1,1"))
      (rule "translateJavaAddInt" (formula "18") (term "0,3,1,2,0,1"))
      (rule "translateJavaAddInt" (formula "18") (term "0,2,2,1,1"))
      (rule "translateJavaSubInt" (formula "11") (term "0"))
      (rule "translateJavaSubInt" (formula "10") (term "1"))
      (rule "eqSymm" (formula "17"))
      (rule "replace_known_right" (formula "18") (term "0,1,1") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_elimSub" (formula "1") (term "0"))
      (rule "mul_literals" (formula "1") (term "1,0"))
      (rule "polySimp_elimSub" (formula "16") (term "0,0"))
      (rule "polySimp_elimSub" (formula "11") (term "0"))
      (rule "mul_literals" (formula "11") (term "1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1"))
      (rule "mul_literals" (formula "10") (term "1,1"))
      (rule "polySimp_elimSub" (formula "17") (term "1,1,0"))
      (rule "mul_literals" (formula "17") (term "1,1,1,0"))
      (rule "polySimp_homoEq" (formula "18"))
      (rule "polySimp_homoEq" (formula "1"))
      (rule "polySimp_elimSub" (formula "17") (term "0"))
      (rule "polySimp_elimSub" (formula "18") (term "3,1,2,0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,3,1,2,0,0,0"))
      (rule "polySimp_elimSub" (formula "18") (term "2,1,0,0"))
      (rule "mul_literals" (formula "18") (term "1,2,1,0,0"))
      (rule "polySimp_homoEq" (formula "17"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "10") (term "1"))
      (rule "polySimp_addComm1" (formula "18") (term "3,1,2,0,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "2,1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1"))
      (rule "polySimp_addComm0" (formula "18") (term "0,3,1,2,0,0,0"))
      (rule "polySimp_addComm0" (formula "18") (term "0,2,1,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "18") (term "0,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "11"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
      (rule "mul_literals" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0"))
      (rule "add_zero_right" (formula "11") (term "0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0"))
      (rule "add_zero_right" (formula "11") (term "0"))
      (rule "qeq_literals" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "inEqSimp_homoInEq0" (formula "10"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_sepPosMonomial" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1"))
      (rule "polySimp_rightDist" (formula "17") (term "1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,1"))
      (rule "polySimp_sepNegMonomial" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
      (rule "applyEq" (formula "16") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,1,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,1,0,0,1,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,1,0,0,1,0"))
      (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,1,0,0,1,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,1,0,0,1,0"))
      (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0"))
      (rule "qeq_literals" (formula "16") (term "1,0,0,1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0,0"))
      (rule "add_literals" (formula "16") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "16") (term "0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0"))
      (rule "applyEq" (formula "17") (term "1,3,1,2,0") (ifseqformula "1"))
      (rule "polySimp_addAssoc" (formula "17") (term "3,1,2,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,3,1,2,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,3,1,2,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,3,1,2,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,3,1,2,0"))
      (rule "polySimp_pullOutFactor1" (formula "17") (term "0,3,1,2,0"))
      (rule "add_literals" (formula "17") (term "1,0,3,1,2,0"))
      (rule "times_zero_1" (formula "17") (term "0,3,1,2,0"))
      (rule "add_zero_left" (formula "17") (term "3,1,2,0"))
      (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "1"))
      (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1,0"))
      (rule "add_literals" (formula "16") (term "1,0,1,1,0"))
      (rule "times_zero_1" (formula "16") (term "0,1,1,0"))
      (rule "add_zero_left" (formula "16") (term "1,1,0"))
      (rule "polySimp_pullOutFactor2" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "1,0"))
      (rule "times_zero_1" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "closeTrue" (formula "16"))
   )
)
)
}
