\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jan 03 17:53:57 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src/de/wiesler";

\proofObligation "#Proof Obligation Settings
#Mon Jan 03 17:53:57 CET 2022
contract=de.wiesler.Lemma[de.wiesler.Lemma\\:\\:sum_geq_any_term([I,int,int)].JML normal_behavior operation contract.0
name=de.wiesler.Lemma[de.wiesler.Lemma\\:\\:sum_geq_any_term([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "666bcb0c95"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "666bcb0c95"))

(autoModeTime "3803")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "translateJavaCastInt" (formula "1") (term "1,1,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "7") (term "0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "6"))
 (builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "commute_and" (formula "5") (term "0,0"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_sum_geq_any_term,savedHeapBefore_sum_geq_any_term"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "tryEmpty" (formula "7") (term "1"))
(rule "emptyModality" (formula "7") (term "1"))
(rule "andRight" (formula "7"))
(branch "Case 1"
   (rule "andRight" (formula "7"))
   (branch "Case 1"
       (builtin "One Step Simplification" (formula "7"))
      (rule "allRight" (formula "7") (inst "sk=i_0") (userinteraction))
      (rule "impRight" (formula "7") (userinteraction))
      (rule "int_induction" (inst "b=(   leq(nv, sub(end, begin))<<origin(\"User_Interaction @ node 150 (int_induction)\",\"[]\")>>
 -> \\if (lt(add(begin, nv), add(i_0, Z(1(#))))<<origin(\"User_Interaction @ node 150 (int_induction)\",\"[]\")>>)
        \\then (geq(bsum{int i;}(begin,
                                add(begin, nv),
                                int::select(heap,
                                            values,
                                            arr(i))),
                   Z(0(#)))<<origin(\"User_Interaction @ node 150 (int_induction)\",\"[]\")>>)
        \\else (geq(bsum{int i;}(begin,
                                add(begin, nv),
                                int::select(heap,
                                            values,
                                            arr(i))),
                   int::select(heap, values, arr(i_0)))<<origin(\"User_Interaction @ node 150 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 150 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 150 (int_induction)\",\"[]\")>>") (inst "nv=nv") (userinteraction))
      (branch "Base Case"
         (rule "add_zero_right" (formula "7") (term "1,0,2,1"))
         (rule "bsum_lower_equals_upper" (formula "7") (term "0,2,1"))
         (rule "add_zero_right" (formula "7") (term "1,0,1,1"))
         (rule "bsum_lower_equals_upper" (formula "7") (term "0,1,1"))
         (rule "add_zero_right" (formula "7") (term "0,0,1"))
         (rule "qeq_literals" (formula "7") (term "1,1"))
         (rule "andLeft" (formula "1"))
         (rule "impRight" (formula "8"))
         (rule "polySimp_elimSub" (formula "1") (term "1"))
         (rule "polySimp_addComm0" (formula "9") (term "1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1"))
         (rule "inEqSimp_geqRight" (formula "11"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "2"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "times_zero_2" (formula "2") (term "1,0"))
         (rule "add_zero_right" (formula "2") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "0,0"))
         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
      (branch "Step Case"
         (rule "allRight" (formula "7") (inst "sk=nv_0") (userinteraction))
         (rule "impRight" (formula "7") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "impRight" (formula "9") (userinteraction))
         (rule "impLeft" (formula "3") (userinteraction))
         (branch "Case 1"
            (rule "andLeft" (formula "3"))
            (rule "polySimp_elimSub" (formula "1") (term "1"))
            (rule "polySimp_elimSub" (formula "10") (term "1"))
            (rule "polySimp_addComm0" (formula "11") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,1,0,2"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "polySimp_addComm0" (formula "10") (term "1"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "11") (term "1,0,2"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,0,2"))
            (rule "inEqSimp_geqRight" (formula "13"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "11"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1"))
            (rule "polySimp_rightDist" (formula "6") (term "1"))
            (rule "mul_literals" (formula "6") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
            (rule "mul_literals" (formula "12") (term "0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
         (branch "Case 2"
            (rule "ifthenelse_split_for" (formula "3") (userinteraction))
            (branch "begin + nv_0 < i_0 + 1 TRUE"
               (rule "ifthenelse_split_for" (formula "11") (userinteraction))
               (branch "begin + (nv_0 + 1) < i_0 + 1 TRUE"
                  (rule "bsum_induction_upper" (formula "12") (term "0") (userinteraction))
                  (rule "andLeft" (formula "6"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "1"))
                  (rule "polySimp_elimSub" (formula "13") (term "0,2,1,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "1"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,0,2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,2,1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,2,1,0,0"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,0,2,1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,2,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "1,1,0"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,1,1,0"))
                  (rule "add_zero_right" (formula "13") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0,0"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_invertInEq0" (formula "1") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,1") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "5") (term "0,0"))
                  (rule "add_zero_left" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "qeq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                  (rule "times_zero_1" (formula "6") (term "0,0"))
                  (rule "add_zero_left" (formula "6") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "7") (term "0,0"))
                  (rule "add_zero_left" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "qeq_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "16"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "16"))
                  (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "commute_or" (formula "18") (term "0,0"))
                  (rule "allLeft" (formula "18") (inst "t=add(begin, nv_0)"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                  (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "18") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "closeFalse" (formula "18"))
               )
               (branch "begin + (nv_0 + 1) < i_0 + 1 FALSE"
                  (rule "andLeft" (formula "5"))
                  (rule "polySimp_elimSub" (formula "1") (term "1"))
                  (rule "polySimp_addComm0" (formula "12") (term "1"))
                  (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,1,0"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "6"))
                  (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "8") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1,0"))
                  (rule "add_literals" (formula "8") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "8") (term "0,1,0"))
                  (rule "add_zero_left" (formula "8") (term "1,0"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,0"))
                  (rule "times_zero_1" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,0"))
                  (rule "times_zero_1" (formula "6") (term "0"))
                  (rule "qeq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "1") (term "0,1,0"))
                  (rule "bsum_induction_upper_concrete" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
            (branch "begin + nv_0 < i_0 + 1 FALSE"
               (rule "ifthenelse_split_for" (formula "11") (userinteraction))
               (branch "begin + (nv_0 + 1) < i_0 + 1 TRUE"
                  (rule "andLeft" (formula "5"))
                  (rule "polySimp_elimSub" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "12") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "add_zero_left" (formula "4") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "begin + (nv_0 + 1) < i_0 + 1 FALSE"
                  (rule "bsum_induction_upper" (formula "12") (term "0") (userinteraction))
                  (rule "andLeft" (formula "4"))
                  (rule "polySimp_elimSub" (formula "1") (term "1"))
                  (rule "polySimp_elimSub" (formula "13") (term "0,2,1,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,2,1,1,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "1"))
                  (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,0,2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "1,1,0"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,1,1,0"))
                  (rule "add_zero_right" (formula "13") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,2,1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,2,1,0,0"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,0,2,1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,2,1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "12"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_invertInEq0" (formula "1") (term "0,0,1,1"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,1") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                  (rule "times_zero_1" (formula "5") (term "0,0"))
                  (rule "add_zero_left" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "mul_literals" (formula "10") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "16"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "16"))
                  (rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "commute_or" (formula "18") (term "0,0"))
                  (rule "allLeft" (formula "18") (inst "t=add(begin, nv_0)"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "18") (term "0,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "5"))
                  (rule "andLeft" (formula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0"))
                  (rule "add_zero_right" (formula "18") (term "0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "18") (term "0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0"))
                  (rule "add_zero_right" (formula "18") (term "0"))
                  (rule "leq_literals" (formula "18"))
                  (rule "closeFalse" (formula "18"))
               )
            )
         )
      )
      (branch "Use Case"
         (rule "allLeft" (formula "1") (inst "t=sub(end, begin)") (userinteraction))
         (rule "andLeft" (formula "3"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,1,1"))
         (rule "polySimp_elimSub" (formula "1") (term "0,0"))
         (rule "polySimp_elimSub" (formula "2") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "1") (term "0,0,1"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "2") (term "1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,0,1,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,1,1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "2") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1,1,1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "1") (term "1,0,0,0,1,1"))
         (rule "times_zero_1" (formula "1") (term "0,0,0,1,1"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "1") (term "1,0,2,1,1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,2,1,1"))
         (rule "add_literals" (formula "1") (term "1,0,1,0,2,1,1"))
         (rule "times_zero_1" (formula "1") (term "0,1,0,2,1,1"))
         (rule "add_zero_left" (formula "1") (term "1,0,2,1,1"))
         (rule "replace_known_right" (formula "1") (term "2,1,1") (ifseqformula "11"))
         (rule "polySimp_addAssoc" (formula "1") (term "1,0,1,1,1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,1,1,1"))
         (rule "add_literals" (formula "1") (term "1,0,1,0,1,1,1"))
         (rule "times_zero_1" (formula "1") (term "0,1,0,1,1,1"))
         (rule "add_zero_left" (formula "1") (term "1,0,1,1,1"))
         (rule "inEqSimp_geqRight" (formula "11"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "3") (term "0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,1"))
         (rule "add_zero_left" (formula "2") (term "0,0,0,1,1"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,1,1"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1"))
         (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1"))
         (rule "add_literals" (formula "2") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "2") (term "0,0,1"))
         (rule "qeq_literals" (formula "2") (term "0,1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1"))
         (rule "polySimp_rightDist" (formula "5") (term "1"))
         (rule "mul_literals" (formula "5") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,0"))
         (rule "inEqSimp_contradInEq0" (formula "2") (term "0,1") (ifseqformula "5"))
         (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,1"))
         (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
         (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
         (rule "leq_literals" (formula "2") (term "0,0,1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "notLeft" (formula "2"))
         (rule "inEqSimp_geqRight" (formula "10"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
         (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
         (rule "andLeft" (formula "4"))
         (rule "inEqSimp_homoInEq1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0"))
         (rule "polySimp_addComm1" (formula "4") (term "0,0"))
         (rule "add_literals" (formula "4") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
         (rule "add_literals" (formula "4") (term "1,1,0"))
         (rule "times_zero_1" (formula "4") (term "1,0"))
         (rule "add_zero_right" (formula "4") (term "0"))
         (rule "leq_literals" (formula "4"))
         (rule "closeFalse" (formula "4"))
      )
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "7"))
      (rule "closeTrue" (formula "7"))
   )
)
(branch "Case 2"
    (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)
}
