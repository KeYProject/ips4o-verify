\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jan 09 01:35:42 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sun Jan 09 01:35:42 CET 2022
contract=de.wiesler.Lemma[de.wiesler.Lemma\\:\\:bucketIndexFromOffset([I,int,int)].JML model_behavior operation contract.0
name=de.wiesler.Lemma[de.wiesler.Lemma\\:\\:bucketIndexFromOffset([I,int,int)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "666bcb0c95"))

(autoModeTime "9722")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,heapBefore,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,1,0,1,0,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "allRight" (formula "7") (inst "sk=i_0"))
(rule "impRight" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "4"))
(rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "6") (term "0") (userinteraction))
 (builtin "One Step Simplification" (formula "6"))
(rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "6") (term "0,0,0,0") (userinteraction))
(rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "6") (term "0,1") (inst "i=i") (userinteraction))
 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "6") (term "0,0,0,0,0,0") (userinteraction))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "6") (term "0,1,0,0,0,0") (userinteraction))
(rule "Definition_axiom_for_isValidSlice_in_de_wiesler_Functions" (formula "6") (term "0,0,1") (userinteraction))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "6") (term "0,1,0,0,0,0,0,1") (userinteraction))
(rule "Definition_axiom_for_isBetweenInclusive_in_de_wiesler_Functions" (formula "6") (term "0,1,0,0,0,0,1") (userinteraction))
 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")))
(rule "translateJavaSubInt" (formula "6") (term "1,1,0,0,1,1"))
(rule "translateJavaAddInt" (formula "6") (term "1,0,1,0,0,1"))
(rule "translateJavaAddInt" (formula "6") (term "0,2,1,1,0,1,1"))
(rule "translateJavaAddInt" (formula "6") (term "0,1,1,0,0,1"))
(rule "translateJavaAddInt" (formula "6") (term "1,1,0,1"))
(rule "translateJavaAddInt" (formula "6") (term "1,1,0,0,0"))
(rule "translateJavaAddInt" (formula "6") (term "1,0,1,0,0,0,0"))
(rule "translateJavaAddInt" (formula "6") (term "0,1,1,0,0,0,0"))
(rule "translateJavaAddInt" (formula "6") (term "0,1,1,0,0,1,1"))
(rule "leq_literals" (formula "6") (term "0,0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "6"))
(rule "sub" (formula "6") (term "1,1,0,0,1,1"))
(rule "neg_literal" (formula "6") (term "1,1,1,0,0,1,1"))
(rule "polySimp_addLiterals" (formula "6") (term "1,1,0,0,1,1"))
(rule "add_zero_right" (formula "6") (term "1,1,0,0,1,1"))
(rule "andLeft" (formula "6"))
(rule "leq_literals" (formula "7") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
(rule "polySimp_addComm0" (formula "10") (term "1"))
(rule "polySimp_addComm0" (formula "9") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_homoInEq0" (formula "10"))
(rule "mul_literals" (formula "10") (term "1,0"))
(rule "add_zero_right" (formula "10") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10"))
(rule "mul_literals" (formula "10") (term "1"))
(rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
(rule "leq_literals" (formula "10") (term "0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "true_left" (formula "10"))
(rule "int_induction" (inst "b=(   (  leq(nv,
           num_buckets<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>
     & lt(i_0,
          int::select(heap, bucket_starts, arr(nv)))<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>
 -> (\\exists int b;
       ((  ((leq(Z(0(#)), b)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>
         & lt(b, nv)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>
         & leq(int::select(heap, bucket_starts, arr(b)),
               i_0)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>
         & lt(i_0,
              int::select(heap,
                          bucket_starts,
                          arr(add(b, Z(1(#))))))<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>))<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1144 (int_induction)\",\"[]\")>>") (inst "nv=nv") (userinteraction))
(branch "Base Case"
   (rule "impRight" (formula "12"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addComm0" (formula "16") (term "0,2,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "2") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "3"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "2") (term "1,0"))
   (rule "add_zero_right" (formula "2") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
   (rule "qeq_literals" (formula "2") (term "0"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "closeFalse" (formula "2"))
)
(branch "Step Case"
   (rule "allRight" (formula "12") (inst "sk=nv_0") (userinteraction))
   (rule "impRight" (formula "12") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "impLeft" (formula "2") (userinteraction))
   (branch "Case 1"
      (rule "impRight" (formula "14"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_addComm0" (formula "18") (term "0,2,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,2,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "2") (term "0,2,1"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
      (rule "polySimp_addComm1" (formula "15") (term "0,1"))
      (rule "inEqSimp_ltToLeq" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "4"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
      (rule "polySimp_elimOne" (formula "5") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "15") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0"))
      (rule "qeq_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "inEqSimp_geqRight" (formula "15"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
      (rule "times_zero_1" (formula "4") (term "0,0"))
      (rule "add_zero_left" (formula "4") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
      (rule "mul_literals" (formula "4") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
      (rule "leq_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "nnf_ex2all" (formula "18"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_ex2all" (formula "17"))
      (rule "nnf_notAnd" (formula "2") (term "0"))
      (rule "nnf_notAnd" (formula "1") (term "0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "2") (term "1,0"))
      (rule "inEqSimp_notLeq" (formula "2") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "2") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "2") (term "0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0"))
      (rule "nnf_notAnd" (formula "2") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
      (rule "mul_literals" (formula "2") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
      (rule "shift_paren_or" (formula "2") (term "0"))
      (rule "arrayLengthIsAShort" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "arrayLengthNotNegative" (formula "14") (term "0"))
      (rule "allLeft" (formula "1") (inst "t=nv_0"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
      (rule "leq_literals" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "4"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
      (rule "andLeft" (formula "6"))
      (rule "inEqSimp_homoInEq1" (formula "6"))
      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "1,1,0"))
      (rule "times_zero_1" (formula "6") (term "1,0"))
      (rule "add_zero_right" (formula "6") (term "0"))
      (rule "leq_literals" (formula "6"))
      (rule "closeFalse" (formula "6"))
   )
   (branch "Case 2"
      (rule "impRight" (formula "14") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "exLeft" (formula "4") (inst "sk=b_0") (userinteraction))
      (rule "andLeft" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "polySimp_addComm0" (formula "7") (term "0,2,1"))
      (rule "inEqSimp_ltToLeq" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "4"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
      (rule "polySimp_elimOne" (formula "5") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "polySimp_addComm0" (formula "2") (term "0,2,1"))
      (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,0"))
      (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
      (rule "times_zero_1" (formula "3") (term "0,0"))
      (rule "add_zero_left" (formula "3") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
      (rule "leq_literals" (formula "3") (term "0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
      (rule "mul_literals" (formula "5") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1"))
      (rule "polySimp_rightDist" (formula "5") (term "1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
      (rule "mul_literals" (formula "5") (term "0,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
      (rule "nnf_ex2all" (formula "22"))
      (rule "nnf_ex2all" (formula "21"))
      (rule "nnf_imp2or" (formula "20") (term "0"))
      (rule "nnf_notAnd" (formula "2") (term "0"))
      (rule "nnf_notAnd" (formula "1") (term "0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "2") (term "1,0"))
      (rule "inEqSimp_notLeq" (formula "2") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "2") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "2") (term "0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0"))
      (rule "nnf_notAnd" (formula "2") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
      (rule "mul_literals" (formula "2") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
      (rule "shift_paren_or" (formula "2") (term "0"))
      (rule "arrayLengthIsAShort" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "arrayLengthNotNegative" (formula "19") (term "0"))
      (rule "allLeft" (formula "1") (inst "t=b_0"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "leq_literals" (formula "1") (term "0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
      (rule "leq_literals" (formula "1") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
      (rule "andLeft" (formula "10"))
      (rule "inEqSimp_homoInEq1" (formula "10"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "times_zero_1" (formula "10") (term "1,0"))
      (rule "add_zero_right" (formula "10") (term "0"))
      (rule "leq_literals" (formula "10"))
      (rule "closeFalse" (formula "10"))
   )
)
(branch "Use Case"
   (rule "instAll" (formula "12") (term "0,2,0") (ifseqformula "1") (userinteraction))
   (rule "polySimp_addComm0" (formula "15") (term "0,2,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0,2,1,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "12") (term "0,2,1,1,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1"))
   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1"))
   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1"))
   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,1"))
   (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,0,1"))
   (rule "add_literals" (formula "12") (term "1,0,0,0,1"))
   (rule "times_zero_1" (formula "12") (term "0,0,0,1"))
   (rule "qeq_literals" (formula "12") (term "0,0,1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,1") (ifseqformula "13"))
   (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,1"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1"))
   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1"))
   (rule "inEqSimp_subsumption1" (formula "12") (term "0") (ifseqformula "7"))
   (rule "leq_literals" (formula "12") (term "0,0"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "exLeft" (formula "12") (inst "sk=b_0"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "inEqSimp_homoInEq0" (formula "13"))
   (rule "polySimp_addComm1" (formula "13") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
   (rule "polySimp_mulComm0" (formula "13") (term "1"))
   (rule "polySimp_rightDist" (formula "13") (term "1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
   (rule "mul_literals" (formula "13") (term "0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1"))
   (rule "nnf_ex2all" (formula "18"))
   (rule "nnf_imp2or" (formula "12") (term "0"))
   (rule "nnf_imp2or" (formula "2") (term "0"))
   (rule "inEqSimp_notGeq" (formula "2") (term "0,0"))
   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "nnf_notAnd" (formula "1") (term "0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
   (rule "mul_literals" (formula "12") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "2") (term "1,0"))
   (rule "nnf_notAnd" (formula "1") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "1") (term "1,0"))
   (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "1") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "1") (term "0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
   (rule "nnf_notAnd" (formula "2") (term "0,1,0"))
   (rule "inEqSimp_notGeq" (formula "2") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
   (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
   (rule "add_zero_left" (formula "2") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "1,1,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "2") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
   (rule "shift_paren_or" (formula "1") (term "0"))
   (rule "commute_and_2" (formula "2") (term "0,0,1,1,0"))
   (rule "commute_and_2" (formula "2") (term "0,1,1,0"))
   (rule "arrayLengthIsAShort" (formula "10") (term "0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "arrayLengthNotNegative" (formula "10") (term "0"))
   (rule "ex_pull_out3" (formula "2") (term "1,0"))
   (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
   (rule "shift_paren_or" (formula "2") (term "1,0,1,0"))
   (rule "commute_or" (formula "2") (term "0,1,0,1,0"))
   (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
   (rule "shift_paren_or" (formula "2") (term "1,0,0,1,0"))
   (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,0"))
   (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0"))
   (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,0"))
   (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0"))
   (rule "ex_pull_out3" (formula "2") (term "0"))
   (rule "cnf_rightDist" (formula "2") (term "0,0"))
   (rule "commute_or_2" (formula "2") (term "1,0,0"))
   (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
   (rule "commute_or" (formula "2") (term "0,0,1,0,0"))
   (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
   (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
   (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
   (rule "cnf_rightDist" (formula "2") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
   (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
   (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0"))
   (rule "allLeft" (formula "1") (inst "t=b_0"))
   (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "leq_literals" (formula "1") (term "0,1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "15"))
   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
   (rule "leq_literals" (formula "1") (term "0,1,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "16"))
   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "leq_literals" (formula "1") (term "0,1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
   (rule "qeq_literals" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)
}
